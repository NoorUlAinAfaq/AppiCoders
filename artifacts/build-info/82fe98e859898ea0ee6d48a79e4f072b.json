{
	"id": "82fe98e859898ea0ee6d48a79e4f072b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"referralSystem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ReferralRewards is Ownable {\r\n    // Custom ERC20 token for rewards\r\n    RewardToken public rewardToken;\r\n    \r\n    // Address authorized to trigger referral rewards (backend wallet)\r\n    address public authorizedAddress;\r\n    \r\n    // Referral rewards in tokens (configurable)\r\n    uint256 public referrerReward = 50 * 10**18; // 50 tokens\r\n    uint256 public refereeReward = 25 * 10**18; // 25 tokens\r\n    \r\n    // Mapping to track if an address has already been referred\r\n    mapping(address => bool) public hasBeenReferred;\r\n    \r\n    // Mapping to track referrer of each user\r\n    mapping(address => address) public referrerOf;\r\n    \r\n    // Mapping to track all referees for a given referrer\r\n    mapping(address => address[]) public refereesOf;\r\n    \r\n    // Events\r\n    event ReferralRegistered(address indexed referrer, address indexed referee, uint256 timestamp);\r\n    event RewardsDistributed(address indexed referrer, address indexed referee, uint256 referrerAmount, uint256 refereeAmount);\r\n    event AuthorizedAddressChanged(address indexed previousBackend, address indexed newBackend);\r\n    event RewardAmountsChanged(uint256 newReferrerReward, uint256 newRefereeReward);\r\n    \r\n    \r\n    constructor() Ownable(msg.sender) {\r\n        rewardToken = new RewardToken();\r\n        authorizedAddress = msg.sender; // Initially set the deployer as the authorized backend\r\n    }\r\n    \r\n  \r\n    modifier onlyAuthorizedAddress() {\r\n        require(msg.sender == authorizedAddress, \"Not authorized\");\r\n        _;\r\n    }\r\n    \r\n\r\n    function setAuthorizedAddres(address _newAddress) external onlyOwner {\r\n        require(_newAddress != address(0), \"Invalid address\");\r\n        emit AuthorizedAddressChanged(authorizedAddress, _newAddress);\r\n        authorizedAddress = _newAddress;\r\n    }\r\n    \r\n    \r\n    function setRewardAmounts(uint256 _referrerReward, uint256 _refereeReward) external onlyOwner {\r\n        referrerReward = _referrerReward;\r\n        refereeReward = _refereeReward;\r\n        emit RewardAmountsChanged(_referrerReward, _refereeReward);\r\n    }\r\n    \r\n\r\n    function processReferral(address _referrer,address _referee) external onlyAuthorizedAddress {\r\n        // Validate addresses\r\n        require(_referee != address(0) && _referrer != address(0), \"Invalid address\");\r\n        \r\n        // Prevent self-referrals\r\n        require(_referee != _referrer, \"Self-referral not allowed\");\r\n        \r\n        // Ensure the referee has not been referred before\r\n        require(!hasBeenReferred[_referee], \"User already referred\");\r\n        \r\n        // Prevent circular referrals (A → B → A)\r\n        address currentReferrer = _referrer;\r\n        while (currentReferrer != address(0)) {\r\n            require(currentReferrer != _referee, \"Circular referral detected\");\r\n            currentReferrer = referrerOf[currentReferrer];\r\n        }\r\n        \r\n        // Register the referral\r\n        hasBeenReferred[_referee] = true;\r\n        referrerOf[_referee] = _referrer;\r\n        refereesOf[_referrer].push(_referee);\r\n        \r\n        emit ReferralRegistered(_referrer, _referee, block.timestamp);\r\n        \r\n        // Distribute rewards\r\n        rewardToken.mint(_referrer, referrerReward);\r\n        rewardToken.mint(_referee, refereeReward);\r\n        \r\n        emit RewardsDistributed(_referrer, _referee, referrerReward, refereeReward);\r\n    }\r\n   \r\n    function getReferees(address _referrer) external view returns (address[] memory) {\r\n        return refereesOf[_referrer];\r\n    }\r\n    \r\n\r\n    function getRefereeCount(address _referrer) external view returns (uint256) {\r\n        return refereesOf[_referrer].length;\r\n    }\r\n}\r\n\r\n\r\ncontract RewardToken is ERC20, Ownable {\r\n    // The ReferralRewards contract that is authorized to mint tokens\r\n    address public minter;\r\n    \r\n    \r\n    constructor() ERC20(\"Referral Reward\", \"RFR\") Ownable(msg.sender) {\r\n        minter = msg.sender; // Initially set to the deployer\r\n    }\r\n  \r\n    modifier onlyMinter() {\r\n        require(msg.sender == minter, \"Not authorized to mint\");\r\n        _;\r\n    }\r\n    \r\n\r\n    function setMinter(address _minter) external onlyOwner {\r\n        require(_minter != address(0), \"Invalid minter address\");\r\n        minter = _minter;\r\n    }\r\n   \r\n    function mint(address _to, uint256 _amount) external onlyMinter {\r\n        _mint(_to, _amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"referralSystem.sol": {
				"ReferralRewards": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousBackend",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBackend",
									"type": "address"
								}
							],
							"name": "AuthorizedAddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ReferralRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newReferrerReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRefereeReward",
									"type": "uint256"
								}
							],
							"name": "RewardAmountsChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "referrerAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "refereeAmount",
									"type": "uint256"
								}
							],
							"name": "RewardsDistributed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authorizedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								}
							],
							"name": "getRefereeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								}
							],
							"name": "getReferees",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasBeenReferred",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_referee",
									"type": "address"
								}
							],
							"name": "processReferral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refereeReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "refereesOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referrerReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract RewardToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAddress",
									"type": "address"
								}
							],
							"name": "setAuthorizedAddres",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_referrerReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_refereeReward",
									"type": "uint256"
								}
							],
							"name": "setRewardAmounts",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"referralSystem.sol\":174:3837  contract ReferralRewards is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"referralSystem.sol\":498:509  50 * 10**18 */\n  0x02b5e3af16b1880000\n    /* \"referralSystem.sol\":466:509  uint256 public referrerReward = 50 * 10**18 */\n  0x03\n  sstore\n    /* \"referralSystem.sol\":560:571  25 * 10**18 */\n  0x015af1d78b58c40000\n    /* \"referralSystem.sol\":529:571  uint256 public refereeReward = 25 * 10**18 */\n  0x04\n  sstore\n    /* \"referralSystem.sol\":1387:1568  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"referralSystem.sol\":1409:1419  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"referralSystem.sol\":1446:1463  new RewardToken() */\n  mload(0x40)\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_13:\n  pop\n    /* \"referralSystem.sol\":1432:1443  rewardToken */\n  0x01\n    /* \"referralSystem.sol\":1432:1463  rewardToken = new RewardToken() */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"referralSystem.sol\":1474:1491  authorizedAddress */\n  0x02\n    /* \"referralSystem.sol\":1474:1504  authorizedAddress = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"referralSystem.sol\":1494:1504  msg.sender */\n  caller\n    /* \"referralSystem.sol\":1474:1504  authorizedAddress = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"referralSystem.sol\":174:3837  contract ReferralRewards is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"referralSystem.sol\":174:3837  contract ReferralRewards is Ownable {... */\ntag_12:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":14:217   */\ntag_16:\n    /* \"referralSystem.sol\":174:3837  contract ReferralRewards is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"referralSystem.sol\":174:3837  contract ReferralRewards is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x865aa800\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd499bc85\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd499bc85\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd62c1164\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x865aa800\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd113ef7c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd21cacdf\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x544ef43e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x544ef43e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5539d400\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x55bf73be\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x0763f34e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27b692f2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c070d7d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"referralSystem.sol\":466:509  uint256 public referrerReward = 50 * 10**18 */\n    tag_3:\n      tag_21\n      sload(0x03)\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"referralSystem.sol\":466:509  uint256 public referrerReward = 50 * 10**18 */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"referralSystem.sol\":886:933  mapping(address => address[]) public refereesOf */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":843:875   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":825:876   */\n      dup2\n      mstore\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":798:816   */\n      add\n        /* \"referralSystem.sol\":886:933  mapping(address => address[]) public refereesOf */\n      tag_23\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"referralSystem.sol\":3704:3834  function getRefereeCount(address _referrer) external view returns (uint256) {... */\n    tag_5:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3798:3819  refereesOf[_referrer] */\n      and\n        /* \"referralSystem.sol\":3771:3778  uint256 */\n      0x00\n        /* \"referralSystem.sol\":3798:3819  refereesOf[_referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"referralSystem.sol\":3798:3808  refereesOf */\n      0x07\n        /* \"referralSystem.sol\":3798:3819  refereesOf[_referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"referralSystem.sol\":3798:3826  refereesOf[_referrer].length */\n      sload\n      swap1\n        /* \"referralSystem.sol\":3704:3834  function getRefereeCount(address _referrer) external view returns (uint256) {... */\n      jump\n        /* \"referralSystem.sol\":529:571  uint256 public refereeReward = 25 * 10**18 */\n    tag_6:\n      tag_21\n      sload(0x04)\n      dup2\n      jump\n        /* \"referralSystem.sol\":371:403  address public authorizedAddress */\n    tag_7:\n      sload(0x02)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"referralSystem.sol\":2262:3551  function processReferral(address _referrer,address _referee) external onlyAuthorizedAddress {... */\n    tag_8:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_42\n      tag_47\n      jump\t// in\n        /* \"referralSystem.sol\":1720:1975  function setAuthorizedAddres(address _newAddress) external onlyOwner {... */\n    tag_10:\n      tag_42\n      tag_49\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_25)\n        /* \"referralSystem.sol\":1993:2248  function setRewardAmounts(uint256 _referrerReward, uint256 _refereeReward) external onlyOwner {... */\n    tag_12:\n      tag_42\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"referralSystem.sol\":769:814  mapping(address => address) public referrerOf */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_59:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"referralSystem.sol\":3562:3690  function getReferees(address _referrer) external view returns (address[] memory) {... */\n    tag_14:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"referralSystem.sol\":662:709  mapping(address => bool) public hasBeenReferred */\n    tag_15:\n      tag_67\n      tag_68\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_68:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":2501:2515   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2494:2516   */\n      iszero\n        /* \"#utility.yul\":2476:2517   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"referralSystem.sol\":662:709  mapping(address => bool) public hasBeenReferred */\n      tag_23\n        /* \"#utility.yul\":2336:2523   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_42\n      tag_73\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"referralSystem.sol\":256:286  RewardToken public rewardToken */\n    tag_17:\n      sload(0x01)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"referralSystem.sol\":886:933  mapping(address => address[]) public refereesOf */\n    tag_28:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"referralSystem.sol\":2262:3551  function processReferral(address _referrer,address _referee) external onlyAuthorizedAddress {... */\n    tag_45:\n        /* \"referralSystem.sol\":1650:1667  authorizedAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"referralSystem.sol\":1636:1646  msg.sender */\n      caller\n        /* \"referralSystem.sol\":1636:1667  msg.sender == authorizedAddress */\n      eq\n        /* \"referralSystem.sol\":1628:1686  require(msg.sender == authorizedAddress, \"Not authorized\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2958:2960   */\n      0x20\n        /* \"referralSystem.sol\":1628:1686  require(msg.sender == authorizedAddress, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2940:2961   */\n      mstore\n        /* \"#utility.yul\":2997:2999   */\n      0x0e\n        /* \"#utility.yul\":2977:2995   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2970:3000   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":3016:3034   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3009:3053   */\n      mstore\n        /* \"#utility.yul\":3070:3088   */\n      0x64\n      add\n        /* \"referralSystem.sol\":1628:1686  require(msg.sender == authorizedAddress, \"Not authorized\") */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2404:2426  _referee != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"referralSystem.sol\":2404:2453  _referee != address(0) && _referrer != address(0) */\n      tag_87\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2430:2453  _referrer != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"referralSystem.sol\":2404:2453  _referee != address(0) && _referrer != address(0) */\n    tag_87:\n        /* \"referralSystem.sol\":2396:2473  require(_referee != address(0) && _referrer != address(0), \"Invalid address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"referralSystem.sol\":2396:2473  require(_referee != address(0) && _referrer != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3283:3304   */\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x0f\n        /* \"#utility.yul\":3320:3338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":3359:3377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3352:3397   */\n      mstore\n        /* \"#utility.yul\":3414:3432   */\n      0x64\n      add\n        /* \"referralSystem.sol\":2396:2473  require(_referee != address(0) && _referrer != address(0), \"Invalid address\") */\n      tag_84\n        /* \"#utility.yul\":3099:3438   */\n      jump\n        /* \"referralSystem.sol\":2396:2473  require(_referee != address(0) && _referrer != address(0), \"Invalid address\") */\n    tag_88:\n        /* \"referralSystem.sol\":2549:2558  _referrer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2537:2558  _referee != _referrer */\n      and\n        /* \"referralSystem.sol\":2537:2545  _referee */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2537:2558  _referee != _referrer */\n      and\n      sub\n        /* \"referralSystem.sol\":2529:2588  require(_referee != _referrer, \"Self-referral not allowed\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3645:3647   */\n      0x20\n        /* \"referralSystem.sol\":2529:2588  require(_referee != _referrer, \"Self-referral not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3627:3648   */\n      mstore\n        /* \"#utility.yul\":3684:3686   */\n      0x19\n        /* \"#utility.yul\":3664:3682   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3657:3687   */\n      mstore\n        /* \"#utility.yul\":3723:3750   */\n      0x53656c662d726566657272616c206e6f7420616c6c6f77656400000000000000\n        /* \"#utility.yul\":3703:3721   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3696:3751   */\n      mstore\n        /* \"#utility.yul\":3768:3786   */\n      0x64\n      add\n        /* \"referralSystem.sol\":2529:2588  require(_referee != _referrer, \"Self-referral not allowed\") */\n      tag_84\n        /* \"#utility.yul\":3443:3792   */\n      jump\n        /* \"referralSystem.sol\":2529:2588  require(_referee != _referrer, \"Self-referral not allowed\") */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2678:2703  hasBeenReferred[_referee] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"referralSystem.sol\":2678:2693  hasBeenReferred */\n      0x05\n        /* \"referralSystem.sol\":2678:2703  hasBeenReferred[_referee] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"referralSystem.sol\":2677:2703  !hasBeenReferred[_referee] */\n      iszero\n        /* \"referralSystem.sol\":2669:2729  require(!hasBeenReferred[_referee], \"User already referred\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3999:4001   */\n      0x20\n        /* \"referralSystem.sol\":2669:2729  require(!hasBeenReferred[_referee], \"User already referred\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3981:4002   */\n      mstore\n        /* \"#utility.yul\":4038:4040   */\n      0x15\n        /* \"#utility.yul\":4018:4036   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4011:4041   */\n      mstore\n      shl(0x5a, 0x155cd95c88185b1c9958591e481c9959995c9c9959)\n        /* \"#utility.yul\":4057:4075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4050:4101   */\n      mstore\n        /* \"#utility.yul\":4118:4136   */\n      0x64\n      add\n        /* \"referralSystem.sol\":2669:2729  require(!hasBeenReferred[_referee], \"User already referred\") */\n      tag_84\n        /* \"#utility.yul\":3797:4142   */\n      jump\n        /* \"referralSystem.sol\":2669:2729  require(!hasBeenReferred[_referee], \"User already referred\") */\n    tag_94:\n        /* \"referralSystem.sol\":2831:2840  _referrer */\n      dup2\n        /* \"referralSystem.sol\":2851:3042  while (currentReferrer != address(0)) {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2858:2887  currentReferrer != address(0) */\n      dup2\n      and\n      iszero\n        /* \"referralSystem.sol\":2851:3042  while (currentReferrer != address(0)) {... */\n      tag_98\n      jumpi\n        /* \"referralSystem.sol\":2931:2939  _referee */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2912:2939  currentReferrer != _referee */\n      and\n        /* \"referralSystem.sol\":2912:2927  currentReferrer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":2912:2939  currentReferrer != _referee */\n      and\n      sub\n        /* \"referralSystem.sol\":2904:2970  require(currentReferrer != _referee, \"Circular referral detected\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4349:4351   */\n      0x20\n        /* \"referralSystem.sol\":2904:2970  require(currentReferrer != _referee, \"Circular referral detected\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4331:4352   */\n      mstore\n        /* \"#utility.yul\":4388:4390   */\n      0x1a\n        /* \"#utility.yul\":4368:4386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4361:4391   */\n      mstore\n        /* \"#utility.yul\":4427:4455   */\n      0x43697263756c617220726566657272616c206465746563746564000000000000\n        /* \"#utility.yul\":4407:4425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4400:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"referralSystem.sol\":2904:2970  require(currentReferrer != _referee, \"Circular referral detected\") */\n      tag_84\n        /* \"#utility.yul\":4147:4497   */\n      jump\n        /* \"referralSystem.sol\":2904:2970  require(currentReferrer != _referee, \"Circular referral detected\") */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3003:3030  referrerOf[currentReferrer] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"referralSystem.sol\":3003:3013  referrerOf */\n      0x06\n        /* \"referralSystem.sol\":3003:3030  referrerOf[currentReferrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"referralSystem.sol\":2851:3042  while (currentReferrer != address(0)) {... */\n      jump(tag_97)\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3096:3121  hasBeenReferred[_referee] */\n      dup3\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"referralSystem.sol\":3096:3111  hasBeenReferred */\n      0x05\n        /* \"referralSystem.sol\":3096:3121  hasBeenReferred[_referee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"referralSystem.sol\":3096:3128  hasBeenReferred[_referee] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"referralSystem.sol\":3124:3128  true */\n      0x01\n        /* \"referralSystem.sol\":3096:3128  hasBeenReferred[_referee] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"referralSystem.sol\":3139:3149  referrerOf */\n      0x06\n        /* \"referralSystem.sol\":3139:3159  referrerOf[_referee] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"referralSystem.sol\":3139:3171  referrerOf[_referee] = _referrer */\n      dup1\n      sload\n      swap7\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap8\n      dup9\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"referralSystem.sol\":3182:3203  refereesOf[_referrer] */\n      dup1\n      dup6\n      mstore\n        /* \"referralSystem.sol\":3182:3192  refereesOf */\n      0x07\n        /* \"referralSystem.sol\":3182:3203  refereesOf[_referrer] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"referralSystem.sol\":3182:3218  refereesOf[_referrer].push(_referee) */\n      dup1\n      sload\n      swap3\n      dup4\n      add\n      dup2\n      sstore\n      dup6\n      mstore\n      swap4\n      dup4\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      swap1\n      swap6\n      and\n      dup5\n      or\n      swap1\n      swap5\n      sstore\n        /* \"referralSystem.sol\":3244:3300  ReferralRegistered(_referrer, _referee, block.timestamp) */\n      swap3\n      mload\n        /* \"referralSystem.sol\":3284:3299  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"referralSystem.sol\":3096:3121  hasBeenReferred[_referee] */\n      swap2\n      swap3\n        /* \"referralSystem.sol\":3139:3171  referrerOf[_referee] = _referrer */\n      swap1\n      swap2\n        /* \"referralSystem.sol\":3244:3300  ReferralRegistered(_referrer, _referee, block.timestamp) */\n      0x90eab5d1df713df401d810f26aa9718d2b9e6894af1eb4890a332d3b185dc0e5\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"referralSystem.sol\":3244:3300  ReferralRegistered(_referrer, _referee, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"referralSystem.sol\":3352:3363  rewardToken */\n      sload(0x01)\n        /* \"referralSystem.sol\":3380:3394  referrerReward */\n      sload(0x03)\n        /* \"referralSystem.sol\":3352:3395  rewardToken.mint(_referrer, referrerReward) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4694:4726   */\n      dup7\n      dup2\n      and\n        /* \"referralSystem.sol\":3352:3395  rewardToken.mint(_referrer, referrerReward) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4676:4727   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4736:4770   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"referralSystem.sol\":3352:3363  rewardToken */\n      swap2\n      and\n      swap1\n        /* \"referralSystem.sol\":3352:3368  rewardToken.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":4649:4667   */\n      0x44\n      add\n        /* \"referralSystem.sol\":3352:3395  rewardToken.mint(_referrer, referrerReward) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n        /* \"referralSystem.sol\":3406:3417  rewardToken */\n      sload(0x01)\n        /* \"referralSystem.sol\":3433:3446  refereeReward */\n      0x04\n      dup1\n      sload\n        /* \"referralSystem.sol\":3406:3447  rewardToken.mint(_referee, refereeReward) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3406:3417  rewardToken */\n      swap1\n      swap4\n      and\n      swap5\n      pop\n        /* \"referralSystem.sol\":3406:3422  rewardToken.mint */\n      0x40c10f19\n      swap4\n      pop\n        /* \"referralSystem.sol\":3406:3447  rewardToken.mint(_referee, refereeReward) */\n      tag_109\n      swap3\n        /* \"referralSystem.sol\":3423:3431  _referee */\n      dup8\n      swap3\n        /* \"referralSystem.sol\":3406:3447  rewardToken.mint(_referee, refereeReward) */\n      add\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4694:4726   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4676:4727   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4758:4760   */\n      0x20\n        /* \"#utility.yul\":4743:4761   */\n      dup3\n      add\n        /* \"#utility.yul\":4736:4770   */\n      mstore\n        /* \"#utility.yul\":4664:4666   */\n      0x40\n        /* \"#utility.yul\":4649:4667   */\n      add\n      swap1\n        /* \"#utility.yul\":4502:4776   */\n      jump\n        /* \"referralSystem.sol\":3406:3447  rewardToken.mint(_referee, refereeReward) */\n    tag_109:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n        /* \"referralSystem.sol\":3503:3511  _referee */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3473:3543  RewardsDistributed(_referrer, _referee, referrerReward, refereeReward) */\n      and\n        /* \"referralSystem.sol\":3492:3501  _referrer */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3473:3543  RewardsDistributed(_referrer, _referee, referrerReward, refereeReward) */\n      and\n      0x1a4dfb075362880d700ede1cc31d284b1c3b2811e9f0b2ddde7bdb270042c13f\n        /* \"referralSystem.sol\":3513:3527  referrerReward */\n      sload(0x03)\n        /* \"referralSystem.sol\":3529:3542  refereeReward */\n      sload(0x04)\n        /* \"referralSystem.sol\":3473:3543  RewardsDistributed(_referrer, _referee, referrerReward, refereeReward) */\n      mload(0x40)\n      tag_113\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":4955:4980   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":4996:5014   */\n      dup3\n      add\n        /* \"#utility.yul\":4989:5023   */\n      mstore\n        /* \"#utility.yul\":4943:4945   */\n      0x40\n        /* \"#utility.yul\":4928:4946   */\n      add\n      swap1\n        /* \"#utility.yul\":4781:5029   */\n      jump\n        /* \"referralSystem.sol\":3473:3543  RewardsDistributed(_referrer, _referee, referrerReward, refereeReward) */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"referralSystem.sol\":2354:3551  {... */\n      pop\n        /* \"referralSystem.sol\":2262:3551  function processReferral(address _referrer,address _referee) external onlyAuthorizedAddress {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"referralSystem.sol\":1720:1975  function setAuthorizedAddres(address _newAddress) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":1808:1833  _newAddress != address(0) */\n      dup2\n      and\n        /* \"referralSystem.sol\":1800:1853  require(_newAddress != address(0), \"Invalid address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"referralSystem.sol\":1800:1853  require(_newAddress != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3283:3304   */\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x0f\n        /* \"#utility.yul\":3320:3338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":3359:3377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3352:3397   */\n      mstore\n        /* \"#utility.yul\":3414:3432   */\n      0x64\n      add\n        /* \"referralSystem.sol\":1800:1853  require(_newAddress != address(0), \"Invalid address\") */\n      tag_84\n        /* \"#utility.yul\":3099:3438   */\n      jump\n        /* \"referralSystem.sol\":1800:1853  require(_newAddress != address(0), \"Invalid address\") */\n    tag_124:\n        /* \"referralSystem.sol\":1894:1911  authorizedAddress */\n      sload(0x02)\n        /* \"referralSystem.sol\":1869:1925  AuthorizedAddressChanged(authorizedAddress, _newAddress) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"referralSystem.sol\":1894:1911  authorizedAddress */\n      and\n      swap1\n        /* \"referralSystem.sol\":1869:1925  AuthorizedAddressChanged(authorizedAddress, _newAddress) */\n      0x86c40840b13041fdf3b73496c0f80da8bef6a34805cb1ca99e01fd3e13d4b196\n      swap1\n        /* \"referralSystem.sol\":1894:1911  authorizedAddress */\n      0x00\n      swap1\n        /* \"referralSystem.sol\":1869:1925  AuthorizedAddressChanged(authorizedAddress, _newAddress) */\n      log3\n        /* \"referralSystem.sol\":1936:1953  authorizedAddress */\n      0x02\n        /* \"referralSystem.sol\":1936:1967  authorizedAddress = _newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"referralSystem.sol\":1720:1975  function setAuthorizedAddres(address _newAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"referralSystem.sol\":1993:2248  function setRewardAmounts(uint256 _referrerReward, uint256 _refereeReward) external onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"referralSystem.sol\":2098:2112  referrerReward */\n      0x03\n        /* \"referralSystem.sol\":2098:2130  referrerReward = _referrerReward */\n      dup3\n      swap1\n      sstore\n        /* \"referralSystem.sol\":2141:2154  refereeReward */\n      0x04\n        /* \"referralSystem.sol\":2141:2171  refereeReward = _refereeReward */\n      dup2\n      swap1\n      sstore\n        /* \"referralSystem.sol\":2187:2240  RewardAmountsChanged(_referrerReward, _refereeReward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4955:4980   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":4996:5014   */\n      dup2\n      add\n        /* \"#utility.yul\":4989:5023   */\n      dup4\n      swap1\n      mstore\n        /* \"referralSystem.sol\":2187:2240  RewardAmountsChanged(_referrerReward, _refereeReward) */\n      0x457ddc8afba479da2edda90d1b2c537cee16f285d7eb06529b28aabe56a0e974\n      swap2\n        /* \"#utility.yul\":4928:4946   */\n      add\n        /* \"referralSystem.sol\":2187:2240  RewardAmountsChanged(_referrerReward, _refereeReward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"referralSystem.sol\":1993:2248  function setRewardAmounts(uint256 _referrerReward, uint256 _refereeReward) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"referralSystem.sol\":3562:3690  function getReferees(address _referrer) external view returns (address[] memory) {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":3661:3682  refereesOf[_referrer] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"referralSystem.sol\":3661:3671  refereesOf */\n      0x07\n        /* \"referralSystem.sol\":3661:3682  refereesOf[_referrer] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"referralSystem.sol\":3654:3682  return refereesOf[_referrer] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"referralSystem.sol\":3625:3641  address[] memory */\n      0x60\n      swap4\n        /* \"referralSystem.sol\":3654:3682  return refereesOf[_referrer] */\n      swap3\n      dup4\n      add\n        /* \"referralSystem.sol\":3661:3682  refereesOf[_referrer] */\n      dup3\n        /* \"referralSystem.sol\":3654:3682  return refereesOf[_referrer] */\n      dup3\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"referralSystem.sol\":3562:3690  function getReferees(address _referrer) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_84\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":825:876   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_84\n        /* \"#utility.yul\":679:882   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:369   */\n    tag_149:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      0x00\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_153:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:674   */\n    tag_27:\n        /* \"#utility.yul\":442:448   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      0x00\n        /* \"#utility.yul\":503:505   */\n      0x40\n        /* \"#utility.yul\":491:500   */\n      dup4\n        /* \"#utility.yul\":482:489   */\n      dup6\n        /* \"#utility.yul\":478:501   */\n      sub\n        /* \"#utility.yul\":474:506   */\n      slt\n        /* \"#utility.yul\":471:523   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      0x00\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":471:523   */\n    tag_155:\n        /* \"#utility.yul\":542:571   */\n      tag_156\n        /* \"#utility.yul\":561:570   */\n      dup4\n        /* \"#utility.yul\":542:571   */\n      tag_149\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":532:571   */\n      swap5\n        /* \"#utility.yul\":640:642   */\n      0x20\n        /* \"#utility.yul\":625:643   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":612:644   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":374:674   */\n      jump\t// out\n        /* \"#utility.yul\":887:1073   */\n    tag_33:\n        /* \"#utility.yul\":946:952   */\n      0x00\n        /* \"#utility.yul\":999:1001   */\n      0x20\n        /* \"#utility.yul\":987:996   */\n      dup3\n        /* \"#utility.yul\":978:985   */\n      dup5\n        /* \"#utility.yul\":974:997   */\n      sub\n        /* \"#utility.yul\":970:1002   */\n      slt\n        /* \"#utility.yul\":967:1019   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":967:1019   */\n    tag_159:\n        /* \"#utility.yul\":1038:1067   */\n      tag_160\n        /* \"#utility.yul\":1057:1066   */\n      dup3\n        /* \"#utility.yul\":1038:1067   */\n      tag_149\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1028:1067   */\n      swap4\n        /* \"#utility.yul\":887:1073   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1338   */\n    tag_44:\n        /* \"#utility.yul\":1146:1152   */\n      0x00\n        /* \"#utility.yul\":1154:1160   */\n      0x00\n        /* \"#utility.yul\":1207:1209   */\n      0x40\n        /* \"#utility.yul\":1195:1204   */\n      dup4\n        /* \"#utility.yul\":1186:1193   */\n      dup6\n        /* \"#utility.yul\":1182:1205   */\n      sub\n        /* \"#utility.yul\":1178:1210   */\n      slt\n        /* \"#utility.yul\":1175:1227   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1223:1224   */\n      0x00\n        /* \"#utility.yul\":1220:1221   */\n      0x00\n        /* \"#utility.yul\":1213:1225   */\n      revert\n        /* \"#utility.yul\":1175:1227   */\n    tag_162:\n        /* \"#utility.yul\":1246:1275   */\n      tag_163\n        /* \"#utility.yul\":1265:1274   */\n      dup4\n        /* \"#utility.yul\":1246:1275   */\n      tag_149\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1236:1275   */\n      swap2\n      pop\n        /* \"#utility.yul\":1294:1332   */\n      tag_164\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup5\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1294:1332   */\n      tag_149\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1284:1332   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1338   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1343:1689   */\n    tag_56:\n        /* \"#utility.yul\":1411:1417   */\n      0x00\n        /* \"#utility.yul\":1419:1425   */\n      0x00\n        /* \"#utility.yul\":1472:1474   */\n      0x40\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1451:1458   */\n      dup6\n        /* \"#utility.yul\":1447:1470   */\n      sub\n        /* \"#utility.yul\":1443:1475   */\n      slt\n        /* \"#utility.yul\":1440:1492   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1488:1489   */\n      0x00\n        /* \"#utility.yul\":1485:1486   */\n      0x00\n        /* \"#utility.yul\":1478:1490   */\n      revert\n        /* \"#utility.yul\":1440:1492   */\n    tag_166:\n      pop\n      pop\n        /* \"#utility.yul\":1533:1556   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1653:1655   */\n      0x20\n        /* \"#utility.yul\":1638:1656   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1625:1657   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1343:1689   */\n      jump\t// out\n        /* \"#utility.yul\":1694:2331   */\n    tag_66:\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1896:1917   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1966:1979   */\n      dup3\n      mload\n        /* \"#utility.yul\":1869:1887   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1988:2010   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1836:1840   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2067:2082   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2041:2043   */\n      0x40\n        /* \"#utility.yul\":2026:2044   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1836:1840   */\n      dup4\n        /* \"#utility.yul\":2110:2305   */\n    tag_168:\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2121:2122   */\n      dup2\n        /* \"#utility.yul\":2118:2131   */\n      lt\n        /* \"#utility.yul\":2110:2305   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2189:2202   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2185:2224   */\n      and\n        /* \"#utility.yul\":2173:2225   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2254:2256   */\n      0x20\n        /* \"#utility.yul\":2280:2295   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2245:2257   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2221:2222   */\n      0x01\n        /* \"#utility.yul\":2139:2148   */\n      add\n        /* \"#utility.yul\":2110:2305   */\n      jump(tag_168)\n    tag_170:\n      pop\n        /* \"#utility.yul\":2322:2325   */\n      swap1\n      swap6\n        /* \"#utility.yul\":1694:2331   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220186cff24bf81d2c40266c4870451e9671490c61cbf4e6dbec2cc81c750c4f1c364736f6c634300081d0033\n}\n\nsub_1: assembly {\n        /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n        /* \"referralSystem.sol\":4000:4137  constructor() ERC20(\"Referral Reward\", \"RFR\") Ownable(msg.sender) {... */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n        /* \"referralSystem.sol\":4054:4064  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x8a, 0x149959995c9c985b0814995dd85c99)\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe9, 0x292329)\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n      swap1\n      dup2\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n      tag_8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n      tag_7\n      jump\t// in\n    tag_8:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_10\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2801:2852   */\n      mstore\n        /* \"#utility.yul\":2774:2792   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      tag_13\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n      tag_14\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_13:\n      pop\n        /* \"referralSystem.sol\":4077:4083  minter */\n      0x06\n        /* \"referralSystem.sol\":4077:4096  minter = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"referralSystem.sol\":4086:4096  msg.sender */\n      caller\n        /* \"referralSystem.sol\":4077:4096  minter = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_18:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:526   */\n    tag_19:\n        /* \"#utility.yul\":225:226   */\n      0x01\n        /* \"#utility.yul\":221:233   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":268:280   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":289:350   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":343:347   */\n      0x7f\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":331:348   */\n      and\n        /* \"#utility.yul\":321:348   */\n      swap2\n      pop\n        /* \"#utility.yul\":289:350   */\n    tag_26:\n        /* \"#utility.yul\":396:398   */\n      0x20\n        /* \"#utility.yul\":388:394   */\n      dup3\n        /* \"#utility.yul\":385:399   */\n      lt\n        /* \"#utility.yul\":365:383   */\n      dup2\n        /* \"#utility.yul\":362:400   */\n      sub\n        /* \"#utility.yul\":359:520   */\n      tag_27\n      jumpi\n        /* \"#utility.yul\":442:452   */\n      0x4e487b71\n        /* \"#utility.yul\":437:440   */\n      0xe0\n        /* \"#utility.yul\":433:453   */\n      shl\n        /* \"#utility.yul\":430:431   */\n      0x00\n        /* \"#utility.yul\":423:454   */\n      mstore\n        /* \"#utility.yul\":477:481   */\n      0x22\n        /* \"#utility.yul\":474:475   */\n      0x04\n        /* \"#utility.yul\":467:482   */\n      mstore\n        /* \"#utility.yul\":505:509   */\n      0x24\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":495:510   */\n      revert\n        /* \"#utility.yul\":359:520   */\n    tag_27:\n      pop\n        /* \"#utility.yul\":146:526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":657:1175   */\n    tag_21:\n        /* \"#utility.yul\":759:761   */\n      0x1f\n        /* \"#utility.yul\":754:757   */\n      dup3\n        /* \"#utility.yul\":751:762   */\n      gt\n        /* \"#utility.yul\":748:1169   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":795:800   */\n      dup1\n        /* \"#utility.yul\":792:793   */\n      0x00\n        /* \"#utility.yul\":785:801   */\n      mstore\n        /* \"#utility.yul\":839:843   */\n      0x20\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":826:844   */\n      keccak256\n        /* \"#utility.yul\":909:911   */\n      0x1f\n        /* \"#utility.yul\":897:907   */\n      dup5\n        /* \"#utility.yul\":893:912   */\n      add\n        /* \"#utility.yul\":890:891   */\n      0x05\n        /* \"#utility.yul\":886:913   */\n      shr\n        /* \"#utility.yul\":880:884   */\n      dup2\n        /* \"#utility.yul\":876:914   */\n      add\n        /* \"#utility.yul\":945:949   */\n      0x20\n        /* \"#utility.yul\":933:943   */\n      dup6\n        /* \"#utility.yul\":930:950   */\n      lt\n        /* \"#utility.yul\":927:974   */\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"#utility.yul\":968:972   */\n      dup1\n        /* \"#utility.yul\":927:974   */\n    tag_31:\n        /* \"#utility.yul\":1023:1025   */\n      0x1f\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1014:1026   */\n      add\n        /* \"#utility.yul\":1011:1012   */\n      0x05\n        /* \"#utility.yul\":1007:1027   */\n      shr\n        /* \"#utility.yul\":1001:1005   */\n      dup3\n        /* \"#utility.yul\":997:1028   */\n      add\n        /* \"#utility.yul\":987:1028   */\n      swap2\n      pop\n        /* \"#utility.yul\":1078:1159   */\n    tag_32:\n        /* \"#utility.yul\":1096:1098   */\n      dup2\n        /* \"#utility.yul\":1089:1094   */\n      dup2\n        /* \"#utility.yul\":1086:1099   */\n      lt\n        /* \"#utility.yul\":1078:1159   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1155:1156   */\n      0x00\n        /* \"#utility.yul\":1141:1157   */\n      dup2\n      sstore\n        /* \"#utility.yul\":1122:1123   */\n      0x01\n        /* \"#utility.yul\":1111:1124   */\n      add\n        /* \"#utility.yul\":1078:1159   */\n      jump(tag_32)\n    tag_34:\n        /* \"#utility.yul\":1082:1085   */\n      pop\n      pop\n        /* \"#utility.yul\":748:1169   */\n    tag_30:\n        /* \"#utility.yul\":657:1175   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:2650   */\n    tag_7:\n        /* \"#utility.yul\":1471:1481   */\n      dup2\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1493:1523   */\n      dup2\n      gt\n        /* \"#utility.yul\":1490:1546   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1526:1544   */\n      tag_38\n      tag_18\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1555:1652   */\n      tag_39\n        /* \"#utility.yul\":1645:1651   */\n      dup2\n        /* \"#utility.yul\":1605:1643   */\n      tag_40\n        /* \"#utility.yul\":1637:1641   */\n      dup5\n        /* \"#utility.yul\":1631:1642   */\n      sload\n        /* \"#utility.yul\":1605:1643   */\n      tag_19\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1599:1603   */\n      dup5\n        /* \"#utility.yul\":1555:1652   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1701:1705   */\n      0x20\n        /* \"#utility.yul\":1732:1734   */\n      0x1f\n        /* \"#utility.yul\":1721:1735   */\n      dup3\n      gt\n        /* \"#utility.yul\":1749:1750   */\n      0x01\n        /* \"#utility.yul\":1744:2393   */\n      dup2\n      eq\n      tag_42\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2454:2460   */\n      dup4\n        /* \"#utility.yul\":2451:2540   */\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"#utility.yul\":2506:2525   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":2500:2526   */\n      mload\n        /* \"#utility.yul\":2451:2540   */\n    tag_43:\n      not(0x00)\n        /* \"#utility.yul\":1308:1309   */\n      0x03\n        /* \"#utility.yul\":1304:1315   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1300:1324   */\n      shr\n        /* \"#utility.yul\":1296:1325   */\n      not\n        /* \"#utility.yul\":1286:1326   */\n      and\n        /* \"#utility.yul\":1332:1333   */\n      0x01\n        /* \"#utility.yul\":1328:1339   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":1283:1340   */\n      or\n        /* \"#utility.yul\":2553:2634   */\n      dup5\n      sstore\n        /* \"#utility.yul\":1714:2644   */\n      jump(tag_34)\n        /* \"#utility.yul\":1744:2393   */\n    tag_42:\n        /* \"#utility.yul\":604:605   */\n      0x00\n        /* \"#utility.yul\":597:611   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":641:645   */\n      0x20\n        /* \"#utility.yul\":628:646   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":1780:1800   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":1898:2120   */\n    tag_46:\n        /* \"#utility.yul\":1912:1919   */\n      dup3\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1906:1920   */\n      lt\n        /* \"#utility.yul\":1898:2120   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1994:2013   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":1988:2014   */\n      mload\n        /* \"#utility.yul\":1973:2015   */\n      dup3\n      sstore\n        /* \"#utility.yul\":2101:2105   */\n      0x20\n        /* \"#utility.yul\":2086:2106   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":2054:2055   */\n      0x01\n        /* \"#utility.yul\":2042:2056   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1928:1940   */\n      add\n        /* \"#utility.yul\":1898:2120   */\n      jump(tag_46)\n    tag_48:\n        /* \"#utility.yul\":1902:1905   */\n      pop\n        /* \"#utility.yul\":2148:2154   */\n      dup5\n        /* \"#utility.yul\":2139:2146   */\n      dup3\n        /* \"#utility.yul\":2136:2155   */\n      lt\n        /* \"#utility.yul\":2133:2334   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":2209:2228   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":2203:2229   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":2292:2293   */\n      0x03\n        /* \"#utility.yul\":2288:2302   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":2304:2307   */\n      0xf8\n        /* \"#utility.yul\":2284:2308   */\n      and\n        /* \"#utility.yul\":2280:2317   */\n      shr\n        /* \"#utility.yul\":2276:2318   */\n      not\n        /* \"#utility.yul\":2261:2319   */\n      and\n        /* \"#utility.yul\":2246:2320   */\n      dup2\n      sstore\n        /* \"#utility.yul\":2133:2334   */\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2380:2381   */\n      0x01\n        /* \"#utility.yul\":2364:2378   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":2360:2382   */\n      add\n        /* \"#utility.yul\":2347:2383   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":1351:2650   */\n      jump\t// out\n        /* \"#utility.yul\":2655:2858   */\n    tag_23:\n        /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x70a08231\n          gt\n          tag_18\n          jumpi\n          dup1\n          0xa9059cbb\n          gt\n          tag_19\n          jumpi\n          dup1\n          0xa9059cbb\n          eq\n          tag_14\n          jumpi\n          dup1\n          0xdd62ed3e\n          eq\n          tag_15\n          jumpi\n          dup1\n          0xf2fde38b\n          eq\n          tag_16\n          jumpi\n          dup1\n          0xfca3b5aa\n          eq\n          tag_17\n          jumpi\n          revert(0x00, 0x00)\n        tag_19:\n          dup1\n          0x70a08231\n          eq\n          tag_10\n          jumpi\n          dup1\n          0x715018a6\n          eq\n          tag_11\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_12\n          jumpi\n          dup1\n          0x95d89b41\n          eq\n          tag_13\n          jumpi\n          revert(0x00, 0x00)\n        tag_18:\n          dup1\n          0x18160ddd\n          gt\n          tag_20\n          jumpi\n          dup1\n          0x18160ddd\n          eq\n          tag_6\n          jumpi\n          dup1\n          0x23b872dd\n          eq\n          tag_7\n          jumpi\n          dup1\n          0x313ce567\n          eq\n          tag_8\n          jumpi\n          dup1\n          0x40c10f19\n          eq\n          tag_9\n          jumpi\n          revert(0x00, 0x00)\n        tag_20:\n          dup1\n          0x06fdde03\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x07546172\n          eq\n          tag_4\n          jumpi\n          dup1\n          0x095ea7b3\n          eq\n          tag_5\n          jumpi\n        tag_2:\n          revert(0x00, 0x00)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n        tag_3:\n          tag_21\n          tag_22\n          jump\t// in\n        tag_21:\n          mload(0x40)\n          tag_23\n          swap2\n          swap1\n          tag_24\n          jump\t// in\n        tag_23:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"referralSystem.sol\":3960:3981  address public minter */\n        tag_4:\n          sload(0x06)\n          tag_25\n          swap1\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n          dup2\n          jump\n        tag_25:\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":601:633   */\n          swap1\n          swap2\n          and\n            /* \"#utility.yul\":583:634   */\n          dup2\n          mstore\n            /* \"#utility.yul\":571:573   */\n          0x20\n            /* \"#utility.yul\":556:574   */\n          add\n            /* \"referralSystem.sol\":3960:3981  address public minter */\n          tag_23\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_5:\n          tag_29\n          tag_30\n          calldatasize\n          0x04\n          tag_31\n          jump\t// in\n        tag_30:\n          tag_32\n          jump\t// in\n        tag_29:\n          mload(0x40)\n            /* \"#utility.yul\":1293:1307   */\n          swap1\n          iszero\n            /* \"#utility.yul\":1286:1308   */\n          iszero\n            /* \"#utility.yul\":1268:1309   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1256:1258   */\n          0x20\n            /* \"#utility.yul\":1241:1259   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n          tag_23\n            /* \"#utility.yul\":1128:1315   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n        tag_6:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n          sload(0x02)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n        tag_35:\n          mload(0x40)\n            /* \"#utility.yul\":1466:1491   */\n          swap1\n          dup2\n          mstore\n            /* \"#utility.yul\":1454:1456   */\n          0x20\n            /* \"#utility.yul\":1439:1457   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n          tag_23\n            /* \"#utility.yul\":1320:1497   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n        tag_7:\n          tag_29\n          tag_40\n          calldatasize\n          0x04\n          tag_41\n          jump\t// in\n        tag_40:\n          tag_42\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n        tag_8:\n          mload(0x40)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n          0x12\n            /* \"#utility.yul\":2023:2059   */\n          dup2\n          mstore\n            /* \"#utility.yul\":2011:2013   */\n          0x20\n            /* \"#utility.yul\":1996:2014   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n          tag_23\n            /* \"#utility.yul\":1881:2065   */\n          jump\n            /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n        tag_9:\n          tag_48\n          tag_49\n          calldatasize\n          0x04\n          tag_31\n          jump\t// in\n        tag_49:\n          tag_50\n          jump\t// in\n        tag_48:\n          stop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n        tag_10:\n          tag_35\n          tag_52\n          calldatasize\n          0x04\n          tag_53\n          jump\t// in\n        tag_52:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n          swap1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_11:\n          tag_48\n          tag_57\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n        tag_12:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          jump(tag_25)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n        tag_13:\n          tag_21\n          tag_62\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n        tag_14:\n          tag_29\n          tag_65\n          calldatasize\n          0x04\n          tag_31\n          jump\t// in\n        tag_65:\n          tag_66\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n        tag_15:\n          tag_35\n          tag_69\n          calldatasize\n          0x04\n          tag_70\n          jump\t// in\n        tag_69:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          swap2\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n          swap4\n          swap1\n          swap5\n          and\n          dup3\n          mstore\n          swap2\n          swap1\n          swap2\n          mstore\n          keccak256\n          sload\n          swap1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_16:\n          tag_48\n          tag_74\n          calldatasize\n          0x04\n          tag_53\n          jump\t// in\n        tag_74:\n          tag_75\n          jump\t// in\n            /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n        tag_17:\n          tag_48\n          tag_77\n          calldatasize\n          0x04\n          tag_53\n          jump\t// in\n        tag_77:\n          tag_78\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n        tag_22:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n          0x60\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n          0x03\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n          dup1\n          sload\n          tag_80\n          swap1\n          tag_81\n          jump\t// in\n        tag_80:\n          dup1\n          0x1f\n          add\n          0x20\n          dup1\n          swap2\n          div\n          mul\n          0x20\n          add\n          mload(0x40)\n          swap1\n          dup2\n          add\n          0x40\n          mstore\n          dup1\n          swap3\n          swap2\n          swap1\n          dup2\n          dup2\n          mstore\n          0x20\n          add\n          dup3\n          dup1\n          sload\n          tag_82\n          swap1\n          tag_81\n          jump\t// in\n        tag_82:\n          dup1\n          iszero\n          tag_83\n          jumpi\n          dup1\n          0x1f\n          lt\n          tag_84\n          jumpi\n          0x0100\n          dup1\n          dup4\n          sload\n          div\n          mul\n          dup4\n          mstore\n          swap2\n          0x20\n          add\n          swap2\n          jump(tag_83)\n        tag_84:\n          dup3\n          add\n          swap2\n          swap1\n          0x00\n          mstore\n          keccak256(0x00, 0x20)\n          swap1\n        tag_85:\n          dup2\n          sload\n          dup2\n          mstore\n          swap1\n          0x01\n          add\n          swap1\n          0x20\n          add\n          dup1\n          dup4\n          gt\n          tag_85\n          jumpi\n          dup3\n          swap1\n          sub\n          0x1f\n          and\n          dup3\n          add\n          swap2\n        tag_83:\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n          swap1\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_32:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n          tag_89\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n          tag_90\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n          jump\t// in\n        tag_89:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n          swap2\n          pop\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_86:\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n        tag_42:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n          tag_94\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n          dup6\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n          tag_95\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n          jump\t// in\n        tag_94:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n          tag_96\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n          tag_97\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n          jump\t// in\n        tag_96:\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n          0x01\n          swap5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n          swap4\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n        tag_50:\n            /* \"referralSystem.sol\":4202:4208  minter */\n          and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n            /* \"referralSystem.sol\":4188:4198  msg.sender */\n          caller\n            /* \"referralSystem.sol\":4188:4208  msg.sender == minter */\n          eq\n            /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n          tag_100\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":3113:3115   */\n          0x20\n            /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3095:3116   */\n          mstore\n            /* \"#utility.yul\":3152:3154   */\n          0x16\n            /* \"#utility.yul\":3132:3150   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":3125:3155   */\n          mstore\n          shl(0x52, 0x139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d)\n            /* \"#utility.yul\":3171:3189   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":3164:3216   */\n          mstore\n            /* \"#utility.yul\":3233:3251   */\n          0x64\n          add\n            /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n        tag_101:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_100:\n            /* \"referralSystem.sol\":4512:4531  _mint(_to, _amount) */\n          tag_104\n            /* \"referralSystem.sol\":4518:4521  _to */\n          dup3\n            /* \"referralSystem.sol\":4523:4530  _amount */\n          dup3\n            /* \"referralSystem.sol\":4512:4517  _mint */\n          tag_105\n            /* \"referralSystem.sol\":4512:4531  _mint(_to, _amount) */\n          jump\t// in\n        tag_104:\n            /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_57:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_108\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_109\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_108:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          tag_111\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n          tag_112\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          jump\t// in\n        tag_111:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n        tag_62:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n          0x60\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n          0x04\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n          dup1\n          sload\n          tag_80\n          swap1\n          tag_81\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n        tag_66:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n          tag_89\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n          tag_97\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_75:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_125\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_109\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_125:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup2\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_127\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0x1e4fbdf7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_127:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          tag_129\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n          tag_112\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          jump\t// in\n        tag_129:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n          pop\n          jump\t// out\n            /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n        tag_78:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_131\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_109\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_131:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"referralSystem.sol\":4343:4364  _minter != address(0) */\n          dup2\n          and\n            /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n          tag_133\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":3464:3466   */\n          0x20\n            /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3446:3467   */\n          mstore\n            /* \"#utility.yul\":3503:3505   */\n          0x16\n            /* \"#utility.yul\":3483:3501   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":3476:3506   */\n          mstore\n          shl(0x50, 0x496e76616c6964206d696e7465722061646472657373)\n            /* \"#utility.yul\":3522:3540   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":3515:3567   */\n          mstore\n            /* \"#utility.yul\":3584:3602   */\n          0x64\n          add\n            /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n          tag_101\n            /* \"#utility.yul\":3262:3608   */\n          jump\n            /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n        tag_133:\n            /* \"referralSystem.sol\":4402:4408  minter */\n          0x06\n            /* \"referralSystem.sol\":4402:4418  minter = _minter */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          and\n          sub(shl(0xa0, 0x01), 0x01)\n          swap3\n          swap1\n          swap3\n          and\n          swap2\n          swap1\n          swap2\n          or\n          swap1\n          sstore\n            /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n        tag_90:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n          tag_138\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n          tag_139\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n          jump\t// in\n        tag_138:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n        tag_95:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          dup4\n          dup2\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n          swap4\n          dup7\n          and\n          dup4\n          mstore\n          swap3\n          swap1\n          mstore\n          keccak256\n          sload\n          not(0x00)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n          dup2\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n          iszero\n          tag_146\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n          iszero\n          tag_143\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          mload(0x40)\n          shl(0xe1, 0x7dc7a0d9)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":3833:3865   */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3815:3866   */\n          mstore\n            /* \"#utility.yul\":3882:3900   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":3875:3909   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":3925:3943   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":3918:3952   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":3788:3806   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          tag_101\n            /* \"#utility.yul\":3613:3958   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n        tag_143:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n          tag_146\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n          tag_139\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n          jump\t// in\n        tag_146:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n        tag_97:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n          tag_148\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n          mload(0x40)\n          shl(0xe1, 0x4b637e8f)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n        tag_148:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n          tag_150\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n        tag_150:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n          tag_138\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n          tag_153\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n        tag_105:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n          tag_155\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n        tag_155:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n          tag_104\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n          tag_153\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_109:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          eq\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_111\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mload(0x40)\n          shl(0xe0, 0x118cdaa7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_112:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          0x05\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          dup4\n          dup2\n          and\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup4\n          and\n          dup2\n          or\n          swap1\n          swap4\n          sstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          mload(0x40)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          swap2\n          and\n          swap2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          dup3\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n        tag_139:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n          tag_166\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xe602df05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n        tag_166:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n          tag_168\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n          mload(0x40)\n          shl(0xe1, 0x4a1406b1)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":583:634   */\n          mstore\n            /* \"#utility.yul\":556:574   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n          tag_101\n            /* \"#utility.yul\":437:640   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n        tag_168:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n          dup1\n          dup6\n          and\n          0x00\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n          swap4\n          dup8\n          and\n          dup4\n          mstore\n          swap3\n          swap1\n          mstore\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n          dup3\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n          dup1\n          iszero\n          tag_146\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n          dup3\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n          dup5\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n          and\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n          mload(0x40)\n          tag_171\n          swap2\n            /* \"#utility.yul\":1466:1491   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1454:1456   */\n          0x20\n            /* \"#utility.yul\":1439:1457   */\n          add\n          swap1\n            /* \"#utility.yul\":1320:1497   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n        tag_171:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n        tag_153:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n          tag_173\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n          dup1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n          0x02\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n          dup3\n          dup3\n          sload\n          tag_174\n          swap2\n          swap1\n          tag_175\n          jump\t// in\n        tag_174:\n          swap1\n          swap2\n          sstore\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n          tag_176\n          swap1\n          pop\n          jump\n        tag_173:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n          dup2\n          dup2\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n          iszero\n          tag_177\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n          mload(0x40)\n          shl(0xe2, 0x391434e3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":3833:3865   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":3815:3866   */\n          mstore\n            /* \"#utility.yul\":3882:3900   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":3875:3909   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":3925:3943   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":3918:3952   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":3788:3806   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n          tag_101\n            /* \"#utility.yul\":3613:3958   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n        tag_177:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n          swap1\n          dup3\n          swap1\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n        tag_176:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n          tag_179\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n          0x02\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n          dup1\n          sload\n          dup3\n          swap1\n          sub\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n          jump(tag_180)\n        tag_179:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n          dup1\n          sload\n          dup3\n          add\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n        tag_180:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n          dup2\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n          dup4\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n          and\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n          mload(0x40)\n          tag_181\n          swap2\n            /* \"#utility.yul\":1466:1491   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1454:1456   */\n          0x20\n            /* \"#utility.yul\":1439:1457   */\n          add\n          swap1\n            /* \"#utility.yul\":1320:1497   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n        tag_181:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":14:432   */\n        tag_24:\n            /* \"#utility.yul\":163:165   */\n          0x20\n            /* \"#utility.yul\":152:161   */\n          dup2\n            /* \"#utility.yul\":145:166   */\n          mstore\n            /* \"#utility.yul\":126:130   */\n          0x00\n            /* \"#utility.yul\":195:201   */\n          dup3\n            /* \"#utility.yul\":189:202   */\n          mload\n            /* \"#utility.yul\":238:244   */\n          dup1\n            /* \"#utility.yul\":233:235   */\n          0x20\n            /* \"#utility.yul\":222:231   */\n          dup5\n            /* \"#utility.yul\":218:236   */\n          add\n            /* \"#utility.yul\":211:245   */\n          mstore\n            /* \"#utility.yul\":297:303   */\n          dup1\n            /* \"#utility.yul\":292:294   */\n          0x20\n            /* \"#utility.yul\":284:290   */\n          dup6\n            /* \"#utility.yul\":280:295   */\n          add\n            /* \"#utility.yul\":275:277   */\n          0x40\n            /* \"#utility.yul\":264:273   */\n          dup6\n            /* \"#utility.yul\":260:278   */\n          add\n            /* \"#utility.yul\":254:304   */\n          mcopy\n            /* \"#utility.yul\":353:354   */\n          0x00\n            /* \"#utility.yul\":348:350   */\n          0x40\n            /* \"#utility.yul\":339:345   */\n          dup3\n            /* \"#utility.yul\":328:337   */\n          dup6\n            /* \"#utility.yul\":324:346   */\n          add\n            /* \"#utility.yul\":320:351   */\n          add\n            /* \"#utility.yul\":313:355   */\n          mstore\n            /* \"#utility.yul\":423:425   */\n          0x40\n            /* \"#utility.yul\":416:418   */\n          0x1f\n            /* \"#utility.yul\":412:419   */\n          not\n            /* \"#utility.yul\":407:409   */\n          0x1f\n            /* \"#utility.yul\":399:405   */\n          dup4\n            /* \"#utility.yul\":395:410   */\n          add\n            /* \"#utility.yul\":391:420   */\n          and\n            /* \"#utility.yul\":380:389   */\n          dup5\n            /* \"#utility.yul\":376:421   */\n          add\n            /* \"#utility.yul\":372:426   */\n          add\n            /* \"#utility.yul\":364:426   */\n          swap2\n          pop\n          pop\n            /* \"#utility.yul\":14:432   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":645:818   */\n        tag_182:\n            /* \"#utility.yul\":713:733   */\n          dup1\n          calldataload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":762:793   */\n          dup2\n          and\n            /* \"#utility.yul\":752:794   */\n          dup2\n          eq\n            /* \"#utility.yul\":742:812   */\n          tag_187\n          jumpi\n            /* \"#utility.yul\":808:809   */\n          0x00\n            /* \"#utility.yul\":805:806   */\n          0x00\n            /* \"#utility.yul\":798:810   */\n          revert\n            /* \"#utility.yul\":742:812   */\n        tag_187:\n            /* \"#utility.yul\":645:818   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":823:1123   */\n        tag_31:\n            /* \"#utility.yul\":891:897   */\n          0x00\n            /* \"#utility.yul\":899:905   */\n          0x00\n            /* \"#utility.yul\":952:954   */\n          0x40\n            /* \"#utility.yul\":940:949   */\n          dup4\n            /* \"#utility.yul\":931:938   */\n          dup6\n            /* \"#utility.yul\":927:950   */\n          sub\n            /* \"#utility.yul\":923:955   */\n          slt\n            /* \"#utility.yul\":920:972   */\n          iszero\n          tag_189\n          jumpi\n            /* \"#utility.yul\":968:969   */\n          0x00\n            /* \"#utility.yul\":965:966   */\n          0x00\n            /* \"#utility.yul\":958:970   */\n          revert\n            /* \"#utility.yul\":920:972   */\n        tag_189:\n            /* \"#utility.yul\":991:1020   */\n          tag_190\n            /* \"#utility.yul\":1010:1019   */\n          dup4\n            /* \"#utility.yul\":991:1020   */\n          tag_182\n          jump\t// in\n        tag_190:\n            /* \"#utility.yul\":981:1020   */\n          swap5\n            /* \"#utility.yul\":1089:1091   */\n          0x20\n            /* \"#utility.yul\":1074:1092   */\n          swap4\n          swap1\n          swap4\n          add\n            /* \"#utility.yul\":1061:1093   */\n          calldataload\n          swap4\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":823:1123   */\n          jump\t// out\n            /* \"#utility.yul\":1502:1876   */\n        tag_41:\n            /* \"#utility.yul\":1579:1585   */\n          0x00\n            /* \"#utility.yul\":1587:1593   */\n          0x00\n            /* \"#utility.yul\":1595:1601   */\n          0x00\n            /* \"#utility.yul\":1648:1650   */\n          0x60\n            /* \"#utility.yul\":1636:1645   */\n          dup5\n            /* \"#utility.yul\":1627:1634   */\n          dup7\n            /* \"#utility.yul\":1623:1646   */\n          sub\n            /* \"#utility.yul\":1619:1651   */\n          slt\n            /* \"#utility.yul\":1616:1668   */\n          iszero\n          tag_194\n          jumpi\n            /* \"#utility.yul\":1664:1665   */\n          0x00\n            /* \"#utility.yul\":1661:1662   */\n          0x00\n            /* \"#utility.yul\":1654:1666   */\n          revert\n            /* \"#utility.yul\":1616:1668   */\n        tag_194:\n            /* \"#utility.yul\":1687:1716   */\n          tag_195\n            /* \"#utility.yul\":1706:1715   */\n          dup5\n            /* \"#utility.yul\":1687:1716   */\n          tag_182\n          jump\t// in\n        tag_195:\n            /* \"#utility.yul\":1677:1716   */\n          swap3\n          pop\n            /* \"#utility.yul\":1735:1773   */\n          tag_196\n            /* \"#utility.yul\":1769:1771   */\n          0x20\n            /* \"#utility.yul\":1758:1767   */\n          dup6\n            /* \"#utility.yul\":1754:1772   */\n          add\n            /* \"#utility.yul\":1735:1773   */\n          tag_182\n          jump\t// in\n        tag_196:\n            /* \"#utility.yul\":1502:1876   */\n          swap3\n          swap6\n            /* \"#utility.yul\":1725:1773   */\n          swap3\n          swap5\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":1842:1844   */\n          0x40\n            /* \"#utility.yul\":1827:1845   */\n          swap2\n          swap1\n          swap2\n          add\n            /* \"#utility.yul\":1814:1846   */\n          calldataload\n          swap1\n            /* \"#utility.yul\":1502:1876   */\n          jump\t// out\n            /* \"#utility.yul\":2070:2256   */\n        tag_53:\n            /* \"#utility.yul\":2129:2135   */\n          0x00\n            /* \"#utility.yul\":2182:2184   */\n          0x20\n            /* \"#utility.yul\":2170:2179   */\n          dup3\n            /* \"#utility.yul\":2161:2168   */\n          dup5\n            /* \"#utility.yul\":2157:2180   */\n          sub\n            /* \"#utility.yul\":2153:2185   */\n          slt\n            /* \"#utility.yul\":2150:2202   */\n          iszero\n          tag_199\n          jumpi\n            /* \"#utility.yul\":2198:2199   */\n          0x00\n            /* \"#utility.yul\":2195:2196   */\n          0x00\n            /* \"#utility.yul\":2188:2200   */\n          revert\n            /* \"#utility.yul\":2150:2202   */\n        tag_199:\n            /* \"#utility.yul\":2221:2250   */\n          tag_200\n            /* \"#utility.yul\":2240:2249   */\n          dup3\n            /* \"#utility.yul\":2221:2250   */\n          tag_182\n          jump\t// in\n        tag_200:\n            /* \"#utility.yul\":2211:2250   */\n          swap4\n            /* \"#utility.yul\":2070:2256   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2261:2521   */\n        tag_70:\n            /* \"#utility.yul\":2329:2335   */\n          0x00\n            /* \"#utility.yul\":2337:2343   */\n          0x00\n            /* \"#utility.yul\":2390:2392   */\n          0x40\n            /* \"#utility.yul\":2378:2387   */\n          dup4\n            /* \"#utility.yul\":2369:2376   */\n          dup6\n            /* \"#utility.yul\":2365:2388   */\n          sub\n            /* \"#utility.yul\":2361:2393   */\n          slt\n            /* \"#utility.yul\":2358:2410   */\n          iszero\n          tag_202\n          jumpi\n            /* \"#utility.yul\":2406:2407   */\n          0x00\n            /* \"#utility.yul\":2403:2404   */\n          0x00\n            /* \"#utility.yul\":2396:2408   */\n          revert\n            /* \"#utility.yul\":2358:2410   */\n        tag_202:\n            /* \"#utility.yul\":2429:2458   */\n          tag_203\n            /* \"#utility.yul\":2448:2457   */\n          dup4\n            /* \"#utility.yul\":2429:2458   */\n          tag_182\n          jump\t// in\n        tag_203:\n            /* \"#utility.yul\":2419:2458   */\n          swap2\n          pop\n            /* \"#utility.yul\":2477:2515   */\n          tag_204\n            /* \"#utility.yul\":2511:2513   */\n          0x20\n            /* \"#utility.yul\":2500:2509   */\n          dup5\n            /* \"#utility.yul\":2496:2514   */\n          add\n            /* \"#utility.yul\":2477:2515   */\n          tag_182\n          jump\t// in\n        tag_204:\n            /* \"#utility.yul\":2467:2515   */\n          swap1\n          pop\n            /* \"#utility.yul\":2261:2521   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2526:2906   */\n        tag_81:\n            /* \"#utility.yul\":2605:2606   */\n          0x01\n            /* \"#utility.yul\":2601:2613   */\n          dup2\n          dup2\n          shr\n          swap1\n            /* \"#utility.yul\":2648:2660   */\n          dup3\n          and\n          dup1\n            /* \"#utility.yul\":2669:2730   */\n          tag_206\n          jumpi\n            /* \"#utility.yul\":2723:2727   */\n          0x7f\n            /* \"#utility.yul\":2715:2721   */\n          dup3\n            /* \"#utility.yul\":2711:2728   */\n          and\n            /* \"#utility.yul\":2701:2728   */\n          swap2\n          pop\n            /* \"#utility.yul\":2669:2730   */\n        tag_206:\n            /* \"#utility.yul\":2776:2778   */\n          0x20\n            /* \"#utility.yul\":2768:2774   */\n          dup3\n            /* \"#utility.yul\":2765:2779   */\n          lt\n            /* \"#utility.yul\":2745:2763   */\n          dup2\n            /* \"#utility.yul\":2742:2780   */\n          sub\n            /* \"#utility.yul\":2739:2900   */\n          tag_207\n          jumpi\n            /* \"#utility.yul\":2822:2832   */\n          0x4e487b71\n            /* \"#utility.yul\":2817:2820   */\n          0xe0\n            /* \"#utility.yul\":2813:2833   */\n          shl\n            /* \"#utility.yul\":2810:2811   */\n          0x00\n            /* \"#utility.yul\":2803:2834   */\n          mstore\n            /* \"#utility.yul\":2857:2861   */\n          0x22\n            /* \"#utility.yul\":2854:2855   */\n          0x04\n            /* \"#utility.yul\":2847:2862   */\n          mstore\n            /* \"#utility.yul\":2885:2889   */\n          0x24\n            /* \"#utility.yul\":2882:2883   */\n          0x00\n            /* \"#utility.yul\":2875:2890   */\n          revert\n            /* \"#utility.yul\":2739:2900   */\n        tag_207:\n          pop\n            /* \"#utility.yul\":2526:2906   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3963:4185   */\n        tag_175:\n            /* \"#utility.yul\":4028:4037   */\n          dup1\n          dup3\n          add\n            /* \"#utility.yul\":4049:4059   */\n          dup1\n          dup3\n          gt\n            /* \"#utility.yul\":4046:4179   */\n          iszero\n          tag_86\n          jumpi\n            /* \"#utility.yul\":4101:4111   */\n          0x4e487b71\n            /* \"#utility.yul\":4096:4099   */\n          0xe0\n            /* \"#utility.yul\":4092:4112   */\n          shl\n            /* \"#utility.yul\":4089:4090   */\n          0x00\n            /* \"#utility.yul\":4082:4113   */\n          mstore\n            /* \"#utility.yul\":4136:4140   */\n          0x11\n            /* \"#utility.yul\":4133:4134   */\n          0x04\n            /* \"#utility.yul\":4126:4141   */\n          mstore\n            /* \"#utility.yul\":4164:4168   */\n          0x24\n            /* \"#utility.yul\":4161:4162   */\n          0x00\n            /* \"#utility.yul\":4154:4169   */\n          revert\n\n        auxdata: 0xa2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1021": {
									"entryPoint": null,
									"id": 1021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 174,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:219:7",
										"nodeType": "YulBlock",
										"src": "0:219:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:7",
													"nodeType": "YulBlock",
													"src": "115:102:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:7",
																								"nodeType": "YulLiteral",
																								"src": "198:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:7",
																								"nodeType": "YulLiteral",
																								"src": "203:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:7"
																						},
																						"nativeSrc": "194:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:7",
																						"nodeType": "YulLiteral",
																						"src": "207:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:7"
																				},
																				"nativeSrc": "190:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:7"
																		},
																		"nativeSrc": "178:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:51:7",
																"nodeType": "YulFunctionCall",
																"src": "160:51:7"
															},
															"nativeSrc": "160:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526802b5e3af16b188000060035568015af1d78b58c40000600455348015610029575f5ffd5b50338061004f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610058816100ae565b50604051610065906100fd565b604051809103905ff08015801561007e573d5f5f3e3d5ffd5b50600180546001600160a01b03929092166001600160a01b0319928316179055600280549091163317905561010a565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c1180610afc83390190565b6109e5806101175f395ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c8063865aa80011610093578063d499bc8511610063578063d499bc85146101fa578063d62c11641461021a578063f2fde38b1461024c578063f7c618c11461025f575f5ffd5b8063865aa8001461019c5780638da5cb5b146101af578063d113ef7c146101bf578063d21cacdf146101d2575f5ffd5b8063544ef43e116100ce578063544ef43e146101635780635539d4001461016c57806355bf73be1461017f578063715018a614610194575f5ffd5b80630763f34e146100f457806327b692f2146101105780632c070d7d1461013b575b5f5ffd5b6100fd60035481565b6040519081526020015b60405180910390f35b61012361011e3660046108cb565b610272565b6040516001600160a01b039091168152602001610107565b6100fd6101493660046108f3565b6001600160a01b03165f9081526007602052604090205490565b6100fd60045481565b600254610123906001600160a01b031681565b61019261018d366004610913565b6102a6565b005b610192610678565b6101926101aa3660046108f3565b61068b565b5f546001600160a01b0316610123565b6101926101cd366004610944565b610736565b6101236101e03660046108f3565b60066020525f90815260409020546001600160a01b031681565b61020d6102083660046108f3565b610785565b6040516101079190610964565b61023c6102283660046108f3565b60056020525f908152604090205460ff1681565b6040519015158152602001610107565b61019261025a3660046108f3565b6107f8565b600154610123906001600160a01b031681565b6007602052815f5260405f20818154811061028b575f80fd5b5f918252602090912001546001600160a01b03169150829050565b6002546001600160a01b031633146102f65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6001600160a01b0381161580159061031657506001600160a01b03821615155b6103545760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102ed565b816001600160a01b0316816001600160a01b0316036103b55760405162461bcd60e51b815260206004820152601960248201527f53656c662d726566657272616c206e6f7420616c6c6f7765640000000000000060448201526064016102ed565b6001600160a01b0381165f9081526005602052604090205460ff16156104155760405162461bcd60e51b8152602060048201526015602482015274155cd95c88185b1c9958591e481c9959995c9c9959605a1b60448201526064016102ed565b815b6001600160a01b038116156104a657816001600160a01b0316816001600160a01b0316036104875760405162461bcd60e51b815260206004820152601a60248201527f43697263756c617220726566657272616c20646574656374656400000000000060448201526064016102ed565b6001600160a01b039081165f9081526006602052604090205416610417565b6001600160a01b038281165f818152600560209081526040808320805460ff19166001908117909155600683528184208054968a166001600160a01b03199788168117909155808552600784528285208054928301815585529383902001805490951684179094559251428152919290917f90eab5d1df713df401d810f26aa9718d2b9e6894af1eb4890a332d3b185dc0e5910160405180910390a36001546003546040516340c10f1960e01b81526001600160a01b03868116600483015260248201929092529116906340c10f19906044015f604051808303815f87803b158015610590575f5ffd5b505af11580156105a2573d5f5f3e3d5ffd5b5050600154600480546040516340c10f1960e01b81526001600160a01b0390931694506340c10f1993506105ec928792016001600160a01b03929092168252602082015260400190565b5f604051808303815f87803b158015610603575f5ffd5b505af1158015610615573d5f5f3e3d5ffd5b50505050816001600160a01b0316836001600160a01b03167f1a4dfb075362880d700ede1cc31d284b1c3b2811e9f0b2ddde7bdb270042c13f60035460045460405161066b929190918252602082015260400190565b60405180910390a3505050565b610680610835565b6106895f610861565b565b610693610835565b6001600160a01b0381166106db5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102ed565b6002546040516001600160a01b038084169216907f86c40840b13041fdf3b73496c0f80da8bef6a34805cb1ca99e01fd3e13d4b196905f90a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b61073e610835565b6003829055600481905560408051838152602081018390527f457ddc8afba479da2edda90d1b2c537cee16f285d7eb06529b28aabe56a0e974910160405180910390a15050565b6001600160a01b0381165f908152600760209081526040918290208054835181840281018401909452808452606093928301828280156107ec57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116107ce575b50505050509050919050565b610800610835565b6001600160a01b03811661082957604051631e4fbdf760e01b81525f60048201526024016102ed565b61083281610861565b50565b5f546001600160a01b031633146106895760405163118cdaa760e01b81523360048201526024016102ed565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108c6575f5ffd5b919050565b5f5f604083850312156108dc575f5ffd5b6108e5836108b0565b946020939093013593505050565b5f60208284031215610903575f5ffd5b61090c826108b0565b9392505050565b5f5f60408385031215610924575f5ffd5b61092d836108b0565b915061093b602084016108b0565b90509250929050565b5f5f60408385031215610955575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156109a45783516001600160a01b031683526020938401939092019160010161097d565b50909594505050505056fea2646970667358221220186cff24bf81d2c40266c4870451e9671490c61cbf4e6dbec2cc81c750c4f1c364736f6c634300081d0033608060405234801561000f575f5ffd5b50336040518060400160405280600f81526020016e149959995c9c985b0814995dd85c99608a1b8152506040518060400160405280600381526020016229232960e91b815250816003908161006491906101ab565b50600461007182826101ab565b5050506001600160a01b0381166100a157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100aa816100c2565b50600680546001600160a01b03191633179055610265565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061013b57607f821691505b60208210810361015957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101a657805f5260205f20601f840160051c810160208510156101845750805b601f840160051c820191505b818110156101a3575f8155600101610190565b50505b505050565b81516001600160401b038111156101c4576101c4610113565b6101d8816101d28454610127565b8461015f565b6020601f82116001811461020a575f83156101f35750848201515b5f19600385901b1c1916600184901b1784556101a3565b5f84815260208120601f198516915b828110156102395787850151825560209485019460019092019101610219565b508482101561025657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61099f806102725f395ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c806370a0823111610093578063a9059cbb11610063578063a9059cbb146101f2578063dd62ed3e14610205578063f2fde38b1461023d578063fca3b5aa14610250575f5ffd5b806370a08231146101a9578063715018a6146101d15780638da5cb5b146101d957806395d89b41146101ea575f5ffd5b806318160ddd116100ce57806318160ddd1461016057806323b872dd14610172578063313ce5671461018557806340c10f1914610194575f5ffd5b806306fdde03146100f45780630754617214610112578063095ea7b31461013d575b5f5ffd5b6100fc610263565b604051610109919061080f565b60405180910390f35b600654610125906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b61015061014b36600461085f565b6102f3565b6040519015158152602001610109565b6002545b604051908152602001610109565b610150610180366004610887565b61030c565b60405160128152602001610109565b6101a76101a236600461085f565b61032f565b005b6101646101b73660046108c1565b6001600160a01b03165f9081526020819052604090205490565b6101a7610395565b6005546001600160a01b0316610125565b6100fc6103a8565b61015061020036600461085f565b6103b7565b6101646102133660046108e1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a761024b3660046108c1565b6103c4565b6101a761025e3660046108c1565b610401565b60606003805461027290610912565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90610912565b80156102e95780601f106102c0576101008083540402835291602001916102e9565b820191905f5260205f20905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b5f3361030081858561047a565b60019150505b92915050565b5f3361031985828561048c565b610324858585610508565b506001949350505050565b6006546001600160a01b031633146103875760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b60448201526064015b60405180910390fd5b6103918282610565565b5050565b61039d610599565b6103a65f6105c6565b565b60606004805461027290610912565b5f33610300818585610508565b6103cc610599565b6001600160a01b0381166103f557604051631e4fbdf760e01b81525f600482015260240161037e565b6103fe816105c6565b50565b610409610599565b6001600160a01b0381166104585760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b604482015260640161037e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6104878383836001610617565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561050257818110156104f457604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161037e565b61050284848484035f610617565b50505050565b6001600160a01b03831661053157604051634b637e8f60e11b81525f600482015260240161037e565b6001600160a01b03821661055a5760405163ec442f0560e01b81525f600482015260240161037e565b6104878383836106e9565b6001600160a01b03821661058e5760405163ec442f0560e01b81525f600482015260240161037e565b6103915f83836106e9565b6005546001600160a01b031633146103a65760405163118cdaa760e01b815233600482015260240161037e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166106405760405163e602df0560e01b81525f600482015260240161037e565b6001600160a01b03831661066957604051634a1406b160e11b81525f600482015260240161037e565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561050257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106db91815260200190565b60405180910390a350505050565b6001600160a01b038316610713578060025f828254610708919061094a565b909155506107839050565b6001600160a01b0383165f90815260208190526040902054818110156107655760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037e565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107bd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461085a575f5ffd5b919050565b5f5f60408385031215610870575f5ffd5b61087983610844565b946020939093013593505050565b5f5f5f60608486031215610899575f5ffd5b6108a284610844565b92506108b060208501610844565b929592945050506040919091013590565b5f602082840312156108d1575f5ffd5b6108da82610844565b9392505050565b5f5f604083850312156108f2575f5ffd5b6108fb83610844565b915061090960208401610844565b90509250929050565b600181811c9082168061092657607f821691505b60208210810361094457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561030657634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x4F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58 DUP2 PUSH2 0xAE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x65 SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x7E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH2 0x10A JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC11 DUP1 PUSH2 0xAFC DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x9E5 DUP1 PUSH2 0x117 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x865AA800 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xD499BC85 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD499BC85 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD62C1164 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x25F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x865AA800 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xD113EF7C EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD21CACDF EQ PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x544EF43E GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x544EF43E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x5539D400 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x55BF73BE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x763F34E EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x27B692F2 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2C070D7D EQ PUSH2 0x13B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x123 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x944 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x316 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D726566657272616C206E6F7420616C6C6F77656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155CD95C88185B1C9958591E481C9959995C9C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4A6 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43697263756C617220726566657272616C206465746563746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP7 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD TIMESTAMP DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x90EAB5D1DF713DF401D810F26AA9718D2B9E6894AF1EB4890A332D3B185DC0E5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP PUSH4 0x40C10F19 SWAP4 POP PUSH2 0x5EC SWAP3 DUP8 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1A4DFB075362880D700EDE1CC31D284B1C3B2811E9F0B2DDDE7BDB270042C13F PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x66B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x680 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x689 PUSH0 PUSH2 0x861 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x693 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x86C40840B13041FDF3B73496C0F80DA8BEF6A34805CB1CA99E01FD3E13D4B196 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x73E PUSH2 0x835 JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x457DDC8AFBA479DA2EDDA90D1B2C537CEE16F285D7EB06529B28AABE56A0E974 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x800 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x861 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8E5 DUP4 PUSH2 0x8B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x90C DUP3 PUSH2 0x8B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x92D DUP4 PUSH2 0x8B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B PUSH1 0x20 DUP5 ADD PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x97D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR PUSH13 0xFF24BF81D2C40266C4870451E9 PUSH8 0x1490C61CBF4E6DBE 0xC2 0xCC DUP2 0xC7 POP 0xC4 CALL 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x149959995C9C985B0814995DD85C99 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x292329 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0x1AB JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x71 DUP3 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA DUP2 PUSH2 0xC2 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x265 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x159 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1A6 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x184 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1D2 DUP5 SLOAD PUSH2 0x127 JUMP JUMPDEST DUP5 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x20A JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1F3 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x239 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x219 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x256 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x99F DUP1 PUSH2 0x272 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x250 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x125 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x395 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x125 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x319 DUP6 DUP3 DUP6 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x324 DUP6 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x391 DUP3 DUP3 PUSH2 0x565 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x39D PUSH2 0x599 JUMP JUMPDEST PUSH2 0x3A6 PUSH0 PUSH2 0x5C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x3CC PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x3FE DUP2 PUSH2 0x5C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x409 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x617 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x502 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x617 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x391 PUSH0 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x502 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x713 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x783 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x802 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x879 DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x899 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8A2 DUP5 PUSH2 0x844 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B0 PUSH1 0x20 DUP6 ADD PUSH2 0x844 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x844 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8FB DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP2 POP PUSH2 0x909 PUSH1 0x20 DUP5 ADD PUSH2 0x844 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x926 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x944 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x306 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xAA STATICCALL 0xDF 0xD0 0x4E BALANCE SWAP16 SWAP12 SWAP10 XOR MLOAD SELFBALANCE 0x2F 0x1F PUSH5 0xF08F4E8600 ADD EXTCODESIZE 0xA5 DUP13 GAS 0xD6 DATALOADN 0x9267 PUSH22 0x6064736F6C634300081D003300000000000000000000 ",
							"sourceMap": "174:3663:6:-:0;;;498:11;466:43;;560:11;529:42;;1387:181;;;;;;;;;-1:-1:-1;1409:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:7;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1446:17:6::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1432:11:6::1;:31:::0;;-1:-1:-1;;;;;1432:31:6;;;::::1;-1:-1:-1::0;;;;;;1432:31:6;;::::1;;::::0;;1474:17:::1;:30:::0;;;;::::1;1494:10;1474:30;::::0;;174:3663;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;174:3663:6:-;;;;;;;;:::o;14:203:7:-;174:3663:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2101,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2145,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedAddress_944": {
									"entryPoint": null,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRefereeCount_1223": {
									"entryPoint": null,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReferees_1210": {
									"entryPoint": 1925,
									"id": 1210,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasBeenReferred_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processReferral_1197": {
									"entryPoint": 678,
									"id": 1197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@refereeReward_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refereesOf_971": {
									"entryPoint": 626,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrerOf_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrerReward_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1656,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_942": {
									"entryPoint": null,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAuthorizedAddres_1060": {
									"entryPoint": 1675,
									"id": 1060,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardAmounts_1083": {
									"entryPoint": 1846,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2040,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_RewardToken_$1297__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24693cbf331f8776549a6476daecf3779a7fb0344f3f94378ad2815b27df1656__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4384e7ed8e425f09a62ef633ab79ec38fad4d0d23a88a5ab0d6b0f55b3b7d264__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e07b753f1b040295834bcceead3d83e1d0ee5270c3d4cf78b56c0d53c46941df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5031:7",
										"nodeType": "YulBlock",
										"src": "0:5031:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "245:124:7",
													"nodeType": "YulBlock",
													"src": "245:124:7",
													"statements": [
														{
															"nativeSrc": "255:29:7",
															"nodeType": "YulAssignment",
															"src": "255:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:7"
																},
																"nativeSrc": "264:20:7",
																"nodeType": "YulFunctionCall",
																"src": "264:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:7",
																"nodeType": "YulBlock",
																"src": "347:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:7",
																					"nodeType": "YulLiteral",
																					"src": "356:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:7",
																					"nodeType": "YulLiteral",
																					"src": "359:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:7"
																			},
																			"nativeSrc": "349:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:7"
																		},
																		"nativeSrc": "349:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:7",
																										"nodeType": "YulLiteral",
																										"src": "332:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:7",
																										"nodeType": "YulLiteral",
																										"src": "337:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:7"
																								},
																								"nativeSrc": "328:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:7",
																								"nodeType": "YulLiteral",
																								"src": "341:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:7"
																						},
																						"nativeSrc": "324:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:7"
																				},
																				"nativeSrc": "313:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:7"
																		},
																		"nativeSrc": "303:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:7"
																},
																"nativeSrc": "296:50:7",
																"nodeType": "YulFunctionCall",
																"src": "296:50:7"
															},
															"nativeSrc": "293:70:7",
															"nodeType": "YulIf",
															"src": "293:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:7",
														"nodeType": "YulTypedName",
														"src": "224:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:7",
														"nodeType": "YulTypedName",
														"src": "235:5:7",
														"type": ""
													}
												],
												"src": "196:173:7"
											},
											{
												"body": {
													"nativeSrc": "461:213:7",
													"nodeType": "YulBlock",
													"src": "461:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "507:16:7",
																"nodeType": "YulBlock",
																"src": "507:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:7",
																					"nodeType": "YulLiteral",
																					"src": "516:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:7",
																					"nodeType": "YulLiteral",
																					"src": "519:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:7"
																			},
																			"nativeSrc": "509:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:7"
																		},
																		"nativeSrc": "509:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "482:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "491:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "478:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "478:3:7"
																		},
																		"nativeSrc": "478:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "478:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "503:2:7",
																		"nodeType": "YulLiteral",
																		"src": "503:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nativeSrc": "474:32:7",
																"nodeType": "YulFunctionCall",
																"src": "474:32:7"
															},
															"nativeSrc": "471:52:7",
															"nodeType": "YulIf",
															"src": "471:52:7"
														},
														{
															"nativeSrc": "532:39:7",
															"nodeType": "YulAssignment",
															"src": "532:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "561:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "561:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "542:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "542:18:7"
																},
																"nativeSrc": "542:29:7",
																"nodeType": "YulFunctionCall",
																"src": "542:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:6:7"
																}
															]
														},
														{
															"nativeSrc": "580:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "580:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "593:1:7",
																"nodeType": "YulLiteral",
																"src": "593:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "584:5:7",
																	"nodeType": "YulTypedName",
																	"src": "584:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "603:41:7",
															"nodeType": "YulAssignment",
															"src": "603:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "629:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "640:2:7",
																				"nodeType": "YulLiteral",
																				"src": "640:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "625:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:7"
																		},
																		"nativeSrc": "625:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "612:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "612:12:7"
																},
																"nativeSrc": "612:32:7",
																"nodeType": "YulFunctionCall",
																"src": "612:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "603:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "603:5:7"
																}
															]
														},
														{
															"nativeSrc": "653:15:7",
															"nodeType": "YulAssignment",
															"src": "653:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "663:5:7",
																"nodeType": "YulIdentifier",
																"src": "663:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "374:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "419:9:7",
														"nodeType": "YulTypedName",
														"src": "419:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "430:7:7",
														"nodeType": "YulTypedName",
														"src": "430:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "442:6:7",
														"nodeType": "YulTypedName",
														"src": "442:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "450:6:7",
														"nodeType": "YulTypedName",
														"src": "450:6:7",
														"type": ""
													}
												],
												"src": "374:300:7"
											},
											{
												"body": {
													"nativeSrc": "780:102:7",
													"nodeType": "YulBlock",
													"src": "780:102:7",
													"statements": [
														{
															"nativeSrc": "790:26:7",
															"nodeType": "YulAssignment",
															"src": "790:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "798:3:7"
																},
																"nativeSrc": "798:18:7",
																"nodeType": "YulFunctionCall",
																"src": "798:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "790:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "790:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "832:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "832:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "847:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "863:3:7",
																								"nodeType": "YulLiteral",
																								"src": "863:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "868:1:7",
																								"nodeType": "YulLiteral",
																								"src": "868:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "859:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "859:3:7"
																						},
																						"nativeSrc": "859:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "859:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "872:1:7",
																						"nodeType": "YulLiteral",
																						"src": "872:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "855:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:7"
																				},
																				"nativeSrc": "855:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "855:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "843:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:7"
																		},
																		"nativeSrc": "843:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "843:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:7"
																},
																"nativeSrc": "825:51:7",
																"nodeType": "YulFunctionCall",
																"src": "825:51:7"
															},
															"nativeSrc": "825:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "825:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "679:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "749:9:7",
														"nodeType": "YulTypedName",
														"src": "749:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "760:6:7",
														"nodeType": "YulTypedName",
														"src": "760:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "771:4:7",
														"nodeType": "YulTypedName",
														"src": "771:4:7",
														"type": ""
													}
												],
												"src": "679:203:7"
											},
											{
												"body": {
													"nativeSrc": "957:116:7",
													"nodeType": "YulBlock",
													"src": "957:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1003:16:7",
																"nodeType": "YulBlock",
																"src": "1003:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1012:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1015:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1005:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:7"
																			},
																			"nativeSrc": "1005:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1005:12:7"
																		},
																		"nativeSrc": "1005:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1005:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "978:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "978:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "987:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "974:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nativeSrc": "974:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "974:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "970:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "970:3:7"
																},
																"nativeSrc": "970:32:7",
																"nodeType": "YulFunctionCall",
																"src": "970:32:7"
															},
															"nativeSrc": "967:52:7",
															"nodeType": "YulIf",
															"src": "967:52:7"
														},
														{
															"nativeSrc": "1028:39:7",
															"nodeType": "YulAssignment",
															"src": "1028:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1057:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1057:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1038:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1038:18:7"
																},
																"nativeSrc": "1038:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1038:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1028:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "887:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "923:9:7",
														"nodeType": "YulTypedName",
														"src": "923:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "934:7:7",
														"nodeType": "YulTypedName",
														"src": "934:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "946:6:7",
														"nodeType": "YulTypedName",
														"src": "946:6:7",
														"type": ""
													}
												],
												"src": "887:186:7"
											},
											{
												"body": {
													"nativeSrc": "1165:173:7",
													"nodeType": "YulBlock",
													"src": "1165:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1211:16:7",
																"nodeType": "YulBlock",
																"src": "1211:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1220:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1220:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1223:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1213:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1213:6:7"
																			},
																			"nativeSrc": "1213:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1213:12:7"
																		},
																		"nativeSrc": "1213:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1213:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1186:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1186:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1195:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1195:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1182:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1182:3:7"
																		},
																		"nativeSrc": "1182:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1182:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1207:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1207:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1178:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1178:3:7"
																},
																"nativeSrc": "1178:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1178:32:7"
															},
															"nativeSrc": "1175:52:7",
															"nodeType": "YulIf",
															"src": "1175:52:7"
														},
														{
															"nativeSrc": "1236:39:7",
															"nodeType": "YulAssignment",
															"src": "1236:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1246:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1246:18:7"
																},
																"nativeSrc": "1246:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1246:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:7"
																}
															]
														},
														{
															"nativeSrc": "1284:48:7",
															"nodeType": "YulAssignment",
															"src": "1284:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1317:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1328:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1313:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:7"
																		},
																		"nativeSrc": "1313:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1294:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1294:18:7"
																},
																"nativeSrc": "1294:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1294:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1284:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1078:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1123:9:7",
														"nodeType": "YulTypedName",
														"src": "1123:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1134:7:7",
														"nodeType": "YulTypedName",
														"src": "1134:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1146:6:7",
														"nodeType": "YulTypedName",
														"src": "1146:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1154:6:7",
														"nodeType": "YulTypedName",
														"src": "1154:6:7",
														"type": ""
													}
												],
												"src": "1078:260:7"
											},
											{
												"body": {
													"nativeSrc": "1430:259:7",
													"nodeType": "YulBlock",
													"src": "1430:259:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1476:16:7",
																"nodeType": "YulBlock",
																"src": "1476:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1485:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1485:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1488:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1478:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1478:6:7"
																			},
																			"nativeSrc": "1478:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1478:12:7"
																		},
																		"nativeSrc": "1478:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1478:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1451:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1451:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1447:3:7"
																		},
																		"nativeSrc": "1447:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1447:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1472:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1443:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:7"
																},
																"nativeSrc": "1443:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1443:32:7"
															},
															"nativeSrc": "1440:52:7",
															"nodeType": "YulIf",
															"src": "1440:52:7"
														},
														{
															"nativeSrc": "1501:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1501:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1514:1:7",
																"nodeType": "YulLiteral",
																"src": "1514:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1505:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1505:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1524:32:7",
															"nodeType": "YulAssignment",
															"src": "1524:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1546:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1546:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1533:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1533:12:7"
																},
																"nativeSrc": "1533:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1533:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1524:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1524:5:7"
																}
															]
														},
														{
															"nativeSrc": "1565:15:7",
															"nodeType": "YulAssignment",
															"src": "1565:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1575:5:7",
																"nodeType": "YulIdentifier",
																"src": "1575:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1565:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:7"
																}
															]
														},
														{
															"nativeSrc": "1589:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1589:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1604:1:7",
																"nodeType": "YulLiteral",
																"src": "1604:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1593:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1593:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1614:43:7",
															"nodeType": "YulAssignment",
															"src": "1614:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1642:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1642:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1653:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1653:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:7"
																		},
																		"nativeSrc": "1638:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1638:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1625:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1625:12:7"
																},
																"nativeSrc": "1625:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1625:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1614:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1614:7:7"
																}
															]
														},
														{
															"nativeSrc": "1666:17:7",
															"nodeType": "YulAssignment",
															"src": "1666:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1676:7:7",
																"nodeType": "YulIdentifier",
																"src": "1676:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1343:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:7",
														"nodeType": "YulTypedName",
														"src": "1388:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1399:7:7",
														"nodeType": "YulTypedName",
														"src": "1399:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1411:6:7",
														"nodeType": "YulTypedName",
														"src": "1411:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1419:6:7",
														"nodeType": "YulTypedName",
														"src": "1419:6:7",
														"type": ""
													}
												],
												"src": "1343:346:7"
											},
											{
												"body": {
													"nativeSrc": "1845:486:7",
													"nodeType": "YulBlock",
													"src": "1845:486:7",
													"statements": [
														{
															"nativeSrc": "1855:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1855:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1873:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1884:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1884:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1869:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:7"
																},
																"nativeSrc": "1869:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1859:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1903:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1914:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:7"
																},
																"nativeSrc": "1896:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1896:21:7"
															},
															"nativeSrc": "1896:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1896:21:7"
														},
														{
															"nativeSrc": "1926:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1926:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "1937:6:7",
																"nodeType": "YulIdentifier",
																"src": "1937:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1930:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1930:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1952:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1952:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1972:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1972:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1966:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:5:7"
																},
																"nativeSrc": "1966:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1956:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1956:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "1995:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1995:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2003:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1988:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:7"
																},
																"nativeSrc": "1988:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1988:22:7"
															},
															"nativeSrc": "1988:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1988:22:7"
														},
														{
															"nativeSrc": "2019:25:7",
															"nodeType": "YulAssignment",
															"src": "2019:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2030:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2041:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:7"
																},
																"nativeSrc": "2026:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2026:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:7"
																}
															]
														},
														{
															"nativeSrc": "2053:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2053:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2071:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2079:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:7"
																},
																"nativeSrc": "2067:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2067:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2057:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2057:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2091:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2091:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2100:1:7",
																"nodeType": "YulLiteral",
																"src": "2100:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2095:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2095:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2159:146:7",
																"nodeType": "YulBlock",
																"src": "2159:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2180:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2180:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2195:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2195:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2189:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2189:5:7"
																							},
																							"nativeSrc": "2189:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2189:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2212:3:7",
																											"nodeType": "YulLiteral",
																											"src": "2212:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2217:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2217:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2208:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2208:3:7"
																									},
																									"nativeSrc": "2208:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2208:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2221:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2221:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2204:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2204:3:7"
																							},
																							"nativeSrc": "2204:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2204:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2185:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2185:3:7"
																					},
																					"nativeSrc": "2185:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2185:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2173:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2173:6:7"
																			},
																			"nativeSrc": "2173:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2173:52:7"
																		},
																		"nativeSrc": "2173:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2173:52:7"
																	},
																	{
																		"nativeSrc": "2238:19:7",
																		"nodeType": "YulAssignment",
																		"src": "2238:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2249:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2249:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2254:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2254:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2245:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2245:3:7"
																			},
																			"nativeSrc": "2245:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2245:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2238:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2238:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2270:25:7",
																		"nodeType": "YulAssignment",
																		"src": "2270:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2284:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2284:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2292:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2292:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2280:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2280:3:7"
																			},
																			"nativeSrc": "2280:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2280:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2270:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2270:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2121:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2121:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2124:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2118:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2118:2:7"
																},
																"nativeSrc": "2118:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2118:13:7"
															},
															"nativeSrc": "2110:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2132:18:7",
																"nodeType": "YulBlock",
																"src": "2132:18:7",
																"statements": [
																	{
																		"nativeSrc": "2134:14:7",
																		"nodeType": "YulAssignment",
																		"src": "2134:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2143:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2143:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2146:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2146:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2139:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2139:3:7"
																			},
																			"nativeSrc": "2139:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2134:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2134:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2114:3:7",
																"nodeType": "YulBlock",
																"src": "2114:3:7",
																"statements": []
															},
															"src": "2110:195:7"
														},
														{
															"nativeSrc": "2314:11:7",
															"nodeType": "YulAssignment",
															"src": "2314:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "2322:3:7",
																"nodeType": "YulIdentifier",
																"src": "2322:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2314:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2314:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1694:637:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1814:9:7",
														"nodeType": "YulTypedName",
														"src": "1814:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1825:6:7",
														"nodeType": "YulTypedName",
														"src": "1825:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1836:4:7",
														"nodeType": "YulTypedName",
														"src": "1836:4:7",
														"type": ""
													}
												],
												"src": "1694:637:7"
											},
											{
												"body": {
													"nativeSrc": "2431:92:7",
													"nodeType": "YulBlock",
													"src": "2431:92:7",
													"statements": [
														{
															"nativeSrc": "2441:26:7",
															"nodeType": "YulAssignment",
															"src": "2441:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:7"
																},
																"nativeSrc": "2449:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2483:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2483:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2508:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2508:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2501:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2501:6:7"
																				},
																				"nativeSrc": "2501:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2501:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2494:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2494:6:7"
																		},
																		"nativeSrc": "2494:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2494:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2476:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:7"
																},
																"nativeSrc": "2476:41:7",
																"nodeType": "YulFunctionCall",
																"src": "2476:41:7"
															},
															"nativeSrc": "2476:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "2476:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2336:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:7",
														"nodeType": "YulTypedName",
														"src": "2400:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2411:6:7",
														"nodeType": "YulTypedName",
														"src": "2411:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2422:4:7",
														"nodeType": "YulTypedName",
														"src": "2422:4:7",
														"type": ""
													}
												],
												"src": "2336:187:7"
											},
											{
												"body": {
													"nativeSrc": "2649:102:7",
													"nodeType": "YulBlock",
													"src": "2649:102:7",
													"statements": [
														{
															"nativeSrc": "2659:26:7",
															"nodeType": "YulAssignment",
															"src": "2659:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2671:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:7"
																},
																"nativeSrc": "2667:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2667:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2659:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2701:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2701:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2716:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2732:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2732:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2737:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2737:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2728:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2728:3:7"
																						},
																						"nativeSrc": "2728:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2728:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2741:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2741:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2724:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2724:3:7"
																				},
																				"nativeSrc": "2724:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2724:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:7"
																		},
																		"nativeSrc": "2712:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2694:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2694:6:7"
																},
																"nativeSrc": "2694:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2694:51:7"
															},
															"nativeSrc": "2694:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2694:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_RewardToken_$1297__to_t_address__fromStack_reversed",
												"nativeSrc": "2528:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2618:9:7",
														"nodeType": "YulTypedName",
														"src": "2618:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2629:6:7",
														"nodeType": "YulTypedName",
														"src": "2629:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2640:4:7",
														"nodeType": "YulTypedName",
														"src": "2640:4:7",
														"type": ""
													}
												],
												"src": "2528:223:7"
											},
											{
												"body": {
													"nativeSrc": "2930:164:7",
													"nodeType": "YulBlock",
													"src": "2930:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2947:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2947:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2958:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2958:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2940:6:7"
																},
																"nativeSrc": "2940:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2940:21:7"
															},
															"nativeSrc": "2940:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2940:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2981:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2992:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2977:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:7"
																		},
																		"nativeSrc": "2977:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2997:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2997:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2970:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:7"
																},
																"nativeSrc": "2970:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2970:30:7"
															},
															"nativeSrc": "2970:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2970:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3031:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3031:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3016:3:7"
																		},
																		"nativeSrc": "3016:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3016:18:7"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "3036:16:7",
																		"nodeType": "YulLiteral",
																		"src": "3036:16:7",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3009:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:7"
																},
																"nativeSrc": "3009:44:7",
																"nodeType": "YulFunctionCall",
																"src": "3009:44:7"
															},
															"nativeSrc": "3009:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "3009:44:7"
														},
														{
															"nativeSrc": "3062:26:7",
															"nodeType": "YulAssignment",
															"src": "3062:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3074:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3074:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:7"
																},
																"nativeSrc": "3070:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3070:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3062:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3062:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2756:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2907:9:7",
														"nodeType": "YulTypedName",
														"src": "2907:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2921:4:7",
														"nodeType": "YulTypedName",
														"src": "2921:4:7",
														"type": ""
													}
												],
												"src": "2756:338:7"
											},
											{
												"body": {
													"nativeSrc": "3273:165:7",
													"nodeType": "YulBlock",
													"src": "3273:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3290:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3290:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3301:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																},
																"nativeSrc": "3283:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3283:21:7"
															},
															"nativeSrc": "3283:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3283:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3335:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:7"
																		},
																		"nativeSrc": "3320:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:7"
																},
																"nativeSrc": "3313:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3313:30:7"
															},
															"nativeSrc": "3313:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3313:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:7"
																		},
																		"nativeSrc": "3359:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "3379:17:7",
																		"nodeType": "YulLiteral",
																		"src": "3379:17:7",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:7"
																},
																"nativeSrc": "3352:45:7",
																"nodeType": "YulFunctionCall",
																"src": "3352:45:7"
															},
															"nativeSrc": "3352:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "3352:45:7"
														},
														{
															"nativeSrc": "3406:26:7",
															"nodeType": "YulAssignment",
															"src": "3406:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3418:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3418:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3429:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3429:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:3:7"
																},
																"nativeSrc": "3414:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3406:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3406:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3099:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3250:9:7",
														"nodeType": "YulTypedName",
														"src": "3250:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3264:4:7",
														"nodeType": "YulTypedName",
														"src": "3264:4:7",
														"type": ""
													}
												],
												"src": "3099:339:7"
											},
											{
												"body": {
													"nativeSrc": "3617:175:7",
													"nodeType": "YulBlock",
													"src": "3617:175:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3634:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3634:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																},
																"nativeSrc": "3627:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3627:21:7"
															},
															"nativeSrc": "3627:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3627:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3668:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3679:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3679:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3664:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:7"
																		},
																		"nativeSrc": "3664:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:7"
																},
																"nativeSrc": "3657:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3657:30:7"
															},
															"nativeSrc": "3657:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3657:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3707:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3718:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3718:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:7"
																		},
																		"nativeSrc": "3703:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:18:7"
																	},
																	{
																		"hexValue": "53656c662d726566657272616c206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "3723:27:7",
																		"nodeType": "YulLiteral",
																		"src": "3723:27:7",
																		"type": "",
																		"value": "Self-referral not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:7"
																},
																"nativeSrc": "3696:55:7",
																"nodeType": "YulFunctionCall",
																"src": "3696:55:7"
															},
															"nativeSrc": "3696:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "3696:55:7"
														},
														{
															"nativeSrc": "3760:26:7",
															"nodeType": "YulAssignment",
															"src": "3760:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3772:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3772:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3783:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3783:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:7"
																},
																"nativeSrc": "3768:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3768:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3760:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3760:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24693cbf331f8776549a6476daecf3779a7fb0344f3f94378ad2815b27df1656__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3443:349:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3594:9:7",
														"nodeType": "YulTypedName",
														"src": "3594:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3608:4:7",
														"nodeType": "YulTypedName",
														"src": "3608:4:7",
														"type": ""
													}
												],
												"src": "3443:349:7"
											},
											{
												"body": {
													"nativeSrc": "3971:171:7",
													"nodeType": "YulBlock",
													"src": "3971:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3988:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3988:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:7"
																},
																"nativeSrc": "3981:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3981:21:7"
															},
															"nativeSrc": "3981:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3981:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4022:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4033:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4033:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4018:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:7"
																		},
																		"nativeSrc": "4018:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4038:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4038:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:7"
																},
																"nativeSrc": "4011:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4011:30:7"
															},
															"nativeSrc": "4011:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4011:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4061:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4061:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4072:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4072:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4057:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4057:3:7"
																		},
																		"nativeSrc": "4057:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4057:18:7"
																	},
																	{
																		"hexValue": "5573657220616c7265616479207265666572726564",
																		"kind": "string",
																		"nativeSrc": "4077:23:7",
																		"nodeType": "YulLiteral",
																		"src": "4077:23:7",
																		"type": "",
																		"value": "User already referred"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4050:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:7"
																},
																"nativeSrc": "4050:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4050:51:7"
															},
															"nativeSrc": "4050:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4050:51:7"
														},
														{
															"nativeSrc": "4110:26:7",
															"nodeType": "YulAssignment",
															"src": "4110:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4122:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4118:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:3:7"
																},
																"nativeSrc": "4118:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4110:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4384e7ed8e425f09a62ef633ab79ec38fad4d0d23a88a5ab0d6b0f55b3b7d264__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3797:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3948:9:7",
														"nodeType": "YulTypedName",
														"src": "3948:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3962:4:7",
														"nodeType": "YulTypedName",
														"src": "3962:4:7",
														"type": ""
													}
												],
												"src": "3797:345:7"
											},
											{
												"body": {
													"nativeSrc": "4321:176:7",
													"nodeType": "YulBlock",
													"src": "4321:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4338:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4338:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4349:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4349:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4331:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4331:6:7"
																},
																"nativeSrc": "4331:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4331:21:7"
															},
															"nativeSrc": "4331:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4331:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4372:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4372:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4383:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4383:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:7"
																		},
																		"nativeSrc": "4368:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:7"
																},
																"nativeSrc": "4361:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4361:30:7"
															},
															"nativeSrc": "4361:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4361:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4411:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4422:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4422:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4407:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:7"
																		},
																		"nativeSrc": "4407:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4407:18:7"
																	},
																	{
																		"hexValue": "43697263756c617220726566657272616c206465746563746564",
																		"kind": "string",
																		"nativeSrc": "4427:28:7",
																		"nodeType": "YulLiteral",
																		"src": "4427:28:7",
																		"type": "",
																		"value": "Circular referral detected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4400:6:7"
																},
																"nativeSrc": "4400:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4400:56:7"
															},
															"nativeSrc": "4400:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "4400:56:7"
														},
														{
															"nativeSrc": "4465:26:7",
															"nodeType": "YulAssignment",
															"src": "4465:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:7"
																},
																"nativeSrc": "4473:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e07b753f1b040295834bcceead3d83e1d0ee5270c3d4cf78b56c0d53c46941df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4147:350:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4298:9:7",
														"nodeType": "YulTypedName",
														"src": "4298:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4312:4:7",
														"nodeType": "YulTypedName",
														"src": "4312:4:7",
														"type": ""
													}
												],
												"src": "4147:350:7"
											},
											{
												"body": {
													"nativeSrc": "4631:145:7",
													"nodeType": "YulBlock",
													"src": "4631:145:7",
													"statements": [
														{
															"nativeSrc": "4641:26:7",
															"nodeType": "YulAssignment",
															"src": "4641:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4653:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4653:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4649:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:7"
																},
																"nativeSrc": "4649:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4649:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4641:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4641:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4683:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4698:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4698:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4714:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4714:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4719:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4719:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4710:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4710:3:7"
																						},
																						"nativeSrc": "4710:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4710:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4723:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4723:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4706:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4706:3:7"
																				},
																				"nativeSrc": "4706:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4706:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:7"
																		},
																		"nativeSrc": "4694:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4694:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:7"
																},
																"nativeSrc": "4676:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4676:51:7"
															},
															"nativeSrc": "4676:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4676:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4747:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4758:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4758:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4743:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:7"
																		},
																		"nativeSrc": "4743:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4743:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4763:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4763:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4736:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:7"
																},
																"nativeSrc": "4736:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4736:34:7"
															},
															"nativeSrc": "4736:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4736:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4502:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4603:6:7",
														"nodeType": "YulTypedName",
														"src": "4603:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4611:6:7",
														"nodeType": "YulTypedName",
														"src": "4611:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4622:4:7",
														"nodeType": "YulTypedName",
														"src": "4622:4:7",
														"type": ""
													}
												],
												"src": "4502:274:7"
											},
											{
												"body": {
													"nativeSrc": "4910:119:7",
													"nodeType": "YulBlock",
													"src": "4910:119:7",
													"statements": [
														{
															"nativeSrc": "4920:26:7",
															"nodeType": "YulAssignment",
															"src": "4920:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4932:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4932:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4943:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4928:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4928:3:7"
																},
																"nativeSrc": "4928:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4928:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4920:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4920:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4962:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4962:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4973:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4973:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:7"
																},
																"nativeSrc": "4955:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4955:25:7"
															},
															"nativeSrc": "4955:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4955:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5000:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5000:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5011:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5011:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4996:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4996:3:7"
																		},
																		"nativeSrc": "4996:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4996:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5016:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5016:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:7"
																},
																"nativeSrc": "4989:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4989:34:7"
															},
															"nativeSrc": "4989:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4989:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4781:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4871:9:7",
														"nodeType": "YulTypedName",
														"src": "4871:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4882:6:7",
														"nodeType": "YulTypedName",
														"src": "4882:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4890:6:7",
														"nodeType": "YulTypedName",
														"src": "4890:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4901:4:7",
														"nodeType": "YulTypedName",
														"src": "4901:4:7",
														"type": ""
													}
												],
												"src": "4781:248:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_RewardToken_$1297__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24693cbf331f8776549a6476daecf3779a7fb0344f3f94378ad2815b27df1656__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Self-referral not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4384e7ed8e425f09a62ef633ab79ec38fad4d0d23a88a5ab0d6b0f55b3b7d264__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"User already referred\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e07b753f1b040295834bcceead3d83e1d0ee5270c3d4cf78b56c0d53c46941df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Circular referral detected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c8063865aa80011610093578063d499bc8511610063578063d499bc85146101fa578063d62c11641461021a578063f2fde38b1461024c578063f7c618c11461025f575f5ffd5b8063865aa8001461019c5780638da5cb5b146101af578063d113ef7c146101bf578063d21cacdf146101d2575f5ffd5b8063544ef43e116100ce578063544ef43e146101635780635539d4001461016c57806355bf73be1461017f578063715018a614610194575f5ffd5b80630763f34e146100f457806327b692f2146101105780632c070d7d1461013b575b5f5ffd5b6100fd60035481565b6040519081526020015b60405180910390f35b61012361011e3660046108cb565b610272565b6040516001600160a01b039091168152602001610107565b6100fd6101493660046108f3565b6001600160a01b03165f9081526007602052604090205490565b6100fd60045481565b600254610123906001600160a01b031681565b61019261018d366004610913565b6102a6565b005b610192610678565b6101926101aa3660046108f3565b61068b565b5f546001600160a01b0316610123565b6101926101cd366004610944565b610736565b6101236101e03660046108f3565b60066020525f90815260409020546001600160a01b031681565b61020d6102083660046108f3565b610785565b6040516101079190610964565b61023c6102283660046108f3565b60056020525f908152604090205460ff1681565b6040519015158152602001610107565b61019261025a3660046108f3565b6107f8565b600154610123906001600160a01b031681565b6007602052815f5260405f20818154811061028b575f80fd5b5f918252602090912001546001600160a01b03169150829050565b6002546001600160a01b031633146102f65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6001600160a01b0381161580159061031657506001600160a01b03821615155b6103545760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102ed565b816001600160a01b0316816001600160a01b0316036103b55760405162461bcd60e51b815260206004820152601960248201527f53656c662d726566657272616c206e6f7420616c6c6f7765640000000000000060448201526064016102ed565b6001600160a01b0381165f9081526005602052604090205460ff16156104155760405162461bcd60e51b8152602060048201526015602482015274155cd95c88185b1c9958591e481c9959995c9c9959605a1b60448201526064016102ed565b815b6001600160a01b038116156104a657816001600160a01b0316816001600160a01b0316036104875760405162461bcd60e51b815260206004820152601a60248201527f43697263756c617220726566657272616c20646574656374656400000000000060448201526064016102ed565b6001600160a01b039081165f9081526006602052604090205416610417565b6001600160a01b038281165f818152600560209081526040808320805460ff19166001908117909155600683528184208054968a166001600160a01b03199788168117909155808552600784528285208054928301815585529383902001805490951684179094559251428152919290917f90eab5d1df713df401d810f26aa9718d2b9e6894af1eb4890a332d3b185dc0e5910160405180910390a36001546003546040516340c10f1960e01b81526001600160a01b03868116600483015260248201929092529116906340c10f19906044015f604051808303815f87803b158015610590575f5ffd5b505af11580156105a2573d5f5f3e3d5ffd5b5050600154600480546040516340c10f1960e01b81526001600160a01b0390931694506340c10f1993506105ec928792016001600160a01b03929092168252602082015260400190565b5f604051808303815f87803b158015610603575f5ffd5b505af1158015610615573d5f5f3e3d5ffd5b50505050816001600160a01b0316836001600160a01b03167f1a4dfb075362880d700ede1cc31d284b1c3b2811e9f0b2ddde7bdb270042c13f60035460045460405161066b929190918252602082015260400190565b60405180910390a3505050565b610680610835565b6106895f610861565b565b610693610835565b6001600160a01b0381166106db5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102ed565b6002546040516001600160a01b038084169216907f86c40840b13041fdf3b73496c0f80da8bef6a34805cb1ca99e01fd3e13d4b196905f90a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b61073e610835565b6003829055600481905560408051838152602081018390527f457ddc8afba479da2edda90d1b2c537cee16f285d7eb06529b28aabe56a0e974910160405180910390a15050565b6001600160a01b0381165f908152600760209081526040918290208054835181840281018401909452808452606093928301828280156107ec57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116107ce575b50505050509050919050565b610800610835565b6001600160a01b03811661082957604051631e4fbdf760e01b81525f60048201526024016102ed565b61083281610861565b50565b5f546001600160a01b031633146106895760405163118cdaa760e01b81523360048201526024016102ed565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108c6575f5ffd5b919050565b5f5f604083850312156108dc575f5ffd5b6108e5836108b0565b946020939093013593505050565b5f60208284031215610903575f5ffd5b61090c826108b0565b9392505050565b5f5f60408385031215610924575f5ffd5b61092d836108b0565b915061093b602084016108b0565b90509250929050565b5f5f60408385031215610955575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156109a45783516001600160a01b031683526020938401939092019160010161097d565b50909594505050505056fea2646970667358221220186cff24bf81d2c40266c4870451e9671490c61cbf4e6dbec2cc81c750c4f1c364736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x865AA800 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xD499BC85 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD499BC85 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD62C1164 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x25F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x865AA800 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xD113EF7C EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD21CACDF EQ PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x544EF43E GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x544EF43E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x5539D400 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x55BF73BE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x763F34E EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x27B692F2 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2C070D7D EQ PUSH2 0x13B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107 JUMP JUMPDEST PUSH2 0xFD PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFD PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x123 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x944 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x316 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D726566657272616C206E6F7420616C6C6F77656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155CD95C88185B1C9958591E481C9959995C9C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4A6 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43697263756C617220726566657272616C206465746563746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP7 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP6 MSTORE PUSH1 0x7 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD TIMESTAMP DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x90EAB5D1DF713DF401D810F26AA9718D2B9E6894AF1EB4890A332D3B185DC0E5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP PUSH4 0x40C10F19 SWAP4 POP PUSH2 0x5EC SWAP3 DUP8 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1A4DFB075362880D700EDE1CC31D284B1C3B2811E9F0B2DDDE7BDB270042C13F PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x66B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x680 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x689 PUSH0 PUSH2 0x861 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x693 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x86C40840B13041FDF3B73496C0F80DA8BEF6A34805CB1CA99E01FD3E13D4B196 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x73E PUSH2 0x835 JUMP JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x457DDC8AFBA479DA2EDDA90D1B2C537CEE16F285D7EB06529B28AABE56A0E974 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7EC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x800 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x832 DUP2 PUSH2 0x861 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2ED JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8E5 DUP4 PUSH2 0x8B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x90C DUP3 PUSH2 0x8B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x92D DUP4 PUSH2 0x8B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B PUSH1 0x20 DUP5 ADD PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A4 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x97D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR PUSH13 0xFF24BF81D2C40266C4870451E9 PUSH8 0x1490C61CBF4E6DBE 0xC2 0xCC DUP2 0xC7 POP 0xC4 CALL 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "174:3663:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:43;;;;;;;;;160:25:7;;;148:2;133:18;466:43:6;;;;;;;;886:47;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;843:32:7;;;825:51;;813:2;798:18;886:47:6;679:203:7;3704:130:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3798:21:6;3771:7;3798:21;;;:10;:21;;;;;:28;;3704:130;529:42;;;;;;371:32;;;;;-1:-1:-1;;;;;371:32:6;;;2262:1289;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;1720:255:6:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;1993:255:6;;;;;;:::i;:::-;;:::i;769:45::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;769:45:6;;;3562:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;662:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2501:14:7;;2494:22;2476:41;;2464:2;2449:18;662:47:6;2336:187:7;2543:215:0;;;;;;:::i;:::-;;:::i;256:30:6:-;;;;;-1:-1:-1;;;;;256:30:6;;;886:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:47:6;;-1:-1:-1;886:47:6;;-1:-1:-1;886:47:6:o;2262:1289::-;1650:17;;-1:-1:-1;;;;;1650:17:6;1636:10;:31;1628:58;;;;-1:-1:-1;;;1628:58:6;;2958:2:7;1628:58:6;;;2940:21:7;2997:2;2977:18;;;2970:30;-1:-1:-1;;;3016:18:7;;;3009:44;3070:18;;1628:58:6;;;;;;;;;-1:-1:-1;;;;;2404:22:6;::::1;::::0;;::::1;::::0;:49:::1;;-1:-1:-1::0;;;;;;2430:23:6;::::1;::::0;::::1;2404:49;2396:77;;;::::0;-1:-1:-1;;;2396:77:6;;3301:2:7;2396:77:6::1;::::0;::::1;3283:21:7::0;3340:2;3320:18;;;3313:30;-1:-1:-1;;;3359:18:7;;;3352:45;3414:18;;2396:77:6::1;3099:339:7::0;2396:77:6::1;2549:9;-1:-1:-1::0;;;;;2537:21:6::1;:8;-1:-1:-1::0;;;;;2537:21:6::1;::::0;2529:59:::1;;;::::0;-1:-1:-1;;;2529:59:6;;3645:2:7;2529:59:6::1;::::0;::::1;3627:21:7::0;3684:2;3664:18;;;3657:30;3723:27;3703:18;;;3696:55;3768:18;;2529:59:6::1;3443:349:7::0;2529:59:6::1;-1:-1:-1::0;;;;;2678:25:6;::::1;;::::0;;;:15:::1;:25;::::0;;;;;::::1;;2677:26;2669:60;;;::::0;-1:-1:-1;;;2669:60:6;;3999:2:7;2669:60:6::1;::::0;::::1;3981:21:7::0;4038:2;4018:18;;;4011:30;-1:-1:-1;;;4057:18:7;;;4050:51;4118:18;;2669:60:6::1;3797:345:7::0;2669:60:6::1;2831:9:::0;2851:191:::1;-1:-1:-1::0;;;;;2858:29:6;::::1;::::0;2851:191:::1;;2931:8;-1:-1:-1::0;;;;;2912:27:6::1;:15;-1:-1:-1::0;;;;;2912:27:6::1;::::0;2904:66:::1;;;::::0;-1:-1:-1;;;2904:66:6;;4349:2:7;2904:66:6::1;::::0;::::1;4331:21:7::0;4388:2;4368:18;;;4361:30;4427:28;4407:18;;;4400:56;4473:18;;2904:66:6::1;4147:350:7::0;2904:66:6::1;-1:-1:-1::0;;;;;3003:27:6;;::::1;;::::0;;;:10:::1;:27;::::0;;;;;::::1;2851:191;;;-1:-1:-1::0;;;;;3096:25:6;;::::1;;::::0;;;:15:::1;:25;::::0;;;;;;;:32;;-1:-1:-1;;3096:32:6::1;3124:4;3096:32:::0;;::::1;::::0;;;3139:10:::1;:20:::0;;;;;:32;;;;::::1;-1:-1:-1::0;;;;;;3139:32:6;;::::1;::::0;::::1;::::0;;;3182:21;;;:10:::1;:21:::0;;;;;:36;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;3244:56;;3284:15:::1;160:25:7::0;;3096::6;;3139:32;;3244:56:::1;::::0;133:18:7;3244:56:6::1;;;;;;;3352:11;::::0;3380:14:::1;::::0;3352:43:::1;::::0;-1:-1:-1;;;3352:43:6;;-1:-1:-1;;;;;4694:32:7;;;3352:43:6::1;::::0;::::1;4676:51:7::0;4743:18;;;4736:34;;;;3352:11:6;::::1;::::0;:16:::1;::::0;4649:18:7;;3352:43:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;3406:11:6::1;::::0;3433:13:::1;::::0;;3406:41:::1;::::0;-1:-1:-1;;;3406:41:6;;-1:-1:-1;;;;;3406:11:6;;::::1;::::0;-1:-1:-1;3406:16:6::1;::::0;-1:-1:-1;3406:41:6::1;::::0;3423:8;;3406:41:::1;-1:-1:-1::0;;;;;4694:32:7;;;;4676:51;;4758:2;4743:18;;4736:34;4664:2;4649:18;;4502:274;3406:41:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3503:8;-1:-1:-1::0;;;;;3473:70:6::1;3492:9;-1:-1:-1::0;;;;;3473:70:6::1;;3513:14;;3529:13;;3473:70;;;;;;4955:25:7::0;;;5011:2;4996:18;;4989:34;4943:2;4928:18;;4781:248;3473:70:6::1;;;;;;;;2354:1197;2262:1289:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1720:255:6:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1808:25:6;::::1;1800:53;;;::::0;-1:-1:-1;;;1800:53:6;;3301:2:7;1800:53:6::1;::::0;::::1;3283:21:7::0;3340:2;3320:18;;;3313:30;-1:-1:-1;;;3359:18:7;;;3352:45;3414:18;;1800:53:6::1;3099:339:7::0;1800:53:6::1;1894:17;::::0;1869:56:::1;::::0;-1:-1:-1;;;;;1869:56:6;;::::1;::::0;1894:17:::1;::::0;1869:56:::1;::::0;1894:17:::1;::::0;1869:56:::1;1936:17;:31:::0;;-1:-1:-1;;;;;;1936:31:6::1;-1:-1:-1::0;;;;;1936:31:6;;;::::1;::::0;;;::::1;::::0;;1720:255::o;1993:::-;1531:13:0;:11;:13::i;:::-;2098:14:6::1;:32:::0;;;2141:13:::1;:30:::0;;;2187:53:::1;::::0;;4955:25:7;;;5011:2;4996:18;;4989:34;;;2187:53:6::1;::::0;4928:18:7;2187:53:6::1;;;;;;;1993:255:::0;;:::o;3562:128::-;-1:-1:-1;;;;;3661:21:6;;;;;;:10;:21;;;;;;;;;3654:28;;;;;;;;;;;;;;;;;3625:16;;3654:28;;;3661:21;3654:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3654:28:6;;;;;;;;;;;;;;;;;;;;;;;3562:128;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;825:51:7::0;798:18;;2672:31:0::1;679:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;825:51:7;798:18;;1901:40:0;679:203:7;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;196:173:7:-;264:20;;-1:-1:-1;;;;;313:31:7;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:300::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;640:2;625:18;;;;612:32;;-1:-1:-1;;;374:300:7:o;887:186::-;946:6;999:2;987:9;978:7;974:23;970:32;967:52;;;1015:1;1012;1005:12;967:52;1038:29;1057:9;1038:29;:::i;:::-;1028:39;887:186;-1:-1:-1;;;887:186:7:o;1078:260::-;1146:6;1154;1207:2;1195:9;1186:7;1182:23;1178:32;1175:52;;;1223:1;1220;1213:12;1175:52;1246:29;1265:9;1246:29;:::i;:::-;1236:39;;1294:38;1328:2;1317:9;1313:18;1294:38;:::i;:::-;1284:48;;1078:260;;;;;:::o;1343:346::-;1411:6;1419;1472:2;1460:9;1451:7;1447:23;1443:32;1440:52;;;1488:1;1485;1478:12;1440:52;-1:-1:-1;;1533:23:7;;;1653:2;1638:18;;;1625:32;;-1:-1:-1;1343:346:7:o;1694:637::-;1884:2;1896:21;;;1966:13;;1869:18;;;1988:22;;;1836:4;;2067:15;;;2041:2;2026:18;;;1836:4;2110:195;2124:6;2121:1;2118:13;2110:195;;;2189:13;;-1:-1:-1;;;;;2185:39:7;2173:52;;2254:2;2280:15;;;;2245:12;;;;2221:1;2139:9;2110:195;;;-1:-1:-1;2322:3:7;;1694:637;-1:-1:-1;;;;;1694:637:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "506600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authorizedAddress()": "2381",
								"getRefereeCount(address)": "2591",
								"getReferees(address)": "infinite",
								"hasBeenReferred(address)": "2572",
								"owner()": "2374",
								"processReferral(address,address)": "infinite",
								"refereeReward()": "2306",
								"refereesOf(address,uint256)": "4824",
								"referrerOf(address)": "2644",
								"referrerReward()": "2307",
								"renounceOwnership()": "infinite",
								"rewardToken()": "2424",
								"setAuthorizedAddres(address)": "30443",
								"setRewardAmounts(uint256,uint256)": "48027",
								"transferOwnership(address)": "28395"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 498,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 466,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 466,
									"end": 509,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 560,
									"end": 571,
									"name": "PUSH",
									"source": 6,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 529,
									"end": 571,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 529,
									"end": 571,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1409,
									"end": 1419,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1446,
									"end": 1463,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "CREATE",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1446,
									"end": 1463,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1443,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1463,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1491,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1504,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1504,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 217,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 14,
									"end": 217,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3837,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220186cff24bf81d2c40266c4870451e9671490c61cbf4e6dbec2cc81c750c4f1c364736f6c634300081d0033",
									".code": [
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "865AA800"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "D499BC85"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "D499BC85"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "D62C1164"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "865AA800"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "D113EF7C"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "D21CACDF"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "544EF43E"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "544EF43E"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "5539D400"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "55BF73BE"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "763F34E"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "27B692F2"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "2C070D7D"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 466,
											"end": 509,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 509,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 886,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 843,
											"end": 875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 843,
											"end": 875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 875,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 825,
											"end": 876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3704,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3819,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3826,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3834,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 529,
											"end": 571,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 529,
											"end": 571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 529,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 571,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 529,
											"end": 571,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 371,
											"end": 403,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 403,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 371,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 371,
											"end": 403,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 371,
											"end": 403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 371,
											"end": 403,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2262,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2262,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1720,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1720,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1993,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1993,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 769,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 769,
											"end": 814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3562,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3562,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3562,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 662,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2515,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2517,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2336,
											"end": 2523,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 256,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 256,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 256,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 256,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 256,
											"end": 286,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 256,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 256,
											"end": 286,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 933,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 886,
											"end": 933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1646,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1667,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 2999,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3034,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3016,
											"end": 3034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3009,
											"end": 3053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1628,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2426,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2426,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2404,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2453,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2453,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2453,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2404,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 2473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3099,
											"end": 3438,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2396,
											"end": 2473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2558,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2529,
											"end": 2588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2529,
											"end": 2588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3750,
											"name": "PUSH",
											"source": 7,
											"value": "53656C662D726566657272616C206E6F7420616C6C6F77656400000000000000"
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3703,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3696,
											"end": 3751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3443,
											"end": 3792,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2529,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2669,
											"end": 2729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2729,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 4002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4040,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155CD95C88185B1C9958591E481C9959995C9C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3797,
											"end": 4142,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2669,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2858,
											"end": 2887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2887,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2887,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2927,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2939,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2904,
											"end": 2970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "43697263756C617220726566657272616C206465746563746564000000000000"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4400,
											"end": 4456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4147,
											"end": 4497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2904,
											"end": 2970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3003,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2851,
											"end": 3042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3128,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3203,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3218,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3299,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "90EAB5D1DF713DF401D810F26AA9718D2B9E6894AF1EB4890A332D3B185DC0E5"
										},
										{
											"begin": 3244,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3300,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3380,
											"end": 3394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3395,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3395,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 3352,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3352,
											"end": 3395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3406,
											"end": 3417,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3433,
											"end": 3446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3446,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3417,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3417,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3406,
											"end": 3447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3431,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3431,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4776,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1A4DFB075362880D700EDE1CC31D284B1C3B2811E9F0B2DDDE7BDB270042C13F"
										},
										{
											"begin": 3513,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3513,
											"end": 3527,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3529,
											"end": 3542,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 5029,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3543,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 3551,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1720,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1800,
											"end": 1853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3099,
											"end": 3438,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1800,
											"end": 1853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "86C40840B13041FDF3B73496C0F80DA8BEF6A34805CB1CA99E01FD3E13D4B196"
										},
										{
											"begin": 1869,
											"end": 1925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1925,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2171,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 4980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "457DDC8AFBA479DA2EDDA90D1B2C537CEE16F285D7EB06529B28AABE56A0E974"
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2240,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3671,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3625,
											"end": 3641,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 679,
											"end": 882,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 674,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 374,
											"end": 674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 482,
											"end": 489,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 478,
											"end": 501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 471,
											"end": 523,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 471,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 471,
											"end": 523,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 542,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 542,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 542,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 542,
											"end": 571,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 542,
											"end": 571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 532,
											"end": 571,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 640,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 643,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 625,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 625,
											"end": 643,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 625,
											"end": 643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 644,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 612,
											"end": 644,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 374,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 887,
											"end": 1073,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 887,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 946,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 978,
											"end": 985,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 974,
											"end": 997,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1057,
											"end": 1066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1038,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1038,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1028,
											"end": 1067,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 887,
											"end": 1073,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 887,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1209,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1205,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1178,
											"end": 1210,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1175,
											"end": 1227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1225,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1227,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1175,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1265,
											"end": 1274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1246,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1294,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1294,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1284,
											"end": 1332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1284,
											"end": 1332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1689,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1343,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1440,
											"end": 1492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1440,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1657,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1694,
											"end": 2331,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1694,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2224,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2110,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2325,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1694,
											"end": 2331,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1694,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149959995C9C985B0814995DD85C99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "292329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1648,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1671,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1671,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1373,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4077,
											"end": 4096,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4096,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4096,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 146,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 146,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 226,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 221,
											"end": 233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 221,
											"end": 233,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 221,
											"end": 233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 268,
											"end": 280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 268,
											"end": 280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 268,
											"end": 280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 350,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 343,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 331,
											"end": 348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 321,
											"end": 348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 321,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 350,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 385,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 365,
											"end": 383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 359,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 452,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 437,
											"end": 440,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 477,
											"end": 481,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 505,
											"end": 509,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 359,
											"end": 520,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 146,
											"end": 526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 146,
											"end": 526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 146,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 754,
											"end": 757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 751,
											"end": 762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 893,
											"end": 912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 880,
											"end": 884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 876,
											"end": 914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 945,
											"end": 949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 943,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 930,
											"end": 950,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 927,
											"end": 974,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 927,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 968,
											"end": 972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 927,
											"end": 974,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1007,
											"end": 1027,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1099,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1111,
											"end": 1124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 2650,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1351,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1526,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1605,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1324,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1325,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1326,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1340,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2634,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2634,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1714,
											"end": 2644,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 604,
											"end": 605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 611,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 597,
											"end": 611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 597,
											"end": 611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 641,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1920,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2015,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2229,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2307,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2317,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2318,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2319,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2383,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 2650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2858,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2655,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH #[$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "RETURN",
											"source": 6
										}
									],
									".data": {
										"0": {
											".auxdata": "a2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033",
											".code": [
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "tag",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "70A08231"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "18"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "A9059CBB"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "A9059CBB"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "14"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "DD62ED3E"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "15"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "F2FDE38B"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "16"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "FCA3B5AA"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "tag",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "70A08231"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "10"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "715018A6"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "8DA5CB5B"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "12"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "95D89B41"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "tag",
													"source": 6,
													"value": "18"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "18160DDD"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "18160DDD"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "23B872DD"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "313CE567"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "40C10F19"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "tag",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "6FDDE03"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "7546172"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "95EA7B3"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "tag",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 3843,
													"end": 4542,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "tag",
													"source": 2,
													"value": "3"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "21"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "22"
												},
												{
													"begin": 1760,
													"end": 1849,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "tag",
													"source": 2,
													"value": "21"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "23"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "24"
												},
												{
													"begin": 1760,
													"end": 1849,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "tag",
													"source": 2,
													"value": "23"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "RETURN",
													"source": 2
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "tag",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "PUSH",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "25"
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "tag",
													"source": 6,
													"value": "25"
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 601,
													"end": 633,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 601,
													"end": 633,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 601,
													"end": 633,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 583,
													"end": 634,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 571,
													"end": 573,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3960,
													"end": 3981,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "23"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "tag",
													"source": 2,
													"value": "5"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "30"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "31"
												},
												{
													"begin": 3979,
													"end": 4165,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "tag",
													"source": 2,
													"value": "30"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "32"
												},
												{
													"begin": 3979,
													"end": 4165,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "tag",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1293,
													"end": 1307,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1293,
													"end": 1307,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1286,
													"end": 1308,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1268,
													"end": 1309,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1268,
													"end": 1309,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1256,
													"end": 1258,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1241,
													"end": 1259,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "23"
												},
												{
													"begin": 1128,
													"end": 1315,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "tag",
													"source": 2,
													"value": "6"
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2908,
													"end": 2920,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 2908,
													"end": 2920,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "tag",
													"source": 2,
													"value": "35"
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1454,
													"end": 1456,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1439,
													"end": 1457,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 2830,
													"end": 2927,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "23"
												},
												{
													"begin": 1320,
													"end": 1497,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "tag",
													"source": 2,
													"value": "7"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "41"
												},
												{
													"begin": 4757,
													"end": 5001,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "tag",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "42"
												},
												{
													"begin": 4757,
													"end": 5001,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "tag",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 2761,
													"end": 2763,
													"name": "PUSH",
													"source": 2,
													"value": "12"
												},
												{
													"begin": 2023,
													"end": 2059,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 2023,
													"end": 2059,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 2011,
													"end": 2013,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1996,
													"end": 2014,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 2688,
													"end": 2770,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "23"
												},
												{
													"begin": 1881,
													"end": 2065,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "tag",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "48"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "49"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "31"
												},
												{
													"begin": 4437,
													"end": 4539,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "tag",
													"source": 6,
													"value": "49"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 4437,
													"end": 4539,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "tag",
													"source": 6,
													"value": "48"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "tag",
													"source": 2,
													"value": "10"
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "35"
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "52"
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "53"
												},
												{
													"begin": 2985,
													"end": 3101,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "tag",
													"source": 2,
													"value": "52"
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3050,
													"end": 3057,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 3076,
													"end": 3094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 2985,
													"end": 3101,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "48"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "57"
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "25"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "tag",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "21"
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "62"
												},
												{
													"begin": 1962,
													"end": 2055,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "tag",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "65"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "31"
												},
												{
													"begin": 3296,
													"end": 3474,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "tag",
													"source": 2,
													"value": "65"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "66"
												},
												{
													"begin": 3296,
													"end": 3474,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "tag",
													"source": 2,
													"value": "15"
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "35"
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "69"
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "70"
												},
												{
													"begin": 3532,
													"end": 3672,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "tag",
													"source": 2,
													"value": "69"
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3612,
													"end": 3619,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3649,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP5",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3532,
													"end": 3672,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "48"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "74"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "53"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "74"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "75"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "tag",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "48"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "77"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 4269,
													"end": 4426,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "tag",
													"source": 6,
													"value": "77"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "78"
												},
												{
													"begin": 4269,
													"end": 4426,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "tag",
													"source": 2,
													"value": "22"
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1805,
													"end": 1818,
													"name": "PUSH",
													"source": 2,
													"value": "60"
												},
												{
													"begin": 1837,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "3"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "80"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "81"
												},
												{
													"begin": 1830,
													"end": 1842,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "tag",
													"source": 2,
													"value": "80"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "1F"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DIV",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MUL",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "82"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "81"
												},
												{
													"begin": 1830,
													"end": 1842,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "tag",
													"source": 2,
													"value": "82"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "83"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "1F"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "84"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "100"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DIV",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MUL",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "83"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "tag",
													"source": 2,
													"value": "84"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "tag",
													"source": 2,
													"value": "85"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "GT",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "85"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "PUSH",
													"source": 2,
													"value": "1F"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "tag",
													"source": 2,
													"value": "83"
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1830,
													"end": 1842,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 1760,
													"end": 1849,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "tag",
													"source": 2,
													"value": "32"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4052,
													"end": 4056,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 4106,
													"end": 4137,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "89"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4122,
													"end": 4129,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4131,
													"end": 4136,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4106,
													"end": 4114,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "90"
												},
												{
													"begin": 4106,
													"end": 4137,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4106,
													"end": 4137,
													"name": "tag",
													"source": 2,
													"value": "89"
												},
												{
													"begin": 4106,
													"end": 4137,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4154,
													"end": 4158,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 4147,
													"end": 4158,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 4147,
													"end": 4158,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 4147,
													"end": 4158,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "tag",
													"source": 2,
													"value": "86"
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 3979,
													"end": 4165,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "tag",
													"source": 2,
													"value": "42"
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4844,
													"end": 4848,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 4900,
													"end": 4937,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "94"
												},
												{
													"begin": 4916,
													"end": 4920,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 4931,
													"end": 4936,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4900,
													"end": 4915,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "95"
												},
												{
													"begin": 4900,
													"end": 4937,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4900,
													"end": 4937,
													"name": "tag",
													"source": 2,
													"value": "94"
												},
												{
													"begin": 4900,
													"end": 4937,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4947,
													"end": 4973,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "96"
												},
												{
													"begin": 4957,
													"end": 4961,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4963,
													"end": 4965,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4967,
													"end": 4972,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4947,
													"end": 4956,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "97"
												},
												{
													"begin": 4947,
													"end": 4973,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4947,
													"end": 4973,
													"name": "tag",
													"source": 2,
													"value": "96"
												},
												{
													"begin": 4947,
													"end": 4973,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4990,
													"end": 4994,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 4990,
													"end": 4994,
													"name": "SWAP5",
													"source": 2
												},
												{
													"begin": 4757,
													"end": 5001,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 4757,
													"end": 5001,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "tag",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4202,
													"end": 4208,
													"name": "PUSH",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 4202,
													"end": 4208,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4202,
													"end": 4208,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 4188,
													"end": 4198,
													"name": "CALLER",
													"source": 6
												},
												{
													"begin": 4188,
													"end": 4208,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 3113,
													"end": 3115,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3095,
													"end": 3116,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3152,
													"end": 3154,
													"name": "PUSH",
													"source": 7,
													"value": "16"
												},
												{
													"begin": 3132,
													"end": 3150,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 3132,
													"end": 3150,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3132,
													"end": 3150,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3125,
													"end": 3155,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "52"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 3171,
													"end": 3189,
													"name": "PUSH",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 3171,
													"end": 3189,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3171,
													"end": 3189,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3164,
													"end": 3216,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3233,
													"end": 3251,
													"name": "PUSH",
													"source": 7,
													"value": "64"
												},
												{
													"begin": 3233,
													"end": 3251,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "tag",
													"source": 6,
													"value": "101"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "tag",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 4180,
													"end": 4235,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4512,
													"end": 4531,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "104"
												},
												{
													"begin": 4518,
													"end": 4521,
													"modifierDepth": 1,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4523,
													"end": 4530,
													"modifierDepth": 1,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4512,
													"end": 4517,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "105"
												},
												{
													"begin": 4512,
													"end": 4531,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4512,
													"end": 4531,
													"modifierDepth": 1,
													"name": "tag",
													"source": 6,
													"value": "104"
												},
												{
													"begin": 4512,
													"end": 4531,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 4437,
													"end": 4539,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "57"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "108"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "109"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "108"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "111"
												},
												{
													"begin": 2384,
													"end": 2385,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2357,
													"end": 2375,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "112"
												},
												{
													"begin": 2357,
													"end": 2387,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "111"
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "tag",
													"source": 2,
													"value": "62"
												},
												{
													"begin": 1962,
													"end": 2055,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 2009,
													"end": 2022,
													"name": "PUSH",
													"source": 2,
													"value": "60"
												},
												{
													"begin": 2041,
													"end": 2048,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 2034,
													"end": 2048,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 2034,
													"end": 2048,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 2034,
													"end": 2048,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "80"
												},
												{
													"begin": 2034,
													"end": 2048,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 2034,
													"end": 2048,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "81"
												},
												{
													"begin": 2034,
													"end": 2048,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "tag",
													"source": 2,
													"value": "66"
												},
												{
													"begin": 3296,
													"end": 3474,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3365,
													"end": 3369,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 3419,
													"end": 3446,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "89"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 3436,
													"end": 3438,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 3440,
													"end": 3445,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 3419,
													"end": 3428,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "97"
												},
												{
													"begin": 3419,
													"end": 3446,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "75"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "125"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "109"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "125"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"modifierDepth": 1,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "127"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2700,
													"end": 2701,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "127"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "129"
												},
												{
													"begin": 2742,
													"end": 2750,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2741,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "112"
												},
												{
													"begin": 2723,
													"end": 2751,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "129"
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "tag",
													"source": 6,
													"value": "78"
												},
												{
													"begin": 4269,
													"end": 4426,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "131"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "109"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "131"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4343,
													"end": 4364,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4343,
													"end": 4364,
													"modifierDepth": 1,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "133"
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 4335,
													"end": 4391,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 4335,
													"end": 4391,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 4335,
													"end": 4391,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 3464,
													"end": 3466,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 4335,
													"end": 4391,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 3446,
													"end": 3467,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3503,
													"end": 3505,
													"name": "PUSH",
													"source": 7,
													"value": "16"
												},
												{
													"begin": 3483,
													"end": 3501,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 3483,
													"end": 3501,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3483,
													"end": 3501,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3476,
													"end": 3506,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "496E76616C6964206D696E7465722061646472657373"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "50"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 3522,
													"end": 3540,
													"name": "PUSH",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 3522,
													"end": 3540,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3522,
													"end": 3540,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3515,
													"end": 3567,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3584,
													"end": 3602,
													"name": "PUSH",
													"source": 7,
													"value": "64"
												},
												{
													"begin": 3584,
													"end": 3602,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "101"
												},
												{
													"begin": 3262,
													"end": 3608,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "tag",
													"source": 6,
													"value": "133"
												},
												{
													"begin": 4335,
													"end": 4391,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4408,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 4402,
													"end": 4418,
													"modifierDepth": 1,
													"name": "AND",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"modifierDepth": 1,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"modifierDepth": 1,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 4402,
													"end": 4418,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": 4269,
													"end": 4426,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 8707,
													"end": 8835,
													"name": "tag",
													"source": 2,
													"value": "90"
												},
												{
													"begin": 8707,
													"end": 8835,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 8791,
													"end": 8828,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "138"
												},
												{
													"begin": 8800,
													"end": 8805,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 8807,
													"end": 8814,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 8816,
													"end": 8821,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 8823,
													"end": 8827,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 8791,
													"end": 8799,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "139"
												},
												{
													"begin": 8791,
													"end": 8828,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 8791,
													"end": 8828,
													"name": "tag",
													"source": 2,
													"value": "138"
												},
												{
													"begin": 8791,
													"end": 8828,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 8707,
													"end": 8835,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8707,
													"end": 8835,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8707,
													"end": 8835,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8707,
													"end": 8835,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 10396,
													"end": 10872,
													"name": "tag",
													"source": 2,
													"value": "95"
												},
												{
													"begin": 10396,
													"end": 10872,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10495,
													"end": 10519,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3649,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3656,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "DUP7",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3638,
													"end": 3665,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 10561,
													"end": 10597,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10561,
													"end": 10597,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 10557,
													"end": 10866,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 10557,
													"end": 10866,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "146"
												},
												{
													"begin": 10557,
													"end": 10866,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10636,
													"end": 10641,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10617,
													"end": 10633,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10617,
													"end": 10641,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 10613,
													"end": 10743,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 10613,
													"end": 10743,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "143"
												},
												{
													"begin": 10613,
													"end": 10743,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "7DC7A0D9"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3833,
													"end": 3865,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 3833,
													"end": 3865,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 3815,
													"end": 3866,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "PUSH",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3788,
													"end": 3806,
													"name": "PUSH",
													"source": 7,
													"value": "64"
												},
												{
													"begin": 3788,
													"end": 3806,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 10668,
													"end": 10728,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 3613,
													"end": 3958,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 10613,
													"end": 10743,
													"name": "tag",
													"source": 2,
													"value": "143"
												},
												{
													"begin": 10613,
													"end": 10743,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 10784,
													"end": 10841,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "146"
												},
												{
													"begin": 10793,
													"end": 10798,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10800,
													"end": 10807,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10828,
													"end": 10833,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10809,
													"end": 10825,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10809,
													"end": 10833,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 10835,
													"end": 10840,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 10784,
													"end": 10792,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "139"
												},
												{
													"begin": 10784,
													"end": 10841,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 10784,
													"end": 10841,
													"name": "tag",
													"source": 2,
													"value": "146"
												},
												{
													"begin": 10784,
													"end": 10841,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 10485,
													"end": 10872,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10396,
													"end": 10872,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10396,
													"end": 10872,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10396,
													"end": 10872,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10396,
													"end": 10872,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5374,
													"end": 5674,
													"name": "tag",
													"source": 2,
													"value": "97"
												},
												{
													"begin": 5374,
													"end": 5674,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 5457,
													"end": 5475,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5457,
													"end": 5475,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 5453,
													"end": 5539,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "148"
												},
												{
													"begin": 5453,
													"end": 5539,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4B637E8F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 5525,
													"end": 5526,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 5498,
													"end": 5528,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 5453,
													"end": 5539,
													"name": "tag",
													"source": 2,
													"value": "148"
												},
												{
													"begin": 5453,
													"end": 5539,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 5552,
													"end": 5568,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5552,
													"end": 5568,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 5548,
													"end": 5634,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "150"
												},
												{
													"begin": 5548,
													"end": 5634,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 5620,
													"end": 5621,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 5591,
													"end": 5623,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 5548,
													"end": 5634,
													"name": "tag",
													"source": 2,
													"value": "150"
												},
												{
													"begin": 5548,
													"end": 5634,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5643,
													"end": 5667,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "138"
												},
												{
													"begin": 5651,
													"end": 5655,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5657,
													"end": 5659,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5661,
													"end": 5666,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5643,
													"end": 5650,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 5643,
													"end": 5667,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 7439,
													"end": 7647,
													"name": "tag",
													"source": 2,
													"value": "105"
												},
												{
													"begin": 7439,
													"end": 7647,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7509,
													"end": 7530,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7509,
													"end": 7530,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7505,
													"end": 7596,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "155"
												},
												{
													"begin": 7505,
													"end": 7596,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7582,
													"end": 7583,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 7553,
													"end": 7585,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 7505,
													"end": 7596,
													"name": "tag",
													"source": 2,
													"value": "155"
												},
												{
													"begin": 7505,
													"end": 7596,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7605,
													"end": 7640,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "104"
												},
												{
													"begin": 7621,
													"end": 7622,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7625,
													"end": 7632,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7634,
													"end": 7639,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7605,
													"end": 7612,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 7605,
													"end": 7640,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 0,
													"value": "109"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "111"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "118CDAA7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 0,
													"value": "112"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "tag",
													"source": 2,
													"value": "139"
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 9794,
													"end": 9813,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 9794,
													"end": 9813,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 9790,
													"end": 9879,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "166"
												},
												{
													"begin": 9790,
													"end": 9879,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E602DF05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9865,
													"end": 9866,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 9836,
													"end": 9868,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 9790,
													"end": 9879,
													"name": "tag",
													"source": 2,
													"value": "166"
												},
												{
													"begin": 9790,
													"end": 9879,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 9892,
													"end": 9913,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9892,
													"end": 9913,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 9888,
													"end": 9978,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "168"
												},
												{
													"begin": 9888,
													"end": 9978,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4A1406B1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9964,
													"end": 9965,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 583,
													"end": 634,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 556,
													"end": 574,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 556,
													"end": 574,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 9936,
													"end": 9967,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 437,
													"end": 640,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 9888,
													"end": 9978,
													"name": "tag",
													"source": 2,
													"value": "168"
												},
												{
													"begin": 9888,
													"end": 9978,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 9998,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10005,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "DUP8",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10014,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10022,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10022,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 9987,
													"end": 10022,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 10032,
													"end": 10108,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10032,
													"end": 10108,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 10032,
													"end": 10108,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "146"
												},
												{
													"begin": 10032,
													"end": 10108,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10082,
													"end": 10089,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10075,
													"end": 10080,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "PUSH",
													"source": 2,
													"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
												},
												{
													"begin": 10091,
													"end": 10096,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "171"
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1454,
													"end": 1456,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1439,
													"end": 1457,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1439,
													"end": 1457,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1320,
													"end": 1497,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "tag",
													"source": 2,
													"value": "171"
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10066,
													"end": 10097,
													"name": "LOG3",
													"source": 2
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9682,
													"end": 10114,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9682,
													"end": 10114,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5989,
													"end": 7096,
													"name": "tag",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 5989,
													"end": 7096,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6078,
													"end": 6096,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6078,
													"end": 6096,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "173"
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6230,
													"end": 6235,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6226,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 6214,
													"end": 6226,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "174"
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "175"
												},
												{
													"begin": 6214,
													"end": 6235,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "tag",
													"source": 2,
													"value": "174"
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6214,
													"end": 6235,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "176"
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "tag",
													"source": 2,
													"value": "173"
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6266,
													"end": 6285,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6288,
													"end": 6303,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6321,
													"end": 6340,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6321,
													"end": 6340,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6321,
													"end": 6340,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 6317,
													"end": 6432,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 6317,
													"end": 6432,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "177"
												},
												{
													"begin": 6317,
													"end": 6432,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "391434E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3833,
													"end": 3865,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 3833,
													"end": 3865,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 3815,
													"end": 3866,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 3882,
													"end": 3900,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 3875,
													"end": 3909,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "PUSH",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 3925,
													"end": 3943,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 3918,
													"end": 3952,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 3788,
													"end": 3806,
													"name": "PUSH",
													"source": 7,
													"value": "64"
												},
												{
													"begin": 3788,
													"end": 3806,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 6367,
													"end": 6417,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 3613,
													"end": 3958,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 6317,
													"end": 6432,
													"name": "tag",
													"source": 2,
													"value": "177"
												},
												{
													"begin": 6317,
													"end": 6432,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6561,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6567,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6589,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6552,
													"end": 6589,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "tag",
													"source": 2,
													"value": "176"
												},
												{
													"begin": 6074,
													"end": 6614,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6628,
													"end": 6644,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6628,
													"end": 6644,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "179"
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6803,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6791,
													"end": 6812,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "180"
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "tag",
													"source": 2,
													"value": "179"
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7011,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7015,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7002,
													"end": 7024,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "tag",
													"source": 2,
													"value": "180"
												},
												{
													"begin": 6624,
													"end": 7049,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7079,
													"end": 7081,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7077,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "PUSH",
													"source": 2,
													"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
												},
												{
													"begin": 7083,
													"end": 7088,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "181"
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1466,
													"end": 1491,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1454,
													"end": 1456,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1439,
													"end": 1457,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1439,
													"end": 1457,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1320,
													"end": 1497,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "tag",
													"source": 2,
													"value": "181"
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7064,
													"end": 7089,
													"name": "LOG3",
													"source": 2
												},
												{
													"begin": 5989,
													"end": 7096,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5989,
													"end": 7096,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5989,
													"end": 7096,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 5989,
													"end": 7096,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 14,
													"end": 432,
													"name": "tag",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 14,
													"end": 432,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 163,
													"end": 165,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 152,
													"end": 161,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 145,
													"end": 166,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 126,
													"end": 130,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 195,
													"end": 201,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 189,
													"end": 202,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 238,
													"end": 244,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 233,
													"end": 235,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 222,
													"end": 231,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 218,
													"end": 236,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 211,
													"end": 245,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 297,
													"end": 303,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 292,
													"end": 294,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 284,
													"end": 290,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 280,
													"end": 295,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 275,
													"end": 277,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 264,
													"end": 273,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 260,
													"end": 278,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 254,
													"end": 304,
													"name": "MCOPY",
													"source": 7
												},
												{
													"begin": 353,
													"end": 354,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 348,
													"end": 350,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 339,
													"end": 345,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 328,
													"end": 337,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 324,
													"end": 346,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 320,
													"end": 351,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 313,
													"end": 355,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 423,
													"end": 425,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 416,
													"end": 418,
													"name": "PUSH",
													"source": 7,
													"value": "1F"
												},
												{
													"begin": 412,
													"end": 419,
													"name": "NOT",
													"source": 7
												},
												{
													"begin": 407,
													"end": 409,
													"name": "PUSH",
													"source": 7,
													"value": "1F"
												},
												{
													"begin": 399,
													"end": 405,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 395,
													"end": 410,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 391,
													"end": 420,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 380,
													"end": 389,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 376,
													"end": 421,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 372,
													"end": 426,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 364,
													"end": 426,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 364,
													"end": 426,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 364,
													"end": 426,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 14,
													"end": 432,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 14,
													"end": 432,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 14,
													"end": 432,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 14,
													"end": 432,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 14,
													"end": 432,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 645,
													"end": 818,
													"name": "tag",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 645,
													"end": 818,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 713,
													"end": 733,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 713,
													"end": 733,
													"name": "CALLDATALOAD",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 762,
													"end": 793,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 762,
													"end": 793,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 752,
													"end": 794,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 752,
													"end": 794,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 742,
													"end": 812,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "187"
												},
												{
													"begin": 742,
													"end": 812,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 808,
													"end": 809,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 805,
													"end": 806,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 798,
													"end": 810,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 742,
													"end": 812,
													"name": "tag",
													"source": 7,
													"value": "187"
												},
												{
													"begin": 742,
													"end": 812,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 645,
													"end": 818,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 645,
													"end": 818,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 645,
													"end": 818,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 645,
													"end": 818,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 823,
													"end": 1123,
													"name": "tag",
													"source": 7,
													"value": "31"
												},
												{
													"begin": 823,
													"end": 1123,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 891,
													"end": 897,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 899,
													"end": 905,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 952,
													"end": 954,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 940,
													"end": 949,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 931,
													"end": 938,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 927,
													"end": 950,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 923,
													"end": 955,
													"name": "SLT",
													"source": 7
												},
												{
													"begin": 920,
													"end": 972,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 920,
													"end": 972,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "189"
												},
												{
													"begin": 920,
													"end": 972,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 968,
													"end": 969,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 965,
													"end": 966,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 958,
													"end": 970,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 920,
													"end": 972,
													"name": "tag",
													"source": 7,
													"value": "189"
												},
												{
													"begin": 920,
													"end": 972,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 991,
													"end": 1020,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "190"
												},
												{
													"begin": 1010,
													"end": 1019,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 991,
													"end": 1020,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 991,
													"end": 1020,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 991,
													"end": 1020,
													"name": "tag",
													"source": 7,
													"value": "190"
												},
												{
													"begin": 991,
													"end": 1020,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 981,
													"end": 1020,
													"name": "SWAP5",
													"source": 7
												},
												{
													"begin": 1089,
													"end": 1091,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1074,
													"end": 1092,
													"name": "SWAP4",
													"source": 7
												},
												{
													"begin": 1074,
													"end": 1092,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1074,
													"end": 1092,
													"name": "SWAP4",
													"source": 7
												},
												{
													"begin": 1074,
													"end": 1092,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1061,
													"end": 1093,
													"name": "CALLDATALOAD",
													"source": 7
												},
												{
													"begin": 1061,
													"end": 1093,
													"name": "SWAP4",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 823,
													"end": 1123,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1502,
													"end": 1876,
													"name": "tag",
													"source": 7,
													"value": "41"
												},
												{
													"begin": 1502,
													"end": 1876,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1579,
													"end": 1585,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1587,
													"end": 1593,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1595,
													"end": 1601,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1648,
													"end": 1650,
													"name": "PUSH",
													"source": 7,
													"value": "60"
												},
												{
													"begin": 1636,
													"end": 1645,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 1627,
													"end": 1634,
													"name": "DUP7",
													"source": 7
												},
												{
													"begin": 1623,
													"end": 1646,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 1619,
													"end": 1651,
													"name": "SLT",
													"source": 7
												},
												{
													"begin": 1616,
													"end": 1668,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1616,
													"end": 1668,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "194"
												},
												{
													"begin": 1616,
													"end": 1668,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1664,
													"end": 1665,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1661,
													"end": 1662,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1654,
													"end": 1666,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1616,
													"end": 1668,
													"name": "tag",
													"source": 7,
													"value": "194"
												},
												{
													"begin": 1616,
													"end": 1668,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1687,
													"end": 1716,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "195"
												},
												{
													"begin": 1706,
													"end": 1715,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 1687,
													"end": 1716,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 1687,
													"end": 1716,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1687,
													"end": 1716,
													"name": "tag",
													"source": 7,
													"value": "195"
												},
												{
													"begin": 1687,
													"end": 1716,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1677,
													"end": 1716,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 1677,
													"end": 1716,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1735,
													"end": 1773,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "196"
												},
												{
													"begin": 1769,
													"end": 1771,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1758,
													"end": 1767,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 1754,
													"end": 1772,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1735,
													"end": 1773,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 1735,
													"end": 1773,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1735,
													"end": 1773,
													"name": "tag",
													"source": 7,
													"value": "196"
												},
												{
													"begin": 1735,
													"end": 1773,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1502,
													"end": 1876,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 1502,
													"end": 1876,
													"name": "SWAP6",
													"source": 7
												},
												{
													"begin": 1725,
													"end": 1773,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 1725,
													"end": 1773,
													"name": "SWAP5",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1842,
													"end": 1844,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1827,
													"end": 1845,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1827,
													"end": 1845,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1827,
													"end": 1845,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1827,
													"end": 1845,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1814,
													"end": 1846,
													"name": "CALLDATALOAD",
													"source": 7
												},
												{
													"begin": 1814,
													"end": 1846,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1502,
													"end": 1876,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2070,
													"end": 2256,
													"name": "tag",
													"source": 7,
													"value": "53"
												},
												{
													"begin": 2070,
													"end": 2256,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2129,
													"end": 2135,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2182,
													"end": 2184,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 2170,
													"end": 2179,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2161,
													"end": 2168,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 2157,
													"end": 2180,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 2153,
													"end": 2185,
													"name": "SLT",
													"source": 7
												},
												{
													"begin": 2150,
													"end": 2202,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 2150,
													"end": 2202,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "199"
												},
												{
													"begin": 2150,
													"end": 2202,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 2198,
													"end": 2199,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2195,
													"end": 2196,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2188,
													"end": 2200,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 2150,
													"end": 2202,
													"name": "tag",
													"source": 7,
													"value": "199"
												},
												{
													"begin": 2150,
													"end": 2202,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2221,
													"end": 2250,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "200"
												},
												{
													"begin": 2240,
													"end": 2249,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2221,
													"end": 2250,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 2221,
													"end": 2250,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2221,
													"end": 2250,
													"name": "tag",
													"source": 7,
													"value": "200"
												},
												{
													"begin": 2221,
													"end": 2250,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2211,
													"end": 2250,
													"name": "SWAP4",
													"source": 7
												},
												{
													"begin": 2070,
													"end": 2256,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2070,
													"end": 2256,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "tag",
													"source": 7,
													"value": "70"
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2329,
													"end": 2335,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2337,
													"end": 2343,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2390,
													"end": 2392,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 2378,
													"end": 2387,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 2369,
													"end": 2376,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 2365,
													"end": 2388,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 2361,
													"end": 2393,
													"name": "SLT",
													"source": 7
												},
												{
													"begin": 2358,
													"end": 2410,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 2358,
													"end": 2410,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "202"
												},
												{
													"begin": 2358,
													"end": 2410,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 2406,
													"end": 2407,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2403,
													"end": 2404,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2396,
													"end": 2408,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 2358,
													"end": 2410,
													"name": "tag",
													"source": 7,
													"value": "202"
												},
												{
													"begin": 2358,
													"end": 2410,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2429,
													"end": 2458,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "203"
												},
												{
													"begin": 2448,
													"end": 2457,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 2429,
													"end": 2458,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 2429,
													"end": 2458,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2429,
													"end": 2458,
													"name": "tag",
													"source": 7,
													"value": "203"
												},
												{
													"begin": 2429,
													"end": 2458,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2419,
													"end": 2458,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 2419,
													"end": 2458,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2477,
													"end": 2515,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "204"
												},
												{
													"begin": 2511,
													"end": 2513,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 2500,
													"end": 2509,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 2496,
													"end": 2514,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 2477,
													"end": 2515,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "182"
												},
												{
													"begin": 2477,
													"end": 2515,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2477,
													"end": 2515,
													"name": "tag",
													"source": 7,
													"value": "204"
												},
												{
													"begin": 2477,
													"end": 2515,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2467,
													"end": 2515,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2467,
													"end": 2515,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "SWAP3",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2261,
													"end": 2521,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2526,
													"end": 2906,
													"name": "tag",
													"source": 7,
													"value": "81"
												},
												{
													"begin": 2526,
													"end": 2906,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2605,
													"end": 2606,
													"name": "PUSH",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 2601,
													"end": 2613,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 2601,
													"end": 2613,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 2601,
													"end": 2613,
													"name": "SHR",
													"source": 7
												},
												{
													"begin": 2601,
													"end": 2613,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2648,
													"end": 2660,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2648,
													"end": 2660,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 2648,
													"end": 2660,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 2669,
													"end": 2730,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "206"
												},
												{
													"begin": 2669,
													"end": 2730,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 2723,
													"end": 2727,
													"name": "PUSH",
													"source": 7,
													"value": "7F"
												},
												{
													"begin": 2715,
													"end": 2721,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2711,
													"end": 2728,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 2701,
													"end": 2728,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 2701,
													"end": 2728,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2669,
													"end": 2730,
													"name": "tag",
													"source": 7,
													"value": "206"
												},
												{
													"begin": 2669,
													"end": 2730,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2776,
													"end": 2778,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 2768,
													"end": 2774,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 2765,
													"end": 2779,
													"name": "LT",
													"source": 7
												},
												{
													"begin": 2745,
													"end": 2763,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 2742,
													"end": 2780,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 2739,
													"end": 2900,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "207"
												},
												{
													"begin": 2739,
													"end": 2900,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 2822,
													"end": 2832,
													"name": "PUSH",
													"source": 7,
													"value": "4E487B71"
												},
												{
													"begin": 2817,
													"end": 2820,
													"name": "PUSH",
													"source": 7,
													"value": "E0"
												},
												{
													"begin": 2813,
													"end": 2833,
													"name": "SHL",
													"source": 7
												},
												{
													"begin": 2810,
													"end": 2811,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2803,
													"end": 2834,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 2857,
													"end": 2861,
													"name": "PUSH",
													"source": 7,
													"value": "22"
												},
												{
													"begin": 2854,
													"end": 2855,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 2847,
													"end": 2862,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 2885,
													"end": 2889,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 2882,
													"end": 2883,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 2875,
													"end": 2890,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 2739,
													"end": 2900,
													"name": "tag",
													"source": 7,
													"value": "207"
												},
												{
													"begin": 2739,
													"end": 2900,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 2739,
													"end": 2900,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2526,
													"end": 2906,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 2526,
													"end": 2906,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 2526,
													"end": 2906,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 2526,
													"end": 2906,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 3963,
													"end": 4185,
													"name": "tag",
													"source": 7,
													"value": "175"
												},
												{
													"begin": 3963,
													"end": 4185,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 4028,
													"end": 4037,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 4028,
													"end": 4037,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 4028,
													"end": 4037,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 4049,
													"end": 4059,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 4049,
													"end": 4059,
													"name": "DUP3",
													"source": 7
												},
												{
													"begin": 4049,
													"end": 4059,
													"name": "GT",
													"source": 7
												},
												{
													"begin": 4046,
													"end": 4179,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 4046,
													"end": 4179,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "86"
												},
												{
													"begin": 4046,
													"end": 4179,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 4101,
													"end": 4111,
													"name": "PUSH",
													"source": 7,
													"value": "4E487B71"
												},
												{
													"begin": 4096,
													"end": 4099,
													"name": "PUSH",
													"source": 7,
													"value": "E0"
												},
												{
													"begin": 4092,
													"end": 4112,
													"name": "SHL",
													"source": 7
												},
												{
													"begin": 4089,
													"end": 4090,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 4082,
													"end": 4113,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 4136,
													"end": 4140,
													"name": "PUSH",
													"source": 7,
													"value": "11"
												},
												{
													"begin": 4133,
													"end": 4134,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 4126,
													"end": 4141,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 4164,
													"end": 4168,
													"name": "PUSH",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 4161,
													"end": 4162,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 4154,
													"end": 4169,
													"name": "REVERT",
													"source": 7
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"referralSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authorizedAddress()": "5539d400",
							"getRefereeCount(address)": "2c070d7d",
							"getReferees(address)": "d499bc85",
							"hasBeenReferred(address)": "d62c1164",
							"owner()": "8da5cb5b",
							"processReferral(address,address)": "55bf73be",
							"refereeReward()": "544ef43e",
							"refereesOf(address,uint256)": "27b692f2",
							"referrerOf(address)": "d21cacdf",
							"referrerReward()": "0763f34e",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"setAuthorizedAddres(address)": "865aa800",
							"setRewardAmounts(uint256,uint256)": "d113ef7c",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousBackend\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBackend\",\"type\":\"address\"}],\"name\":\"AuthorizedAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ReferralRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReferrerReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRefereeReward\",\"type\":\"uint256\"}],\"name\":\"RewardAmountsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"referrerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refereeAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authorizedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"getRefereeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"getReferees\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasBeenReferred\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referee\",\"type\":\"address\"}],\"name\":\"processReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refereeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"refereesOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referrerReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setAuthorizedAddres\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refereeReward\",\"type\":\"uint256\"}],\"name\":\"setRewardAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"referralSystem.sol\":\"ReferralRewards\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"referralSystem.sol\":{\"keccak256\":\"0x0c10f094d1f60ba651d4776ac5f7d58596b5eaab89f679782d16877278b69790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabb63d81a7a6e31bfe45b5b0c4dda9770df73b32c2d865cb645cd265b38b089\",\"dweb:/ipfs/QmTH3HLJKLphxbXxvj3F8BUwa23fWW2VY5XGC1V4ZPmpqS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(RewardToken)1297"
							},
							{
								"astId": 944,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "authorizedAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 951,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "referrerReward",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 958,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "refereeReward",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 962,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "hasBeenReferred",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 966,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "referrerOf",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 971,
								"contract": "referralSystem.sol:ReferralRewards",
								"label": "refereesOf",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(RewardToken)1297": {
								"encoding": "inplace",
								"label": "contract RewardToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RewardToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_minter",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"referralSystem.sol\":4000:4137  constructor() ERC20(\"Referral Reward\", \"RFR\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"referralSystem.sol\":4054:4064  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x8a, 0x149959995c9c985b0814995dd85c99)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x292329)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"referralSystem.sol\":4077:4083  minter */\n  0x06\n    /* \"referralSystem.sol\":4077:4096  minter = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"referralSystem.sol\":4086:4096  msg.sender */\n  caller\n    /* \"referralSystem.sol\":4077:4096  minter = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_34)\n    /* \"#utility.yul\":1744:2393   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_46:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_49:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2858   */\ntag_23:\n    /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"referralSystem.sol\":3843:4542  contract RewardToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfca3b5aa\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"referralSystem.sol\":3960:3981  address public minter */\n    tag_4:\n      sload(0x06)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":601:633   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":583:634   */\n      dup2\n      mstore\n        /* \"#utility.yul\":571:573   */\n      0x20\n        /* \"#utility.yul\":556:574   */\n      add\n        /* \"referralSystem.sol\":3960:3981  address public minter */\n      tag_23\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2023:2059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1881:2065   */\n      jump\n        /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n    tag_9:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_35\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_48\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_25)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_21\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_29\n      tag_65\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_35\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_48\n      tag_74\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n    tag_17:\n      tag_48\n      tag_77\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_96:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n    tag_50:\n        /* \"referralSystem.sol\":4202:4208  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"referralSystem.sol\":4188:4198  msg.sender */\n      caller\n        /* \"referralSystem.sol\":4188:4208  msg.sender == minter */\n      eq\n        /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3113:3115   */\n      0x20\n        /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3095:3116   */\n      mstore\n        /* \"#utility.yul\":3152:3154   */\n      0x16\n        /* \"#utility.yul\":3132:3150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3125:3155   */\n      mstore\n      shl(0x52, 0x139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d)\n        /* \"#utility.yul\":3171:3189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3164:3216   */\n      mstore\n        /* \"#utility.yul\":3233:3251   */\n      0x64\n      add\n        /* \"referralSystem.sol\":4180:4235  require(msg.sender == minter, \"Not authorized to mint\") */\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"referralSystem.sol\":4512:4531  _mint(_to, _amount) */\n      tag_104\n        /* \"referralSystem.sol\":4518:4521  _to */\n      dup3\n        /* \"referralSystem.sol\":4523:4530  _amount */\n      dup3\n        /* \"referralSystem.sol\":4512:4517  _mint */\n      tag_105\n        /* \"referralSystem.sol\":4512:4531  _mint(_to, _amount) */\n      jump\t// in\n    tag_104:\n        /* \"referralSystem.sol\":4437:4539  function mint(address _to, uint256 _amount) external onlyMinter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"referralSystem.sol\":4343:4364  _minter != address(0) */\n      dup2\n      and\n        /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3464:3466   */\n      0x20\n        /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3446:3467   */\n      mstore\n        /* \"#utility.yul\":3503:3505   */\n      0x16\n        /* \"#utility.yul\":3483:3501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3476:3506   */\n      mstore\n      shl(0x50, 0x496e76616c6964206d696e7465722061646472657373)\n        /* \"#utility.yul\":3522:3540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3515:3567   */\n      mstore\n        /* \"#utility.yul\":3584:3602   */\n      0x64\n      add\n        /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n      tag_101\n        /* \"#utility.yul\":3262:3608   */\n      jump\n        /* \"referralSystem.sol\":4335:4391  require(_minter != address(0), \"Invalid minter address\") */\n    tag_133:\n        /* \"referralSystem.sol\":4402:4408  minter */\n      0x06\n        /* \"referralSystem.sol\":4402:4418  minter = _minter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"referralSystem.sol\":4269:4426  function setMinter(address _minter) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3833:3865   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3815:3866   */\n      mstore\n        /* \"#utility.yul\":3882:3900   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3875:3909   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3925:3943   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3918:3952   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3788:3806   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_101\n        /* \"#utility.yul\":3613:3958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":583:634   */\n      mstore\n        /* \"#utility.yul\":556:574   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_101\n        /* \"#utility.yul\":437:640   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_171\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_176\n      swap1\n      pop\n      jump\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3833:3865   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3815:3866   */\n      mstore\n        /* \"#utility.yul\":3882:3900   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3875:3909   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3925:3943   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3918:3952   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3788:3806   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_101\n        /* \"#utility.yul\":3613:3958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_180)\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_181\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_24:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_182:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      0x00\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_187:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_31:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      0x00\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_189:\n        /* \"#utility.yul\":991:1020   */\n      tag_190\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_182\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_41:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      0x00\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      0x00\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_194:\n        /* \"#utility.yul\":1687:1716   */\n      tag_195\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_182\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_196\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_182\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":2070:2256   */\n    tag_53:\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2170:2179   */\n      dup3\n        /* \"#utility.yul\":2161:2168   */\n      dup5\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_199:\n        /* \"#utility.yul\":2221:2250   */\n      tag_200\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2221:2250   */\n      tag_182\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2211:2250   */\n      swap4\n        /* \"#utility.yul\":2070:2256   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_70:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      0x00\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      0x00\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_202:\n        /* \"#utility.yul\":2429:2458   */\n      tag_203\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_182\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_204\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_182\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_81:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_206:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_207:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3963:4185   */\n    tag_175:\n        /* \"#utility.yul\":4028:4037   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4049:4059   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4046:4179   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":4101:4111   */\n      0x4e487b71\n        /* \"#utility.yul\":4096:4099   */\n      0xe0\n        /* \"#utility.yul\":4092:4112   */\n      shl\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4082:4113   */\n      mstore\n        /* \"#utility.yul\":4136:4140   */\n      0x11\n        /* \"#utility.yul\":4133:4134   */\n      0x04\n        /* \"#utility.yul\":4126:4141   */\n      mstore\n        /* \"#utility.yul\":4164:4168   */\n      0x24\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4154:4169   */\n      revert\n\n    auxdata: 0xa2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1247": {
									"entryPoint": null,
									"id": 1247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 194,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2860:7",
										"nodeType": "YulBlock",
										"src": "0:2860:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:7",
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:7",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:7",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:7",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nativeSrc": "66:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nativeSrc": "56:31:7",
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nativeSrc": "56:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nativeSrc": "96:15:7",
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nativeSrc": "96:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nativeSrc": "120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nativeSrc": "120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nativeSrc": "201:325:7",
													"nodeType": "YulBlock",
													"src": "201:325:7",
													"statements": [
														{
															"nativeSrc": "211:22:7",
															"nodeType": "YulAssignment",
															"src": "211:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:7",
																		"nodeType": "YulLiteral",
																		"src": "225:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:7"
																},
																"nativeSrc": "221:12:7",
																"nodeType": "YulFunctionCall",
																"src": "221:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																}
															]
														},
														{
															"nativeSrc": "242:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:7"
																},
																"nativeSrc": "268:12:7",
																"nodeType": "YulFunctionCall",
																"src": "268:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:7",
																	"nodeType": "YulTypedName",
																	"src": "246:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:7",
																"nodeType": "YulBlock",
																"src": "319:31:7",
																"statements": [
																	{
																		"nativeSrc": "321:27:7",
																		"nodeType": "YulAssignment",
																		"src": "321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:7",
																					"nodeType": "YulLiteral",
																					"src": "343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:7"
																			},
																			"nativeSrc": "331:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:7"
																},
																"nativeSrc": "292:26:7",
																"nodeType": "YulFunctionCall",
																"src": "292:26:7"
															},
															"nativeSrc": "289:61:7",
															"nodeType": "YulIf",
															"src": "289:61:7"
														},
														{
															"body": {
																"nativeSrc": "409:111:7",
																"nodeType": "YulBlock",
																"src": "409:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:7",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:7",
																							"nodeType": "YulLiteral",
																							"src": "437:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:7",
																							"nodeType": "YulLiteral",
																							"src": "442:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:7"
																					},
																					"nativeSrc": "433:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:7"
																			},
																			"nativeSrc": "423:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:7"
																		},
																		"nativeSrc": "423:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:7",
																					"nodeType": "YulLiteral",
																					"src": "474:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:7",
																					"nodeType": "YulLiteral",
																					"src": "477:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:7"
																			},
																			"nativeSrc": "467:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:7"
																		},
																		"nativeSrc": "467:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:7",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:7",
																					"nodeType": "YulLiteral",
																					"src": "505:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:7"
																			},
																			"nativeSrc": "495:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:7"
																		},
																		"nativeSrc": "495:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:7",
																				"nodeType": "YulLiteral",
																				"src": "396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:7"
																		},
																		"nativeSrc": "385:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:7"
																},
																"nativeSrc": "362:38:7",
																"nodeType": "YulFunctionCall",
																"src": "362:38:7"
															},
															"nativeSrc": "359:161:7",
															"nodeType": "YulIf",
															"src": "359:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:7",
														"nodeType": "YulTypedName",
														"src": "181:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:7",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													}
												],
												"src": "146:380:7"
											},
											{
												"body": {
													"nativeSrc": "587:65:7",
													"nodeType": "YulBlock",
													"src": "587:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:7",
																		"nodeType": "YulLiteral",
																		"src": "604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nativeSrc": "597:14:7",
																"nodeType": "YulFunctionCall",
																"src": "597:14:7"
															},
															"nativeSrc": "597:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:7"
														},
														{
															"nativeSrc": "620:26:7",
															"nodeType": "YulAssignment",
															"src": "620:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:7",
																		"nodeType": "YulLiteral",
																		"src": "638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:7",
																		"nodeType": "YulLiteral",
																		"src": "641:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:7"
																},
																"nativeSrc": "628:18:7",
																"nodeType": "YulFunctionCall",
																"src": "628:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:7",
														"nodeType": "YulTypedName",
														"src": "570:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:7",
														"nodeType": "YulTypedName",
														"src": "578:4:7",
														"type": ""
													}
												],
												"src": "531:121:7"
											},
											{
												"body": {
													"nativeSrc": "738:437:7",
													"nodeType": "YulBlock",
													"src": "738:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:7",
																"nodeType": "YulBlock",
																"src": "771:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:7",
																					"nodeType": "YulLiteral",
																					"src": "792:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:7"
																			},
																			"nativeSrc": "785:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:7"
																		},
																		"nativeSrc": "785:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:7"
																	},
																	{
																		"nativeSrc": "814:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:7",
																					"nodeType": "YulLiteral",
																					"src": "836:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:7",
																					"nodeType": "YulLiteral",
																					"src": "839:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:7"
																			},
																			"nativeSrc": "826:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:7",
																				"nodeType": "YulTypedName",
																				"src": "818:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:7",
																							"nodeType": "YulLiteral",
																							"src": "890:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:7",
																									"nodeType": "YulLiteral",
																									"src": "909:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:7"
																							},
																							"nativeSrc": "893:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:7"
																					},
																					"nativeSrc": "886:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:7"
																			},
																			"nativeSrc": "876:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:7",
																				"nodeType": "YulTypedName",
																				"src": "861:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:7",
																			"nodeType": "YulBlock",
																			"src": "951:23:7",
																			"statements": [
																				{
																					"nativeSrc": "953:19:7",
																					"nodeType": "YulAssignment",
																					"src": "953:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:7",
																					"nodeType": "YulLiteral",
																					"src": "945:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:7"
																			},
																			"nativeSrc": "930:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:7"
																		},
																		"nativeSrc": "927:47:7",
																		"nodeType": "YulIf",
																		"src": "927:47:7"
																	},
																	{
																		"nativeSrc": "987:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:7"
																							},
																							"nativeSrc": "1014:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:7"
																					},
																					"nativeSrc": "1007:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:7"
																			},
																			"nativeSrc": "997:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:7",
																				"nodeType": "YulTypedName",
																				"src": "991:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:7",
																			"nodeType": "YulBlock",
																			"src": "1139:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:7"
																						},
																						"nativeSrc": "1141:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:7"
																					},
																					"nativeSrc": "1141:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:7"
																			},
																			"nativeSrc": "1086:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:7"
																		},
																		"nativeSrc": "1078:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:7",
																			"nodeType": "YulBlock",
																			"src": "1100:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:7"
																						},
																						"nativeSrc": "1111:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:7",
																			"nodeType": "YulBlock",
																			"src": "1082:3:7",
																			"statements": []
																		},
																		"src": "1078:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:7"
																},
																"nativeSrc": "751:11:7",
																"nodeType": "YulFunctionCall",
																"src": "751:11:7"
															},
															"nativeSrc": "748:421:7",
															"nodeType": "YulIf",
															"src": "748:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:7",
														"nodeType": "YulTypedName",
														"src": "710:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:7",
														"nodeType": "YulTypedName",
														"src": "717:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:7",
														"nodeType": "YulTypedName",
														"src": "722:10:7",
														"type": ""
													}
												],
												"src": "657:518:7"
											},
											{
												"body": {
													"nativeSrc": "1265:81:7",
													"nodeType": "YulBlock",
													"src": "1265:81:7",
													"statements": [
														{
															"nativeSrc": "1275:65:7",
															"nodeType": "YulAssignment",
															"src": "1275:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:7"
																								},
																								"nativeSrc": "1304:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:7"
																								},
																								"nativeSrc": "1317:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:7"
																						},
																						"nativeSrc": "1300:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:7"
																				},
																				"nativeSrc": "1296:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:7"
																		},
																		"nativeSrc": "1286:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:7"
																		},
																		"nativeSrc": "1328:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:7"
																},
																"nativeSrc": "1283:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:7",
														"nodeType": "YulTypedName",
														"src": "1242:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:7",
														"nodeType": "YulTypedName",
														"src": "1248:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:7",
														"nodeType": "YulTypedName",
														"src": "1256:4:7",
														"type": ""
													}
												],
												"src": "1180:166:7"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:7",
													"nodeType": "YulBlock",
													"src": "1447:1203:7",
													"statements": [
														{
															"nativeSrc": "1457:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:7"
																},
																"nativeSrc": "1471:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:7",
																"nodeType": "YulBlock",
																"src": "1524:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:7"
																			},
																			"nativeSrc": "1526:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:7"
																		},
																		"nativeSrc": "1526:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:7"
																				},
																				"nativeSrc": "1508:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:7"
																		},
																		"nativeSrc": "1504:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:7"
																},
																"nativeSrc": "1493:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:7"
															},
															"nativeSrc": "1490:56:7",
															"nodeType": "YulIf",
															"src": "1490:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:7"
																				},
																				"nativeSrc": "1631:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:7"
																		},
																		"nativeSrc": "1605:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:7"
																},
																"nativeSrc": "1555:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:7"
															},
															"nativeSrc": "1555:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:7"
														},
														{
															"nativeSrc": "1661:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:7",
																"nodeType": "YulLiteral",
																"src": "1678:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:7",
															"nodeType": "YulAssignment",
															"src": "1688:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:7",
																"nodeType": "YulLiteral",
																"src": "1701:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:7",
																		"nodeType": "YulBlock",
																		"src": "1751:642:7",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:7"
																							},
																							"nativeSrc": "1792:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:7"
																					},
																					"nativeSrc": "1780:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:7",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:7"
																					},
																					"nativeSrc": "1827:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:7",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:7",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:7",
																					"nodeType": "YulBlock",
																					"src": "1955:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:7"
																												},
																												"nativeSrc": "1994:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:7"
																										},
																										"nativeSrc": "1988:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:7"
																								},
																								"nativeSrc": "1973:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:7"
																							},
																							"nativeSrc": "1973:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:7"
																						},
																						{
																							"nativeSrc": "2032:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:7"
																								},
																								"nativeSrc": "2042:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:7",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:7"
																								},
																								"nativeSrc": "2086:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:7"
																					},
																					"nativeSrc": "1906:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:7"
																				},
																				"nativeSrc": "1898:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:7",
																					"nodeType": "YulBlock",
																					"src": "1921:21:7",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:7",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:7",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:7"
																								},
																								"nativeSrc": "1928:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:7",
																					"nodeType": "YulBlock",
																					"src": "1902:3:7",
																					"statements": []
																				},
																				"src": "1898:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:7",
																					"nodeType": "YulBlock",
																					"src": "2168:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:7"
																										},
																										"nativeSrc": "2209:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:7"
																								},
																								"nativeSrc": "2203:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:7"
																																		},
																																		"nativeSrc": "2288:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:7"
																																},
																																"nativeSrc": "2284:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:7"
																																},
																																"nativeSrc": "2310:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:7"
																														},
																														"nativeSrc": "2280:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:7"
																												},
																												"nativeSrc": "2276:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:7"
																										},
																										"nativeSrc": "2261:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:7"
																								},
																								"nativeSrc": "2246:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:7"
																							},
																							"nativeSrc": "2246:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:7"
																					},
																					"nativeSrc": "2136:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:7"
																				},
																				"nativeSrc": "2133:201:7",
																				"nodeType": "YulIf",
																				"src": "2133:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:7"
																									},
																									"nativeSrc": "2364:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:7"
																							},
																							"nativeSrc": "2360:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:7"
																					},
																					"nativeSrc": "2347:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:7"
																				},
																				"nativeSrc": "2347:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:7"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:7",
																	"nodeType": "YulCase",
																	"src": "1744:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:7",
																		"nodeType": "YulBlock",
																		"src": "2410:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:7",
																					"nodeType": "YulBlock",
																					"src": "2473:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:7"
																										},
																										"nativeSrc": "2506:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:7"
																								},
																								"nativeSrc": "2500:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:7"
																				},
																				"nativeSrc": "2451:89:7",
																				"nodeType": "YulIf",
																				"src": "2451:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:7"
																							},
																							"nativeSrc": "2566:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:7"
																					},
																					"nativeSrc": "2553:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:7"
																				},
																				"nativeSrc": "2553:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:7",
																	"nodeType": "YulCase",
																	"src": "2402:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:7"
																},
																"nativeSrc": "1721:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:7"
															},
															"nativeSrc": "1714:930:7",
															"nodeType": "YulSwitch",
															"src": "1714:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:7",
														"nodeType": "YulTypedName",
														"src": "1432:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:7",
														"nodeType": "YulTypedName",
														"src": "1438:3:7",
														"type": ""
													}
												],
												"src": "1351:1299:7"
											},
											{
												"body": {
													"nativeSrc": "2756:102:7",
													"nodeType": "YulBlock",
													"src": "2756:102:7",
													"statements": [
														{
															"nativeSrc": "2766:26:7",
															"nodeType": "YulAssignment",
															"src": "2766:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:7"
																},
																"nativeSrc": "2774:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:7"
																						},
																						"nativeSrc": "2835:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:7"
																				},
																				"nativeSrc": "2831:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:7"
																		},
																		"nativeSrc": "2819:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:7"
																},
																"nativeSrc": "2801:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:7"
															},
															"nativeSrc": "2801:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:7",
														"nodeType": "YulTypedName",
														"src": "2725:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:7",
														"nodeType": "YulTypedName",
														"src": "2736:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:7",
														"nodeType": "YulTypedName",
														"src": "2747:4:7",
														"type": ""
													}
												],
												"src": "2655:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280600f81526020016e149959995c9c985b0814995dd85c99608a1b8152506040518060400160405280600381526020016229232960e91b815250816003908161006491906101ab565b50600461007182826101ab565b5050506001600160a01b0381166100a157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100aa816100c2565b50600680546001600160a01b03191633179055610265565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061013b57607f821691505b60208210810361015957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101a657805f5260205f20601f840160051c810160208510156101845750805b601f840160051c820191505b818110156101a3575f8155600101610190565b50505b505050565b81516001600160401b038111156101c4576101c4610113565b6101d8816101d28454610127565b8461015f565b6020601f82116001811461020a575f83156101f35750848201515b5f19600385901b1c1916600184901b1784556101a3565b5f84815260208120601f198516915b828110156102395787850151825560209485019460019092019101610219565b508482101561025657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61099f806102725f395ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c806370a0823111610093578063a9059cbb11610063578063a9059cbb146101f2578063dd62ed3e14610205578063f2fde38b1461023d578063fca3b5aa14610250575f5ffd5b806370a08231146101a9578063715018a6146101d15780638da5cb5b146101d957806395d89b41146101ea575f5ffd5b806318160ddd116100ce57806318160ddd1461016057806323b872dd14610172578063313ce5671461018557806340c10f1914610194575f5ffd5b806306fdde03146100f45780630754617214610112578063095ea7b31461013d575b5f5ffd5b6100fc610263565b604051610109919061080f565b60405180910390f35b600654610125906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b61015061014b36600461085f565b6102f3565b6040519015158152602001610109565b6002545b604051908152602001610109565b610150610180366004610887565b61030c565b60405160128152602001610109565b6101a76101a236600461085f565b61032f565b005b6101646101b73660046108c1565b6001600160a01b03165f9081526020819052604090205490565b6101a7610395565b6005546001600160a01b0316610125565b6100fc6103a8565b61015061020036600461085f565b6103b7565b6101646102133660046108e1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a761024b3660046108c1565b6103c4565b6101a761025e3660046108c1565b610401565b60606003805461027290610912565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90610912565b80156102e95780601f106102c0576101008083540402835291602001916102e9565b820191905f5260205f20905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b5f3361030081858561047a565b60019150505b92915050565b5f3361031985828561048c565b610324858585610508565b506001949350505050565b6006546001600160a01b031633146103875760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b60448201526064015b60405180910390fd5b6103918282610565565b5050565b61039d610599565b6103a65f6105c6565b565b60606004805461027290610912565b5f33610300818585610508565b6103cc610599565b6001600160a01b0381166103f557604051631e4fbdf760e01b81525f600482015260240161037e565b6103fe816105c6565b50565b610409610599565b6001600160a01b0381166104585760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b604482015260640161037e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6104878383836001610617565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561050257818110156104f457604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161037e565b61050284848484035f610617565b50505050565b6001600160a01b03831661053157604051634b637e8f60e11b81525f600482015260240161037e565b6001600160a01b03821661055a5760405163ec442f0560e01b81525f600482015260240161037e565b6104878383836106e9565b6001600160a01b03821661058e5760405163ec442f0560e01b81525f600482015260240161037e565b6103915f83836106e9565b6005546001600160a01b031633146103a65760405163118cdaa760e01b815233600482015260240161037e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166106405760405163e602df0560e01b81525f600482015260240161037e565b6001600160a01b03831661066957604051634a1406b160e11b81525f600482015260240161037e565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561050257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106db91815260200190565b60405180910390a350505050565b6001600160a01b038316610713578060025f828254610708919061094a565b909155506107839050565b6001600160a01b0383165f90815260208190526040902054818110156107655760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037e565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107bd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461085a575f5ffd5b919050565b5f5f60408385031215610870575f5ffd5b61087983610844565b946020939093013593505050565b5f5f5f60608486031215610899575f5ffd5b6108a284610844565b92506108b060208501610844565b929592945050506040919091013590565b5f602082840312156108d1575f5ffd5b6108da82610844565b9392505050565b5f5f604083850312156108f2575f5ffd5b6108fb83610844565b915061090960208401610844565b90509250929050565b600181811c9082168061092657607f821691505b60208210810361094457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561030657634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x149959995C9C985B0814995DD85C99 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x292329 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0x1AB JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x71 DUP3 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA DUP2 PUSH2 0xC2 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x265 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x159 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1A6 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x184 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C4 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1D2 DUP5 SLOAD PUSH2 0x127 JUMP JUMPDEST DUP5 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x20A JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1F3 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x239 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x219 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x256 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x99F DUP1 PUSH2 0x272 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x250 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x125 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x395 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x125 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x319 DUP6 DUP3 DUP6 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x324 DUP6 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x391 DUP3 DUP3 PUSH2 0x565 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x39D PUSH2 0x599 JUMP JUMPDEST PUSH2 0x3A6 PUSH0 PUSH2 0x5C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x3CC PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x3FE DUP2 PUSH2 0x5C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x409 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x617 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x502 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x617 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x391 PUSH0 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x502 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x713 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x783 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x802 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x879 DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x899 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8A2 DUP5 PUSH2 0x844 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B0 PUSH1 0x20 DUP6 ADD PUSH2 0x844 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x844 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8FB DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP2 POP PUSH2 0x909 PUSH1 0x20 DUP5 ADD PUSH2 0x844 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x926 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x944 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x306 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xAA STATICCALL 0xDF 0xD0 0x4E BALANCE SWAP16 SWAP12 SWAP10 XOR MLOAD SELFBALANCE 0x2F 0x1F PUSH5 0xF08F4E8600 ADD EXTCODESIZE 0xA5 DUP13 GAS 0xD6 DATALOADN 0x9267 PUSH22 0x6064736F6C634300081D003300000000000000000000 ",
							"sourceMap": "3843:699:6:-:0;;;4000:137;;;;;;;;;;4054:10;1582:113:2;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2801:51:7;2774:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;4077:6:6::2;:19:::0;;-1:-1:-1;;;;;;4077:19:6::2;4086:10;4077:19;::::0;;3843:699;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:7;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:7;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:7;;;2500:26;2451:89;-1:-1:-1;;1308:1:7;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:7;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:7;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:7;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:7:o;2655:203::-;3843:699:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1146,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1559,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1433,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1381,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1164,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1478,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1288,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1769,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 755,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1296": {
									"entryPoint": 815,
									"id": 1296,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@minter_1230": {
									"entryPoint": null,
									"id": 1230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 611,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 917,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinter_1281": {
									"entryPoint": 1025,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 936,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 780,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 964,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 951,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4187:7",
										"nodeType": "YulBlock",
										"src": "0:4187:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:7",
													"nodeType": "YulBlock",
													"src": "135:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:7",
																		"nodeType": "YulLiteral",
																		"src": "163:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:7"
																},
																"nativeSrc": "145:21:7",
																"nodeType": "YulFunctionCall",
																"src": "145:21:7"
															},
															"nativeSrc": "145:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:7"
														},
														{
															"nativeSrc": "175:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:7"
																},
																"nativeSrc": "189:13:7",
																"nodeType": "YulFunctionCall",
																"src": "189:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:7",
																	"nodeType": "YulTypedName",
																	"src": "179:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:7",
																				"nodeType": "YulLiteral",
																				"src": "233:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:7"
																		},
																		"nativeSrc": "218:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																},
																"nativeSrc": "211:34:7",
																"nodeType": "YulFunctionCall",
																"src": "211:34:7"
															},
															"nativeSrc": "211:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "275:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:7"
																		},
																		"nativeSrc": "260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:7"
																		},
																		"nativeSrc": "280:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:7"
																},
																"nativeSrc": "254:50:7",
																"nodeType": "YulFunctionCall",
																"src": "254:50:7"
															},
															"nativeSrc": "254:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:7"
																				},
																				"nativeSrc": "324:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:7",
																				"nodeType": "YulLiteral",
																				"src": "348:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:7"
																		},
																		"nativeSrc": "320:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:7",
																		"nodeType": "YulLiteral",
																		"src": "353:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:7"
																},
																"nativeSrc": "313:42:7",
																"nodeType": "YulFunctionCall",
																"src": "313:42:7"
															},
															"nativeSrc": "313:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:7"
														},
														{
															"nativeSrc": "364:62:7",
															"nodeType": "YulAssignment",
															"src": "364:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:7",
																								"nodeType": "YulLiteral",
																								"src": "407:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:7"
																						},
																						"nativeSrc": "395:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:7",
																								"nodeType": "YulLiteral",
																								"src": "416:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:7"
																						},
																						"nativeSrc": "412:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:7"
																				},
																				"nativeSrc": "391:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:7"
																		},
																		"nativeSrc": "376:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:7",
																		"nodeType": "YulLiteral",
																		"src": "423:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:7"
																},
																"nativeSrc": "372:54:7",
																"nodeType": "YulFunctionCall",
																"src": "372:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:7",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:7",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:7",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:418:7"
											},
											{
												"body": {
													"nativeSrc": "538:102:7",
													"nodeType": "YulBlock",
													"src": "538:102:7",
													"statements": [
														{
															"nativeSrc": "548:26:7",
															"nodeType": "YulAssignment",
															"src": "548:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "560:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "560:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "571:2:7",
																		"nodeType": "YulLiteral",
																		"src": "571:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:3:7"
																},
																"nativeSrc": "556:18:7",
																"nodeType": "YulFunctionCall",
																"src": "556:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "548:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "548:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "590:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "621:3:7",
																								"nodeType": "YulLiteral",
																								"src": "621:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "626:1:7",
																								"nodeType": "YulLiteral",
																								"src": "626:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "617:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "617:3:7"
																						},
																						"nativeSrc": "617:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "617:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "630:1:7",
																						"nodeType": "YulLiteral",
																						"src": "630:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:7"
																				},
																				"nativeSrc": "613:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "613:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "601:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:7"
																		},
																		"nativeSrc": "601:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "601:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "583:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "583:6:7"
																},
																"nativeSrc": "583:51:7",
																"nodeType": "YulFunctionCall",
																"src": "583:51:7"
															},
															"nativeSrc": "583:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "583:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "437:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "507:9:7",
														"nodeType": "YulTypedName",
														"src": "507:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "518:6:7",
														"nodeType": "YulTypedName",
														"src": "518:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "529:4:7",
														"nodeType": "YulTypedName",
														"src": "529:4:7",
														"type": ""
													}
												],
												"src": "437:203:7"
											},
											{
												"body": {
													"nativeSrc": "694:124:7",
													"nodeType": "YulBlock",
													"src": "694:124:7",
													"statements": [
														{
															"nativeSrc": "704:29:7",
															"nodeType": "YulAssignment",
															"src": "704:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:7"
																},
																"nativeSrc": "713:20:7",
																"nodeType": "YulFunctionCall",
																"src": "713:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:7",
																"nodeType": "YulBlock",
																"src": "796:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:7",
																					"nodeType": "YulLiteral",
																					"src": "805:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:7",
																					"nodeType": "YulLiteral",
																					"src": "808:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:7"
																			},
																			"nativeSrc": "798:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:7"
																		},
																		"nativeSrc": "798:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:7",
																										"nodeType": "YulLiteral",
																										"src": "781:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:7",
																										"nodeType": "YulLiteral",
																										"src": "786:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:7"
																								},
																								"nativeSrc": "777:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:7",
																								"nodeType": "YulLiteral",
																								"src": "790:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:7"
																						},
																						"nativeSrc": "773:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:7"
																				},
																				"nativeSrc": "762:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:7"
																		},
																		"nativeSrc": "752:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:50:7",
																"nodeType": "YulFunctionCall",
																"src": "745:50:7"
															},
															"nativeSrc": "742:70:7",
															"nodeType": "YulIf",
															"src": "742:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:7",
														"nodeType": "YulTypedName",
														"src": "673:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:7",
														"nodeType": "YulTypedName",
														"src": "684:5:7",
														"type": ""
													}
												],
												"src": "645:173:7"
											},
											{
												"body": {
													"nativeSrc": "910:213:7",
													"nodeType": "YulBlock",
													"src": "910:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:7",
																"nodeType": "YulBlock",
																"src": "956:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:7",
																					"nodeType": "YulLiteral",
																					"src": "965:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:7",
																					"nodeType": "YulLiteral",
																					"src": "968:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:7"
																			},
																			"nativeSrc": "958:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:7"
																		},
																		"nativeSrc": "958:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:7"
																		},
																		"nativeSrc": "927:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:7",
																		"nodeType": "YulLiteral",
																		"src": "952:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:7"
																},
																"nativeSrc": "923:32:7",
																"nodeType": "YulFunctionCall",
																"src": "923:32:7"
															},
															"nativeSrc": "920:52:7",
															"nodeType": "YulIf",
															"src": "920:52:7"
														},
														{
															"nativeSrc": "981:39:7",
															"nodeType": "YulAssignment",
															"src": "981:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:7"
																},
																"nativeSrc": "991:29:7",
																"nodeType": "YulFunctionCall",
																"src": "991:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:7"
																}
															]
														},
														{
															"nativeSrc": "1029:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:7",
																"nodeType": "YulLiteral",
																"src": "1042:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:7",
															"nodeType": "YulAssignment",
															"src": "1052:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:7"
																		},
																		"nativeSrc": "1074:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:7"
																},
																"nativeSrc": "1061:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:7"
																}
															]
														},
														{
															"nativeSrc": "1102:15:7",
															"nodeType": "YulAssignment",
															"src": "1102:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:7",
																"nodeType": "YulIdentifier",
																"src": "1112:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:7",
														"nodeType": "YulTypedName",
														"src": "868:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:7",
														"nodeType": "YulTypedName",
														"src": "879:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:7",
														"nodeType": "YulTypedName",
														"src": "899:6:7",
														"type": ""
													}
												],
												"src": "823:300:7"
											},
											{
												"body": {
													"nativeSrc": "1223:92:7",
													"nodeType": "YulBlock",
													"src": "1223:92:7",
													"statements": [
														{
															"nativeSrc": "1233:26:7",
															"nodeType": "YulAssignment",
															"src": "1233:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:7"
																},
																"nativeSrc": "1241:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:7"
																				},
																				"nativeSrc": "1293:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:7"
																		},
																		"nativeSrc": "1286:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:7"
																},
																"nativeSrc": "1268:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:7"
															},
															"nativeSrc": "1268:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:7",
														"nodeType": "YulTypedName",
														"src": "1192:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:7",
														"nodeType": "YulTypedName",
														"src": "1203:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:7",
														"nodeType": "YulTypedName",
														"src": "1214:4:7",
														"type": ""
													}
												],
												"src": "1128:187:7"
											},
											{
												"body": {
													"nativeSrc": "1421:76:7",
													"nodeType": "YulBlock",
													"src": "1421:76:7",
													"statements": [
														{
															"nativeSrc": "1431:26:7",
															"nodeType": "YulAssignment",
															"src": "1431:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:7"
																},
																"nativeSrc": "1439:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:7"
																},
																"nativeSrc": "1466:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:7"
															},
															"nativeSrc": "1466:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:7",
														"nodeType": "YulTypedName",
														"src": "1390:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:7",
														"nodeType": "YulTypedName",
														"src": "1401:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:7",
														"nodeType": "YulTypedName",
														"src": "1412:4:7",
														"type": ""
													}
												],
												"src": "1320:177:7"
											},
											{
												"body": {
													"nativeSrc": "1606:270:7",
													"nodeType": "YulBlock",
													"src": "1606:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:7",
																"nodeType": "YulBlock",
																"src": "1652:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:7"
																			},
																			"nativeSrc": "1654:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:7"
																		},
																		"nativeSrc": "1654:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:7"
																		},
																		"nativeSrc": "1623:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:7"
																},
																"nativeSrc": "1619:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:7"
															},
															"nativeSrc": "1616:52:7",
															"nodeType": "YulIf",
															"src": "1616:52:7"
														},
														{
															"nativeSrc": "1677:39:7",
															"nodeType": "YulAssignment",
															"src": "1677:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:7"
																},
																"nativeSrc": "1687:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:7"
																}
															]
														},
														{
															"nativeSrc": "1725:48:7",
															"nodeType": "YulAssignment",
															"src": "1725:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:7"
																		},
																		"nativeSrc": "1754:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:7"
																},
																"nativeSrc": "1735:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:7"
																}
															]
														},
														{
															"nativeSrc": "1782:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:7",
																"nodeType": "YulLiteral",
																"src": "1795:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:7",
															"nodeType": "YulAssignment",
															"src": "1805:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:7"
																		},
																		"nativeSrc": "1827:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:7"
																},
																"nativeSrc": "1814:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:7"
																}
															]
														},
														{
															"nativeSrc": "1855:15:7",
															"nodeType": "YulAssignment",
															"src": "1855:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:7",
																"nodeType": "YulIdentifier",
																"src": "1865:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:7",
														"nodeType": "YulTypedName",
														"src": "1556:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:7",
														"nodeType": "YulTypedName",
														"src": "1567:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:7",
														"nodeType": "YulTypedName",
														"src": "1579:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:7",
														"nodeType": "YulTypedName",
														"src": "1587:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:7",
														"nodeType": "YulTypedName",
														"src": "1595:6:7",
														"type": ""
													}
												],
												"src": "1502:374:7"
											},
											{
												"body": {
													"nativeSrc": "1978:87:7",
													"nodeType": "YulBlock",
													"src": "1978:87:7",
													"statements": [
														{
															"nativeSrc": "1988:26:7",
															"nodeType": "YulAssignment",
															"src": "1988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2000:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1996:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:7"
																},
																"nativeSrc": "1996:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2030:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2045:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2053:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2053:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2041:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:7"
																		},
																		"nativeSrc": "2041:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:7"
																},
																"nativeSrc": "2023:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2023:36:7"
															},
															"nativeSrc": "2023:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2023:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1881:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1947:9:7",
														"nodeType": "YulTypedName",
														"src": "1947:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1958:6:7",
														"nodeType": "YulTypedName",
														"src": "1958:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1969:4:7",
														"nodeType": "YulTypedName",
														"src": "1969:4:7",
														"type": ""
													}
												],
												"src": "1881:184:7"
											},
											{
												"body": {
													"nativeSrc": "2140:116:7",
													"nodeType": "YulBlock",
													"src": "2140:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:7",
																"nodeType": "YulBlock",
																"src": "2186:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:7"
																			},
																			"nativeSrc": "2188:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:7"
																		},
																		"nativeSrc": "2188:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:7"
																		},
																		"nativeSrc": "2157:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:7"
																},
																"nativeSrc": "2153:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:7"
															},
															"nativeSrc": "2150:52:7",
															"nodeType": "YulIf",
															"src": "2150:52:7"
														},
														{
															"nativeSrc": "2211:39:7",
															"nodeType": "YulAssignment",
															"src": "2211:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:7"
																},
																"nativeSrc": "2221:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2070:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2106:9:7",
														"nodeType": "YulTypedName",
														"src": "2106:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2117:7:7",
														"nodeType": "YulTypedName",
														"src": "2117:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2129:6:7",
														"nodeType": "YulTypedName",
														"src": "2129:6:7",
														"type": ""
													}
												],
												"src": "2070:186:7"
											},
											{
												"body": {
													"nativeSrc": "2348:173:7",
													"nodeType": "YulBlock",
													"src": "2348:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:7",
																"nodeType": "YulBlock",
																"src": "2394:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:7"
																			},
																			"nativeSrc": "2396:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:7"
																		},
																		"nativeSrc": "2396:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:7"
																		},
																		"nativeSrc": "2365:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:7"
																},
																"nativeSrc": "2361:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:7"
															},
															"nativeSrc": "2358:52:7",
															"nodeType": "YulIf",
															"src": "2358:52:7"
														},
														{
															"nativeSrc": "2419:39:7",
															"nodeType": "YulAssignment",
															"src": "2419:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:7"
																},
																"nativeSrc": "2429:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:7"
																}
															]
														},
														{
															"nativeSrc": "2467:48:7",
															"nodeType": "YulAssignment",
															"src": "2467:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:7"
																		},
																		"nativeSrc": "2496:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:7"
																},
																"nativeSrc": "2477:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:7",
														"nodeType": "YulTypedName",
														"src": "2306:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:7",
														"nodeType": "YulTypedName",
														"src": "2317:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:7",
														"nodeType": "YulTypedName",
														"src": "2329:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:7",
														"nodeType": "YulTypedName",
														"src": "2337:6:7",
														"type": ""
													}
												],
												"src": "2261:260:7"
											},
											{
												"body": {
													"nativeSrc": "2581:325:7",
													"nodeType": "YulBlock",
													"src": "2581:325:7",
													"statements": [
														{
															"nativeSrc": "2591:22:7",
															"nodeType": "YulAssignment",
															"src": "2591:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:7"
																},
																"nativeSrc": "2601:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:7"
																}
															]
														},
														{
															"nativeSrc": "2622:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:7"
																},
																"nativeSrc": "2648:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:7",
																"nodeType": "YulBlock",
																"src": "2699:31:7",
																"statements": [
																	{
																		"nativeSrc": "2701:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:7"
																			},
																			"nativeSrc": "2711:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:7"
																},
																"nativeSrc": "2672:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:7"
															},
															"nativeSrc": "2669:61:7",
															"nodeType": "YulIf",
															"src": "2669:61:7"
														},
														{
															"body": {
																"nativeSrc": "2789:111:7",
																"nodeType": "YulBlock",
																"src": "2789:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:7"
																					},
																					"nativeSrc": "2813:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:7"
																			},
																			"nativeSrc": "2803:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:7"
																		},
																		"nativeSrc": "2803:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:7"
																			},
																			"nativeSrc": "2847:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:7"
																		},
																		"nativeSrc": "2847:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:7"
																			},
																			"nativeSrc": "2875:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:7"
																		},
																		"nativeSrc": "2875:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:7"
																		},
																		"nativeSrc": "2765:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:7"
																},
																"nativeSrc": "2742:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:7"
															},
															"nativeSrc": "2739:161:7",
															"nodeType": "YulIf",
															"src": "2739:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:7",
														"nodeType": "YulTypedName",
														"src": "2561:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:7",
														"nodeType": "YulTypedName",
														"src": "2570:6:7",
														"type": ""
													}
												],
												"src": "2526:380:7"
											},
											{
												"body": {
													"nativeSrc": "3085:172:7",
													"nodeType": "YulBlock",
													"src": "3085:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3102:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3102:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3113:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:7"
																},
																"nativeSrc": "3095:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3095:21:7"
															},
															"nativeSrc": "3095:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3095:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3136:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3136:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3147:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3147:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3132:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:7"
																		},
																		"nativeSrc": "3132:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3152:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3152:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:7"
																},
																"nativeSrc": "3125:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3125:30:7"
															},
															"nativeSrc": "3125:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3125:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:7"
																		},
																		"nativeSrc": "3171:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:7"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "3191:24:7",
																		"nodeType": "YulLiteral",
																		"src": "3191:24:7",
																		"type": "",
																		"value": "Not authorized to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3164:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:7"
																},
																"nativeSrc": "3164:52:7",
																"nodeType": "YulFunctionCall",
																"src": "3164:52:7"
															},
															"nativeSrc": "3164:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "3164:52:7"
														},
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2911:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3062:9:7",
														"nodeType": "YulTypedName",
														"src": "3062:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3076:4:7",
														"nodeType": "YulTypedName",
														"src": "3076:4:7",
														"type": ""
													}
												],
												"src": "2911:346:7"
											},
											{
												"body": {
													"nativeSrc": "3436:172:7",
													"nodeType": "YulBlock",
													"src": "3436:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3453:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3453:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3464:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3464:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3446:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:7"
																},
																"nativeSrc": "3446:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3446:21:7"
															},
															"nativeSrc": "3446:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3446:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3487:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3498:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3498:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3483:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:7"
																		},
																		"nativeSrc": "3483:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3483:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3503:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3503:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3476:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:7"
																},
																"nativeSrc": "3476:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3476:30:7"
															},
															"nativeSrc": "3476:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3476:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3526:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3526:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3537:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3537:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3522:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3522:3:7"
																		},
																		"nativeSrc": "3522:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:18:7"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e7465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "3542:24:7",
																		"nodeType": "YulLiteral",
																		"src": "3542:24:7",
																		"type": "",
																		"value": "Invalid minter address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3515:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3515:6:7"
																},
																"nativeSrc": "3515:52:7",
																"nodeType": "YulFunctionCall",
																"src": "3515:52:7"
															},
															"nativeSrc": "3515:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "3515:52:7"
														},
														{
															"nativeSrc": "3576:26:7",
															"nodeType": "YulAssignment",
															"src": "3576:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3588:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3588:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3599:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3599:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3584:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3584:3:7"
																},
																"nativeSrc": "3584:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3584:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3576:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3576:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3262:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3413:9:7",
														"nodeType": "YulTypedName",
														"src": "3413:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3427:4:7",
														"nodeType": "YulTypedName",
														"src": "3427:4:7",
														"type": ""
													}
												],
												"src": "3262:346:7"
											},
											{
												"body": {
													"nativeSrc": "3770:188:7",
													"nodeType": "YulBlock",
													"src": "3770:188:7",
													"statements": [
														{
															"nativeSrc": "3780:26:7",
															"nodeType": "YulAssignment",
															"src": "3780:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3792:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3792:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3803:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3788:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3788:3:7"
																},
																"nativeSrc": "3788:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3788:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3780:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3822:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3822:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3837:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3837:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3853:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3853:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3858:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3858:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3849:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3849:3:7"
																						},
																						"nativeSrc": "3849:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3849:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3862:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3862:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3845:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3845:3:7"
																				},
																				"nativeSrc": "3845:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3845:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:7"
																		},
																		"nativeSrc": "3833:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3833:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:7"
																},
																"nativeSrc": "3815:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3815:51:7"
															},
															"nativeSrc": "3815:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3815:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3886:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3886:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3897:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3897:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3882:3:7"
																		},
																		"nativeSrc": "3882:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3902:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3902:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3875:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:7"
																},
																"nativeSrc": "3875:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3875:34:7"
															},
															"nativeSrc": "3875:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3875:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3929:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3929:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3940:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3940:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3925:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:7"
																		},
																		"nativeSrc": "3925:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3925:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3945:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3945:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3918:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:7"
																},
																"nativeSrc": "3918:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3918:34:7"
															},
															"nativeSrc": "3918:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3918:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3613:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3723:9:7",
														"nodeType": "YulTypedName",
														"src": "3723:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3734:6:7",
														"nodeType": "YulTypedName",
														"src": "3734:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3742:6:7",
														"nodeType": "YulTypedName",
														"src": "3742:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3750:6:7",
														"nodeType": "YulTypedName",
														"src": "3750:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3761:4:7",
														"nodeType": "YulTypedName",
														"src": "3761:4:7",
														"type": ""
													}
												],
												"src": "3613:345:7"
											},
											{
												"body": {
													"nativeSrc": "4011:174:7",
													"nodeType": "YulBlock",
													"src": "4011:174:7",
													"statements": [
														{
															"nativeSrc": "4021:16:7",
															"nodeType": "YulAssignment",
															"src": "4021:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4032:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4032:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4035:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4035:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4028:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:7"
																},
																"nativeSrc": "4028:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4028:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4068:111:7",
																"nodeType": "YulBlock",
																"src": "4068:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4089:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4089:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4096:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4096:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4101:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4101:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4092:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4092:3:7"
																					},
																					"nativeSrc": "4092:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4092:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4082:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4082:6:7"
																			},
																			"nativeSrc": "4082:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4082:31:7"
																		},
																		"nativeSrc": "4082:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4082:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4133:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4133:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4136:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4136:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4126:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4126:6:7"
																			},
																			"nativeSrc": "4126:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4126:15:7"
																		},
																		"nativeSrc": "4126:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4126:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4161:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4161:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4164:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4164:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4154:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4154:6:7"
																			},
																			"nativeSrc": "4154:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4154:15:7"
																		},
																		"nativeSrc": "4154:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4154:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4052:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4052:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4055:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4055:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4049:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4049:2:7"
																},
																"nativeSrc": "4049:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4049:10:7"
															},
															"nativeSrc": "4046:133:7",
															"nodeType": "YulIf",
															"src": "4046:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3963:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3994:1:7",
														"nodeType": "YulTypedName",
														"src": "3994:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3997:1:7",
														"nodeType": "YulTypedName",
														"src": "3997:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4003:3:7",
														"nodeType": "YulTypedName",
														"src": "4003:3:7",
														"type": ""
													}
												],
												"src": "3963:222:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not authorized to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid minter address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c806370a0823111610093578063a9059cbb11610063578063a9059cbb146101f2578063dd62ed3e14610205578063f2fde38b1461023d578063fca3b5aa14610250575f5ffd5b806370a08231146101a9578063715018a6146101d15780638da5cb5b146101d957806395d89b41146101ea575f5ffd5b806318160ddd116100ce57806318160ddd1461016057806323b872dd14610172578063313ce5671461018557806340c10f1914610194575f5ffd5b806306fdde03146100f45780630754617214610112578063095ea7b31461013d575b5f5ffd5b6100fc610263565b604051610109919061080f565b60405180910390f35b600654610125906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b61015061014b36600461085f565b6102f3565b6040519015158152602001610109565b6002545b604051908152602001610109565b610150610180366004610887565b61030c565b60405160128152602001610109565b6101a76101a236600461085f565b61032f565b005b6101646101b73660046108c1565b6001600160a01b03165f9081526020819052604090205490565b6101a7610395565b6005546001600160a01b0316610125565b6100fc6103a8565b61015061020036600461085f565b6103b7565b6101646102133660046108e1565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101a761024b3660046108c1565b6103c4565b6101a761025e3660046108c1565b610401565b60606003805461027290610912565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90610912565b80156102e95780601f106102c0576101008083540402835291602001916102e9565b820191905f5260205f20905b8154815290600101906020018083116102cc57829003601f168201915b5050505050905090565b5f3361030081858561047a565b60019150505b92915050565b5f3361031985828561048c565b610324858585610508565b506001949350505050565b6006546001600160a01b031633146103875760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b60448201526064015b60405180910390fd5b6103918282610565565b5050565b61039d610599565b6103a65f6105c6565b565b60606004805461027290610912565b5f33610300818585610508565b6103cc610599565b6001600160a01b0381166103f557604051631e4fbdf760e01b81525f600482015260240161037e565b6103fe816105c6565b50565b610409610599565b6001600160a01b0381166104585760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b604482015260640161037e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6104878383836001610617565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561050257818110156104f457604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161037e565b61050284848484035f610617565b50505050565b6001600160a01b03831661053157604051634b637e8f60e11b81525f600482015260240161037e565b6001600160a01b03821661055a5760405163ec442f0560e01b81525f600482015260240161037e565b6104878383836106e9565b6001600160a01b03821661058e5760405163ec442f0560e01b81525f600482015260240161037e565b6103915f83836106e9565b6005546001600160a01b031633146103a65760405163118cdaa760e01b815233600482015260240161037e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166106405760405163e602df0560e01b81525f600482015260240161037e565b6001600160a01b03831661066957604051634a1406b160e11b81525f600482015260240161037e565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561050257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106db91815260200190565b60405180910390a350505050565b6001600160a01b038316610713578060025f828254610708919061094a565b909155506107839050565b6001600160a01b0383165f90815260208190526040902054818110156107655760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037e565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107bd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461085a575f5ffd5b919050565b5f5f60408385031215610870575f5ffd5b61087983610844565b946020939093013593505050565b5f5f5f60608486031215610899575f5ffd5b6108a284610844565b92506108b060208501610844565b929592945050506040919091013590565b5f602082840312156108d1575f5ffd5b6108da82610844565b9392505050565b5f5f604083850312156108f2575f5ffd5b6108fb83610844565b915061090960208401610844565b90509250929050565b600181811c9082168061092657607f821691505b60208210810361094457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561030657634e487b7160e01b5f52601160045260245ffdfea2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x250 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x125 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x395 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x125 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x912 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x319 DUP6 DUP3 DUP6 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x324 DUP6 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x391 DUP3 DUP3 PUSH2 0x565 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x39D PUSH2 0x599 JUMP JUMPDEST PUSH2 0x3A6 PUSH0 PUSH2 0x5C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x912 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x300 DUP2 DUP6 DUP6 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x3CC PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x3FE DUP2 PUSH2 0x5C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x409 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x617 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x502 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x617 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x391 PUSH0 DUP4 DUP4 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x502 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x713 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x783 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x802 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x879 DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x899 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8A2 DUP5 PUSH2 0x844 JUMP JUMPDEST SWAP3 POP PUSH2 0x8B0 PUSH1 0x20 DUP6 ADD PUSH2 0x844 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x844 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x8FB DUP4 PUSH2 0x844 JUMP JUMPDEST SWAP2 POP PUSH2 0x909 PUSH1 0x20 DUP5 ADD PUSH2 0x844 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x926 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x944 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x306 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xAA STATICCALL 0xDF 0xD0 0x4E BALANCE SWAP16 SWAP12 SWAP10 XOR MLOAD SELFBALANCE 0x2F 0x1F PUSH5 0xF08F4E8600 ADD EXTCODESIZE 0xA5 DUP13 GAS 0xD6 DATALOADN 0x9267 PUSH22 0x6064736F6C634300081D003300000000000000000000 ",
							"sourceMap": "3843:699:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3960:21:6;;;;;-1:-1:-1;;;;;3960:21:6;;;;;;-1:-1:-1;;;;;601:32:7;;;583:51;;571:2;556:18;3960:21:6;437:203:7;3979:186:2;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:7;;1286:22;1268:41;;1256:2;1241:18;3979:186:2;1128:187:7;2830:97:2;2908:12;;2830:97;;;1466:25:7;;;1454:2;1439:18;2830:97:2;1320:177:7;4757:244:2;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2023:36:7;;2011:2;1996:18;2688:82:2;1881:184:7;4437:102:6;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1962:93:2;;;:::i;3296:178::-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:0;;;;;;:::i;:::-;;:::i;4269:157:6:-;;;;;;:::i;:::-;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;4437:102:6:-;4202:6;;-1:-1:-1;;;;;4202:6:6;4188:10;:20;4180:55;;;;-1:-1:-1;;;4180:55:6;;3113:2:7;4180:55:6;;;3095:21:7;3152:2;3132:18;;;3125:30;-1:-1:-1;;;3171:18:7;;;3164:52;3233:18;;4180:55:6;;;;;;;;;4512:19:::1;4518:3;4523:7;4512:5;:19::i;:::-;4437:102:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;583:51:7::0;556:18;;2672:31:0::1;437:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4269:157:6:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4343:21:6;::::1;4335:56;;;::::0;-1:-1:-1;;;4335:56:6;;3464:2:7;4335:56:6::1;::::0;::::1;3446:21:7::0;3503:2;3483:18;;;3476:30;-1:-1:-1;;;3522:18:7;;;3515:52;3584:18;;4335:56:6::1;3262:346:7::0;4335:56:6::1;4402:6;:16:::0;;-1:-1:-1;;;;;;4402:16:6::1;-1:-1:-1::0;;;;;4402:16:6;;;::::1;::::0;;;::::1;::::0;;4269:157::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;3833:32:7;;10668:60:2;;;3815:51:7;3882:18;;;3875:34;;;3925:18;;;3918:34;;;3788:18;;10668:60:2;3613:345:7;10613:130:2;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;583:51:7;556:18;;5498:30:2;437:203:7;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;583:51:7;556:18;;5591:32:2;437:203:7;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;7439:208::-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;583:51:7;556:18;;7553:32:2;437:203:7;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;583:51:7;556:18;;1901:40:0;437:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9682:432:2:-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;583:51:7;556:18;;9836:32:2;437:203:7;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;583:51:7;556:18;;9936:31:2;437:203:7;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1466:25:7;;1454:2;1439:18;;1320:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;3833:32:7;;6367:50:2;;;3815:51:7;3882:18;;;3875:34;;;3925:18;;;3918:34;;;3788:18;;6367:50:2;3613:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1466::7;;1454:2;1439:18;;1320:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:418:7:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:7;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:7:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:7;1827:18;;;;1814:32;;1502:374::o;2070:186::-;2129:6;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;2070:186;-1:-1:-1;;;2070:186:7:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3963:222::-;4028:9;;;4049:10;;;4046:133;;;4101:10;4096:3;4092:20;4089:1;4082:31;4136:4;4133:1;4126:15;4164:4;4161:1;4154:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "492600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24779",
								"balanceOf(address)": "2560",
								"decimals()": "243",
								"mint(address,uint256)": "infinite",
								"minter()": "2382",
								"name()": "infinite",
								"owner()": "2397",
								"renounceOwnership()": "infinite",
								"setMinter(address)": "26856",
								"symbol()": "infinite",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51237",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28399"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4000,
									"end": 4137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4054,
									"end": 4064,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "149959995C9C985B0814995DD85C99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "292329"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4077,
									"end": 4083,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4077,
									"end": 4096,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4077,
									"end": 4096,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4077,
									"end": 4096,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4086,
									"end": 4096,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 4077,
									"end": 4096,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4077,
									"end": 4096,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4077,
									"end": 4096,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3843,
									"end": 4542,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2aafadfd04e319f9b991851472f1f64f08f4e8600013ba58c5ad6d19267756064736f6c634300081d0033",
									".code": [
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "FCA3B5AA"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "7546172"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 4542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 601,
											"end": 633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 601,
											"end": 633,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 601,
											"end": 633,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 583,
											"end": 634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1881,
											"end": 2065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4437,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4437,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4269,
											"end": 4426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4269,
											"end": 4426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4198,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4208,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4180,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4518,
											"end": 4521,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4530,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4512,
											"end": 4531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4512,
											"end": 4531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4269,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4391,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4335,
											"end": 4391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4335,
											"end": 4391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3476,
											"end": 3506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7465722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3262,
											"end": 3608,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4335,
											"end": 4391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4418,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3865,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3613,
											"end": 3958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 556,
											"end": 574,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 556,
											"end": 574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 437,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3865,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3865,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3613,
											"end": 3958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3963,
											"end": 4185,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3963,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4059,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4179,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4046,
											"end": 4179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4096,
											"end": 4099,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4140,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4126,
											"end": 4141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4168,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4169,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"referralSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"minter()": "07546172",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMinter(address)": "fca3b5aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"referralSystem.sol\":\"RewardToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"referralSystem.sol\":{\"keccak256\":\"0x0c10f094d1f60ba651d4776ac5f7d58596b5eaab89f679782d16877278b69790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabb63d81a7a6e31bfe45b5b0c4dda9770df73b32c2d865cb645cd265b38b089\",\"dweb:/ipfs/QmTH3HLJKLphxbXxvj3F8BUwa23fWW2VY5XGC1V4ZPmpqS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "referralSystem.sol:RewardToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1230,
								"contract": "referralSystem.sol:RewardToken",
								"label": "minter",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"referralSystem.sol": {
				"ast": {
					"absolutePath": "referralSystem.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"ReferralRewards": [
							1224
						],
						"RewardToken": [
							1297
						]
					},
					"id": 1298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1298,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1298,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"202:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "202:7:6"
								}
							],
							"canonicalName": "ReferralRewards",
							"contractDependencies": [
								1297
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								147,
								933
							],
							"name": "ReferralRewards",
							"nameLocation": "183:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 942,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "275:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "256:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_RewardToken_$1297",
										"typeString": "contract RewardToken"
									},
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "RewardToken",
											"nameLocations": [
												"256:11:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1297,
											"src": "256:11:6"
										},
										"referencedDeclaration": 1297,
										"src": "256:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardToken_$1297",
											"typeString": "contract RewardToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5539d400",
									"id": 944,
									"mutability": "mutable",
									"name": "authorizedAddress",
									"nameLocation": "386:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "371:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 943,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "371:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0763f34e",
									"id": 951,
									"mutability": "mutable",
									"name": "referrerReward",
									"nameLocation": "481:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "466:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										},
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 946,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "498:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 949,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 947,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "503:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 948,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "507:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "503:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "498:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "544ef43e",
									"id": 958,
									"mutability": "mutable",
									"name": "refereeReward",
									"nameLocation": "544:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "529:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 953,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "560:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 956,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 954,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "565:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 955,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "569:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "565:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "560:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d62c1164",
									"id": 962,
									"mutability": "mutable",
									"name": "hasBeenReferred",
									"nameLocation": "694:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "662:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 961,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 959,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "670:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "662:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 960,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "681:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21cacdf",
									"id": 966,
									"mutability": "mutable",
									"name": "referrerOf",
									"nameLocation": "804:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "769:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 965,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 963,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "769:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 964,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "788:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27b692f2",
									"id": 971,
									"mutability": "mutable",
									"name": "refereesOf",
									"nameLocation": "923:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "886:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 967,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "894:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "886:29:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 968,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "905:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 969,
											"nodeType": "ArrayTypeName",
											"src": "905:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90eab5d1df713df401d810f26aa9718d2b9e6894af1eb4890a332d3b185dc0e5",
									"id": 979,
									"name": "ReferralRegistered",
									"nameLocation": "967:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1002:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "986:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": true,
												"mutability": "mutable",
												"name": "referee",
												"nameLocation": "1028:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1012:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1045:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1037:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:70:6"
									},
									"src": "961:95:6"
								},
								{
									"anonymous": false,
									"eventSelector": "1a4dfb075362880d700ede1cc31d284b1c3b2811e9f0b2ddde7bdb270042c13f",
									"id": 989,
									"name": "RewardsDistributed",
									"nameLocation": "1068:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1103:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1087:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "referee",
												"nameLocation": "1129:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1113:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "referrerAmount",
												"nameLocation": "1146:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1138:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "refereeAmount",
												"nameLocation": "1170:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1162:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:98:6"
									},
									"src": "1062:123:6"
								},
								{
									"anonymous": false,
									"eventSelector": "86c40840b13041fdf3b73496c0f80da8bef6a34805cb1ca99e01fd3e13d4b196",
									"id": 995,
									"name": "AuthorizedAddressChanged",
									"nameLocation": "1197:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousBackend",
												"nameLocation": "1238:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1222:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "newBackend",
												"nameLocation": "1271:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1255:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:61:6"
									},
									"src": "1191:92:6"
								},
								{
									"anonymous": false,
									"eventSelector": "457ddc8afba479da2edda90d1b2c537cee16f285d7eb06529b28aabe56a0e974",
									"id": 1001,
									"name": "RewardAmountsChanged",
									"nameLocation": "1295:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "newReferrerReward",
												"nameLocation": "1324:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1316:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRefereeReward",
												"nameLocation": "1351:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1343:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:53:6"
									},
									"src": "1289:80:6"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1421:147:6",
										"statements": [
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_RewardToken_$1297",
															"typeString": "contract RewardToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1446:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RewardToken_$1297_$",
																"typeString": "function () returns (contract RewardToken)"
															},
															"typeName": {
																"id": 1010,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1009,
																	"name": "RewardToken",
																	"nameLocations": [
																		"1450:11:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1297,
																	"src": "1450:11:6"
																},
																"referencedDeclaration": 1297,
																"src": "1450:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardToken_$1297",
																	"typeString": "contract RewardToken"
																}
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1446:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_RewardToken_$1297",
															"typeString": "contract RewardToken"
														}
													},
													"src": "1432:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_RewardToken_$1297",
														"typeString": "contract RewardToken"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1432:31:6"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "authorizedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1474:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1016,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1494:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1498:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1494:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1474:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "1474:30:6"
											}
										]
									},
									"id": 1021,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1004,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1409:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1413:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1409:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1006,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1003,
												"name": "Ownable",
												"nameLocations": [
													"1401:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1401:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1401:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1398:2:6"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:0:6"
									},
									"scope": 1224,
									"src": "1387:181:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "1617:89:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1024,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1636:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1640:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1636:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1026,
																"name": "authorizedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "1650:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1636:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1669:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1628:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "1628:58:6"
											},
											{
												"id": 1031,
												"nodeType": "PlaceholderStatement",
												"src": "1697:1:6"
											}
										]
									},
									"id": 1033,
									"name": "onlyAuthorizedAddress",
									"nameLocation": "1593:21:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1614:2:6"
									},
									"src": "1584:122:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "1789:186:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "_newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "1808:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1831:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1823:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1823:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1823:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1808:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1835:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1800:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1800:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1800:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1051,
															"name": "authorizedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1894:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "_newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1913:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1050,
														"name": "AuthorizedAddressChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1869:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "EmitStatement",
												"src": "1864:61:6"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "authorizedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1936:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1956:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1936:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1936:31:6"
											}
										]
									},
									"functionSelector": "865aa800",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1037,
												"name": "onlyOwner",
												"nameLocations": [
													"1779:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1779:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1779:9:6"
										}
									],
									"name": "setAuthorizedAddres",
									"nameLocation": "1729:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_newAddress",
												"nameLocation": "1757:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1749:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:21:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:6"
									},
									"scope": 1224,
									"src": "1720:255:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "2087:161:6",
										"statements": [
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "referrerReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2098:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1070,
														"name": "_referrerReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "2115:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2098:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "2098:32:6"
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "refereeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2141:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1074,
														"name": "_refereeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2157:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2141:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "2141:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1078,
															"name": "_referrerReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "2208:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1079,
															"name": "_refereeReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2225:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "RewardAmountsChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "2187:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2187:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "2182:58:6"
											}
										]
									},
									"functionSelector": "d113ef7c",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1067,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1066,
												"name": "onlyOwner",
												"nameLocations": [
													"2077:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2077:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2077:9:6"
										}
									],
									"name": "setRewardAmounts",
									"nameLocation": "2002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_referrerReward",
												"nameLocation": "2027:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2019:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "_refereeReward",
												"nameLocation": "2052:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2044:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:49:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:0:6"
									},
									"scope": 1224,
									"src": "1993:255:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "2354:1197:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1093,
																	"name": "_referee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "2404:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2424:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2416:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2416:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2416:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2404:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "_referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "2430:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2451:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2443:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2443:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2443:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2430:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2404:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2455:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2396:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2396:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2396:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "_referee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "2537:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1111,
																"name": "_referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "2549:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2537:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d726566657272616c206e6f7420616c6c6f776564",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2560:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24693cbf331f8776549a6476daecf3779a7fb0344f3f94378ad2815b27df1656",
																"typeString": "literal_string \"Self-referral not allowed\""
															},
															"value": "Self-referral not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24693cbf331f8776549a6476daecf3779a7fb0344f3f94378ad2815b27df1656",
																"typeString": "literal_string \"Self-referral not allowed\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2529:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2529:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2529:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2677:26:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1117,
																	"name": "hasBeenReferred",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "2678:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1119,
																"indexExpression": {
																	"id": 1118,
																	"name": "_referee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "2694:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2678:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220616c7265616479207265666572726564",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2705:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4384e7ed8e425f09a62ef633ab79ec38fad4d0d23a88a5ab0d6b0f55b3b7d264",
																"typeString": "literal_string \"User already referred\""
															},
															"value": "User already referred"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4384e7ed8e425f09a62ef633ab79ec38fad4d0d23a88a5ab0d6b0f55b3b7d264",
																"typeString": "literal_string \"User already referred\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2669:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2669:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2669:60:6"
											},
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "currentReferrer",
														"nameLocation": "2813:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "2805:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1124,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2805:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"id": 1126,
													"name": "_referrer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1085,
													"src": "2831:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2805:35:6"
											},
											{
												"body": {
													"id": 1147,
													"nodeType": "Block",
													"src": "2889:153:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1135,
																			"name": "currentReferrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "2912:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1136,
																			"name": "_referee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "2931:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2912:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43697263756c617220726566657272616c206465746563746564",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2941:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e07b753f1b040295834bcceead3d83e1d0ee5270c3d4cf78b56c0d53c46941df",
																			"typeString": "literal_string \"Circular referral detected\""
																		},
																		"value": "Circular referral detected"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e07b753f1b040295834bcceead3d83e1d0ee5270c3d4cf78b56c0d53c46941df",
																			"typeString": "literal_string \"Circular referral detected\""
																		}
																	],
																	"id": 1134,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2904:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2904:66:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1140,
															"nodeType": "ExpressionStatement",
															"src": "2904:66:6"
														},
														{
															"expression": {
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1141,
																	"name": "currentReferrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "2985:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1142,
																		"name": "referrerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "3003:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1144,
																	"indexExpression": {
																		"id": 1143,
																		"name": "currentReferrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "3014:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3003:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2985:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "2985:45:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "currentReferrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2858:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2885:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2877:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2877:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2858:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "WhileStatement",
												"src": "2851:191:6"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1149,
															"name": "hasBeenReferred",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "3096:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1151,
														"indexExpression": {
															"id": 1150,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3112:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3096:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3124:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3096:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "3096:32:6"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "referrerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "3139:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3150:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3139:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "_referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3162:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3139:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3139:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3209:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1161,
																"name": "refereesOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "3182:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1163,
															"indexExpression": {
																"id": 1162,
																"name": "_referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "3193:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3182:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3182:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "3182:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1169,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3263:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3274:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1171,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3284:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3290:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3284:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1168,
														"name": "ReferralRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3244:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "EmitStatement",
												"src": "3239:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3369:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "referrerReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "3380:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1175,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3352:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RewardToken_$1297",
																"typeString": "contract RewardToken"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3364:4:6",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1296,
														"src": "3352:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "3352:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1185,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3423:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "refereeReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3433:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1182,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3406:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RewardToken_$1297",
																"typeString": "contract RewardToken"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3418:4:6",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1296,
														"src": "3406:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3406:41:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1190,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3492:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "_referee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3503:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "referrerReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "3513:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1193,
															"name": "refereeReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3529:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"name": "RewardsDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "3473:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3473:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "EmitStatement",
												"src": "3468:75:6"
											}
										]
									},
									"functionSelector": "55bf73be",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "onlyAuthorizedAddress",
												"nameLocations": [
													"2332:21:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1033,
												"src": "2332:21:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2332:21:6"
										}
									],
									"name": "processReferral",
									"nameLocation": "2271:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "2295:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2287:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_referee",
												"nameLocation": "2313:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2305:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:36:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:0:6"
									},
									"scope": 1224,
									"src": "2262:1289:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "3643:47:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1205,
														"name": "refereesOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "3661:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1207,
													"indexExpression": {
														"id": 1206,
														"name": "_referrer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3672:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3661:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1204,
												"id": 1208,
												"nodeType": "Return",
												"src": "3654:28:6"
											}
										]
									},
									"functionSelector": "d499bc85",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReferees",
									"nameLocation": "3571:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "3591:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3583:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:19:6"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3625:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1201,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3625:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1202,
													"nodeType": "ArrayTypeName",
													"src": "3625:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:18:6"
									},
									"scope": 1224,
									"src": "3562:128:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3780:54:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1217,
															"name": "refereesOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "3798:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																"typeString": "mapping(address => address[] storage ref)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"id": 1218,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3809:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3798:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3820:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3798:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1221,
												"nodeType": "Return",
												"src": "3791:35:6"
											}
										]
									},
									"functionSelector": "2c070d7d",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRefereeCount",
									"nameLocation": "3713:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "3737:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3729:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3728:19:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3771:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:9:6"
									},
									"scope": 1224,
									"src": "3704:130:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1298,
							"src": "174:3663:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								979,
								989,
								995,
								1001
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1225,
										"name": "ERC20",
										"nameLocations": [
											"3867:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "3867:5:6"
									},
									"id": 1226,
									"nodeType": "InheritanceSpecifier",
									"src": "3867:5:6"
								},
								{
									"baseName": {
										"id": 1227,
										"name": "Ownable",
										"nameLocations": [
											"3874:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "3874:7:6"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "3874:7:6"
								}
							],
							"canonicalName": "RewardToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1297,
							"linearizedBaseContracts": [
								1297,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "RewardToken",
							"nameLocation": "3852:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "07546172",
									"id": 1230,
									"mutability": "mutable",
									"name": "minter",
									"nameLocation": "3975:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1297,
									"src": "3960:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3960:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "4066:71:6",
										"statements": [
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "4077:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1242,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4086:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4090:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4086:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4077:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "4077:19:6"
											}
										]
									},
									"id": 1247,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "526566657272616c20526577617264",
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4020:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb6cfaeff747e5648fb4adb1be50a9f6d39229dfdccc7f80c3629d91677ecd98",
														"typeString": "literal_string \"Referral Reward\""
													},
													"value": "Referral Reward"
												},
												{
													"hexValue": "524652",
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4039:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_67291347a0c880f41d0d4b9e15f8f31108c073bee889bdd6d10715063bb4630e",
														"typeString": "literal_string \"RFR\""
													},
													"value": "RFR"
												}
											],
											"id": 1235,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1232,
												"name": "ERC20",
												"nameLocations": [
													"4014:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "4014:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4014:31:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1237,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4054:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4058:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4054:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1239,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1236,
												"name": "Ownable",
												"nameLocations": [
													"4046:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4046:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4046:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4011:2:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:0:6"
									},
									"scope": 1297,
									"src": "4000:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "4169:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1250,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4188:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4192:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4188:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1252,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "4202:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4188:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4210:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															},
															"value": "Not authorized to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4180:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4180:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "4180:55:6"
											},
											{
												"id": 1257,
												"nodeType": "PlaceholderStatement",
												"src": "4246:1:6"
											}
										]
									},
									"id": 1259,
									"name": "onlyMinter",
									"nameLocation": "4156:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:2:6"
									},
									"src": "4147:108:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "4324:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "_minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "4343:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4362:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4354:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1268,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4354:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4354:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4343:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e7465722061646472657373",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4366:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7",
																"typeString": "literal_string \"Invalid minter address\""
															},
															"value": "Invalid minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7",
																"typeString": "literal_string \"Invalid minter address\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4335:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4335:56:6"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "4402:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1277,
														"name": "_minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "4411:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4402:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "4402:16:6"
											}
										]
									},
									"functionSelector": "fca3b5aa",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1263,
												"name": "onlyOwner",
												"nameLocations": [
													"4314:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4314:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4314:9:6"
										}
									],
									"name": "setMinter",
									"nameLocation": "4278:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_minter",
												"nameLocation": "4296:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4288:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:17:6"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4324:0:6"
									},
									"scope": 1297,
									"src": "4269:157:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "4501:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4518:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "4523:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1290,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4512:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4512:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "4512:19:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyMinter",
												"nameLocations": [
													"4490:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1259,
												"src": "4490:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4490:10:6"
										}
									],
									"name": "mint",
									"nameLocation": "4446:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4459:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4451:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4472:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "4464:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4450:30:6"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4501:0:6"
									},
									"scope": 1297,
									"src": "4437:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1298,
							"src": "3843:699:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:4509:6"
				},
				"id": 6
			}
		}
	}
}